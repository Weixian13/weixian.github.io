<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WX&#39;s Tune</title>
  
  <subtitle>喜欢就坚持下去吧</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://weixian13.github.io/"/>
  <updated>2021-02-07T11:27:20.554Z</updated>
  <id>https://weixian13.github.io/</id>
  
  <author>
    <name>风与牧歌</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>跨语言跨服务器通信</title>
    <link href="https://weixian13.github.io/2020/12/02/%E8%B7%A8%E8%AF%AD%E8%A8%80%E8%B7%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E4%BF%A1/"/>
    <id>https://weixian13.github.io/2020/12/02/跨语言跨服务器通信/</id>
    <published>2020-12-02T04:01:07.000Z</published>
    <updated>2021-02-07T11:27:20.554Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一步一步敲"><a href="#一步一步敲" class="headerlink" title="一步一步敲"></a>一步一步敲</h1><h2 id="通信流程：前端-—-axios-—-gt-web端-—-gRPC-—-gt-srv端"><a href="#通信流程：前端-—-axios-—-gt-web端-—-gRPC-—-gt-srv端" class="headerlink" title="通信流程：前端 —(axios)—&gt; web端 —(gRPC)—&gt; srv端"></a>通信流程：前端 —(axios)—&gt; web端 —(gRPC)—&gt; srv端</h2><a id="more"></a><h1 id="1-环境安装"><a href="#1-环境安装" class="headerlink" title="1.环境安装"></a>1.环境安装</h1><h3 id="1-Python"><a href="#1-Python" class="headerlink" title="1.Python"></a>1.Python</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip3 install grpcio</span><br><span class="line">pip3 install protobuf</span><br><span class="line">pip3 install grpcio-tools</span><br></pre></td></tr></table></figure><h1 id="2-proto的编译"><a href="#2-proto的编译" class="headerlink" title="2.proto的编译"></a>2.proto的编译</h1><h3 id="1-Python-1"><a href="#1-Python-1" class="headerlink" title="1.Python"></a>1.Python</h3><h5 id="在当前Srv服务器生成proto文件"><a href="#在当前Srv服务器生成proto文件" class="headerlink" title="在当前Srv服务器生成proto文件"></a>在当前Srv服务器生成proto文件</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m grpc_tools.protoc --python_out=. --grpc_python_out=. -I.  [PATH/NAME]</span><br></pre></td></tr></table></figure><h5 id="在Web服务器生成proto文件-web服务器为go语言服务器"><a href="#在Web服务器生成proto文件-web服务器为go语言服务器" class="headerlink" title="在Web服务器生成proto文件[web服务器为go语言服务器]"></a>在Web服务器生成proto文件[web服务器为go语言服务器]</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protoc --proto_path=. --micro_out=Mproto/imports/api.proto=github.com/micro/<span class="keyword">go</span>-micro/v2/api/proto:/usr/local/<span class="keyword">go</span>/src/path --go_out=Mproto/imports/api.proto=github.com/micro/<span class="keyword">go</span>-micro/v2/api/proto:/usr/local/<span class="keyword">go</span>/src/path  proto/aesSrv/aesSrv.proto</span><br></pre></td></tr></table></figure><h3 id="2-Golang"><a href="#2-Golang" class="headerlink" title="2.Golang"></a>2.Golang</h3><h5 id="在当前Srv服务器生成proto文件-1"><a href="#在当前Srv服务器生成proto文件-1" class="headerlink" title="在当前Srv服务器生成proto文件"></a>在当前Srv服务器生成proto文件</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protoc --proto_path=. --micro_out=Mproto/imports/api.proto=github.com/micro/<span class="keyword">go</span>-micro/v2/api/proto:. --go_out=Mproto/imports/api.proto=github.com/micro/<span class="keyword">go</span>-micro/v2/api/proto:. [PATH/NAME]</span><br></pre></td></tr></table></figure><h5 id="在Web服务器生成proto文件"><a href="#在Web服务器生成proto文件" class="headerlink" title="在Web服务器生成proto文件"></a>在Web服务器生成proto文件</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protoc --proto_path=. --micro_out=Mproto/imports/api.proto=github.com/micro/<span class="keyword">go</span>-micro/v2/api/proto:/usr/local/<span class="keyword">go</span>/src/path --go_out=Mproto/imports/api.proto=github.com/micro/<span class="keyword">go</span>-micro/v2/api/proto:/usr/local/<span class="keyword">go</span>/src/path  proto/aesSrv/aesSrv.proto</span><br></pre></td></tr></table></figure><h1 id="3-创建python-service端"><a href="#3-创建python-service端" class="headerlink" title="3.创建python service端"></a>3.创建python service端</h1><h3 id="1-创建编译protobuf文件"><a href="#1-创建编译protobuf文件" class="headerlink" title="1.创建编译protobuf文件"></a>1.创建编译protobuf文件</h3><h3 id="2-创建对应的gRPC服务连接"><a href="#2-创建对应的gRPC服务连接" class="headerlink" title="2.创建对应的gRPC服务连接"></a>2.创建对应的gRPC服务连接</h3><h3 id="3-将python-service端服务注册到consul服务发现中心"><a href="#3-将python-service端服务注册到consul服务发现中心" class="headerlink" title="3.将python service端服务注册到consul服务发现中心"></a>3.将python service端服务注册到consul服务发现中心</h3><h1 id="4-创建go-service端"><a href="#4-创建go-service端" class="headerlink" title="4.创建go service端"></a>4.创建go service端</h1><h3 id="1-命令创建"><a href="#1-命令创建" class="headerlink" title="1.命令创建"></a>1.命令创建</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">micro <span class="built_in">new</span> --<span class="keyword">type</span> service --namespace user.srv src/workspace/web_test/userSrv</span><br></pre></td></tr></table></figure><h3 id="2-快捷编译proto文件"><a href="#2-快捷编译proto文件" class="headerlink" title="2.快捷编译proto文件"></a>2.快捷编译proto文件</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd userSrv</span><br><span class="line"><span class="built_in">make</span> proto</span><br></pre></td></tr></table></figure><h3 id="3-添加consul支持的包"><a href="#3-添加consul支持的包" class="headerlink" title="3.添加consul支持的包"></a>3.添加consul支持的包</h3><h5 id="修改main-go"><a href="#修改main-go" class="headerlink" title="修改main.go"></a>修改main.go</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"github.com/micro/go-micro/v2/registry"</span></span><br><span class="line"><span class="string">"github.com/micro/go-plugins/registry/consul/v2"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 新建consul注册器</span></span><br><span class="line">consulReg := consul.NewRegistry(</span><br><span class="line">    <span class="comment">// 注册的consul信息</span></span><br><span class="line">    registry.Addrs(<span class="string">"127.0.0.1:8500"</span>),</span><br><span class="line">)</span><br><span class="line"><span class="comment">// New Service</span></span><br><span class="line">service := micro.NewService(</span><br><span class="line">    <span class="comment">// 服务名称</span></span><br><span class="line">    micro.Name(<span class="string">"AES.userSrv"</span>),</span><br><span class="line">    <span class="comment">// 服务版本</span></span><br><span class="line">    micro.Version(<span class="string">"latest"</span>),</span><br><span class="line">    <span class="comment">// 服务添加consul支持</span></span><br><span class="line">    micro.Registry(consulReg),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h1 id="5-创建go-web端"><a href="#5-创建go-web端" class="headerlink" title="5.创建go web端"></a>5.创建go web端</h1><h3 id="1-命令创建-1"><a href="#1-命令创建-1" class="headerlink" title="1.命令创建"></a>1.命令创建</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">micro <span class="built_in">new</span> --<span class="keyword">type</span> web --namespace sc.web src/workspace/web_test/web</span><br></pre></td></tr></table></figure><h3 id="2-添加consul支持的包"><a href="#2-添加consul支持的包" class="headerlink" title="2.添加consul支持的包"></a>2.添加consul支持的包</h3><h5 id="修改main-go-1"><a href="#修改main-go-1" class="headerlink" title="修改main.go"></a>修改main.go</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"github.com/micro/go-micro/v2/registry"</span></span><br><span class="line"><span class="string">"github.com/micro/go-plugins/registry/consul/v2"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 新建consul注册器</span></span><br><span class="line">consulReg := consul.NewRegistry(</span><br><span class="line">        <span class="comment">// 注册的consul信息</span></span><br><span class="line">        registry.Addrs(<span class="string">"127.0.0.1:8500"</span>),</span><br><span class="line">)</span><br><span class="line"><span class="comment">// create new web service</span></span><br><span class="line"><span class="comment">// 新建web服务</span></span><br><span class="line">service := web.NewService(</span><br><span class="line">        <span class="comment">// 服务名称</span></span><br><span class="line">        web.Name(<span class="string">"AES.web"</span>),</span><br><span class="line">        <span class="comment">// 服务版本</span></span><br><span class="line">        web.Version(<span class="string">"latest"</span>),</span><br><span class="line">        <span class="comment">// 服务添加consul支持</span></span><br><span class="line">        web.Registry(consulReg),</span><br><span class="line">        <span class="comment">// web服务监听的ip和port</span></span><br><span class="line">        web.Address(<span class="string">"127.0.0.1:8081"</span>),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="3-handler的初步设置"><a href="#3-handler的初步设置" class="headerlink" title="3.handler的初步设置"></a>3.handler的初步设置</h3><h5 id="导入gRPC包"><a href="#导入gRPC包" class="headerlink" title="导入gRPC包"></a>导入gRPC包</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"github.com/micro/go-micro/v2/service/grpc"</span></span><br></pre></td></tr></table></figure><h5 id="导入service端的proto包"><a href="#导入service端的proto包" class="headerlink" title="导入service端的proto包"></a>导入service端的proto包</h5><p>因为web没有proto文件，且当前目录指向为GOROOT目录,而非GOPATH目录<br>因此，我将user/proto/user这个目录复制到了path路径下。<br>因而完整路径为 /usr/local/go/src/path/proto/userSrv<br>后续相关服务端的proto文件可依此进行处理</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userSrv <span class="string">"path/proto/userSrv"</span></span><br></pre></td></tr></table></figure><h5 id="WebCall函数的初步修改"><a href="#WebCall函数的初步修改" class="headerlink" title="WebCall函数的初步修改"></a>WebCall函数的初步修改</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用grpc创建客户端服务</span></span><br><span class="line">cli := grpc.NewService()</span><br><span class="line"><span class="comment">// 客户端服务初始化</span></span><br><span class="line">cli.Init()</span><br><span class="line"><span class="comment">// 基于后端服务 AES.userSrv 创建web客户端</span></span><br><span class="line"><span class="comment">// NewUserSrvService 要和 proto 文件下的 pb.micro.go 的 NewUserSrvService方法名一致</span></span><br><span class="line">webClient := userSrv.NewUserSrvService(<span class="string">"AES.userSrv"</span>, cli.Client())</span><br><span class="line"><span class="comment">// call the backend service</span></span><br><span class="line">rsp, err := webClient.Call(context.TODO(), &amp;userSrv.Request&#123;</span><br><span class="line">Name: request[<span class="string">"name"</span>].(<span class="keyword">string</span>),</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">http.Error(w, err.Error(), <span class="number">500</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-consul单点测试"><a href="#6-consul单点测试" class="headerlink" title="6.consul单点测试"></a>6.consul单点测试</h1><h5 id="consul服务启动"><a href="#consul服务启动" class="headerlink" title="consul服务启动"></a>consul服务启动</h5><pre><code>consul agent -dev</code></pre><h5 id="service服务启动"><a href="#service服务启动" class="headerlink" title="service服务启动"></a>service服务启动</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> mod tidy</span><br><span class="line"><span class="keyword">go</span> run main.<span class="keyword">go</span></span><br></pre></td></tr></table></figure><h5 id="web端服务启动"><a href="#web端服务启动" class="headerlink" title="web端服务启动"></a>web端服务启动</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> mod tidy</span><br><span class="line"><span class="keyword">go</span> run main.<span class="keyword">go</span></span><br></pre></td></tr></table></figure><h5 id="测试结果界面"><a href="#测试结果界面" class="headerlink" title="测试结果界面"></a>测试结果界面</h5><p><img src="https://raw.githubusercontent.com/Weixian13/img_hexo/main/17.png" alt></p><h1 id="7-web端整合gin框架"><a href="#7-web端整合gin框架" class="headerlink" title="7.web端整合gin框架"></a>7.web端整合gin框架</h1><h3 id="1-添加gin路由"><a href="#1-添加gin路由" class="headerlink" title="1.添加gin路由"></a>1.添加gin路由</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加gin路由</span></span><br><span class="line">router := gin.Default()</span><br></pre></td></tr></table></figure><h3 id="2-服务添加router支持"><a href="#2-服务添加router支持" class="headerlink" title="2.服务添加router支持"></a>2.服务添加router支持</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//服务添加router支持</span></span><br><span class="line">web.Handler(router),</span><br></pre></td></tr></table></figure><h3 id="3-router结构调整"><a href="#3-router结构调整" class="headerlink" title="3.router结构调整"></a>3.router结构调整</h3><h5 id="总路由项目结构"><a href="#总路由项目结构" class="headerlink" title="总路由项目结构"></a>总路由项目结构</h5><p><code>web/router/router.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> all_router</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line">   <span class="string">"web/controller/user"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitRouter</span><span class="params">(router *gin.Engine)</span></span>  &#123;</span><br><span class="line">   <span class="comment">//路由组的设置</span></span><br><span class="line">   userGroup := router.Group(<span class="string">"/user"</span>)</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   <span class="comment">//调用分路由</span></span><br><span class="line">   <span class="comment">//web/controller/user/Router()</span></span><br><span class="line">   user.Router(userGroup)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="分路由项目结构"><a href="#分路由项目结构" class="headerlink" title="分路由项目结构"></a>分路由项目结构</h5><p><code>web/controller/user/router.go</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> user</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"github.com/gin-gonic/gin"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Router</span><span class="params">(router *gin.RouterGroup)</span></span> &#123;</span><br><span class="line"><span class="comment">//样例</span></span><br><span class="line"><span class="comment">//router.GET("/",handlerFuc)</span></span><br><span class="line"><span class="comment">//router.POST("/",handlerFuc)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="main-go使用总路由"><a href="#main-go使用总路由" class="headerlink" title="main.go使用总路由"></a>main.go使用总路由</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加gin路由</span></span><br><span class="line">router := gin.Default()</span><br><span class="line"><span class="comment">//使用总路由</span></span><br><span class="line">all_router.InitRouter(router)</span><br><span class="line"><span class="comment">// 新建web服务</span></span><br><span class="line">service := web.NewService(</span><br><span class="line"><span class="comment">// 服务名称</span></span><br><span class="line">web.Name(<span class="string">"AES.web"</span>),</span><br><span class="line"><span class="comment">// 服务版本</span></span><br><span class="line">web.Version(<span class="string">"latest"</span>),</span><br><span class="line"><span class="comment">// 服务添加consul支持</span></span><br><span class="line">web.Registry(consulReg),</span><br><span class="line"><span class="comment">// web服务监听的ip和port</span></span><br><span class="line">web.Address(<span class="string">"127.0.0.1:8080"</span>),</span><br><span class="line">web.Handler(router),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h1 id="8-userSrv端数据库连接"><a href="#8-userSrv端数据库连接" class="headerlink" title="8.userSrv端数据库连接"></a>8.userSrv端数据库连接</h1><h3 id="1-定义模型"><a href="#1-定义模型" class="headerlink" title="1.定义模型"></a>1.定义模型</h3><h5 id="定义模型"><a href="#定义模型" class="headerlink" title="定义模型"></a>定义模型</h5><h5 id="自定义表名"><a href="#自定义表名" class="headerlink" title="自定义表名"></a>自定义表名</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(User)</span><span class="title">TableName</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="string">"User"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-gorm配置连接数据库"><a href="#2-gorm配置连接数据库" class="headerlink" title="2.gorm配置连接数据库"></a>2.gorm配置连接数据库</h3><h5 id="数据库配置-userSrv-conf"><a href="#数据库配置-userSrv-conf" class="headerlink" title="数据库配置  userSrv/conf"></a>数据库配置  <code>userSrv/conf</code></h5><h5 id="数据库模型-userSrv-models"><a href="#数据库模型-userSrv-models" class="headerlink" title="数据库模型 userSrv/models"></a>数据库模型 <code>userSrv/models</code></h5><h5 id="数据库连接-userSrv-dao"><a href="#数据库连接-userSrv-dao" class="headerlink" title="数据库连接 userSrv/dao"></a>数据库连接 <code>userSrv/dao</code></h5><h5 id="Main-go-中引入dao，使其初始化-quot-userSrv-dao-quot"><a href="#Main-go-中引入dao，使其初始化-quot-userSrv-dao-quot" class="headerlink" title="Main.go 中引入dao，使其初始化 _ &quot;userSrv/dao&quot;"></a>Main.go 中引入dao，使其初始化 <code>_ &quot;userSrv/dao&quot;</code></h5><h1 id="9-userSrv端接收数据"><a href="#9-userSrv端接收数据" class="headerlink" title="9.userSrv端接收数据"></a>9.userSrv端接收数据</h1><h3 id="1-用于注册的proto文件定义"><a href="#1-用于注册的proto文件定义" class="headerlink" title="1.用于注册的proto文件定义"></a>1.用于注册的proto文件定义</h3><h5 id="定义通信方法-此方法为对外的接口"><a href="#定义通信方法-此方法为对外的接口" class="headerlink" title="定义通信方法(此方法为对外的接口)"></a>定义通信方法(此方法为对外的接口)</h5><h5 id="定义通信信息"><a href="#定义通信信息" class="headerlink" title="定义通信信息"></a>定义通信信息</h5><h5 id="编译proto文件"><a href="#编译proto文件" class="headerlink" title="编译proto文件"></a>编译proto文件</h5><p><code>protoc --proto_path=. --micro_out=Mproto/imports/api.proto=github.com/micro/go-micro/v2/api/proto:. --go_out=Mproto/imports/api.proto=github.com/micro/go-micro/v2/api/proto:. proto/userSrv/userSrv.proto</code></p><h3 id="2-为通信方法编写逻辑"><a href="#2-为通信方法编写逻辑" class="headerlink" title="2.为通信方法编写逻辑"></a>2.为通信方法编写逻辑</h3><h5 id="定义容器"><a href="#定义容器" class="headerlink" title="定义容器"></a>定义容器</h5><h5 id="编写通信方法"><a href="#编写通信方法" class="headerlink" title="编写通信方法"></a>编写通信方法</h5><h5 id="使用容器实现通信方法"><a href="#使用容器实现通信方法" class="headerlink" title="使用容器实现通信方法"></a>使用容器实现通信方法</h5><h3 id="3-引入数据库保存数据"><a href="#3-引入数据库保存数据" class="headerlink" title="3.引入数据库保存数据"></a><span id="jump_1">3.引入数据库保存数据</span></h3><h5 id="1-初始化user结构体"><a href="#1-初始化user结构体" class="headerlink" title="1.初始化user结构体"></a>1.初始化user结构体</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化user结构体</span></span><br><span class="line">user := models.User&#123;</span><br><span class="line">   Email: email,</span><br><span class="line">   Password: password,</span><br><span class="line">   Gender: gender,</span><br><span class="line">   CreateTime: time.Now(),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-创建user的数据表"><a href="#2-创建user的数据表" class="headerlink" title="2.创建user的数据表"></a>2.创建user的数据表</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建user的数据表</span></span><br><span class="line">dao.Db.Create(&amp;user)</span><br></pre></td></tr></table></figure><h1 id="10-web端接收数据"><a href="#10-web端接收数据" class="headerlink" title="10.web端接收数据"></a>10.web端接收数据</h1><h3 id="1-跨域请求的设置"><a href="#1-跨域请求的设置" class="headerlink" title="1.跨域请求的设置"></a>1.跨域请求的设置</h3><h5 id="使用全局中间件"><a href="#使用全局中间件" class="headerlink" title="使用全局中间件"></a>使用全局中间件</h5><h3 id="2-与前端一致，需设置校验规则，防止传输数据不规则"><a href="#2-与前端一致，需设置校验规则，防止传输数据不规则" class="headerlink" title="2.与前端一致，需设置校验规则，防止传输数据不规则"></a>2.与前端一致，需设置校验规则，防止传输数据不规则</h3><h5 id="1-邮箱校验规则添加"><a href="#1-邮箱校验规则添加" class="headerlink" title="1.邮箱校验规则添加"></a>1.邮箱校验规则添加</h5><h6 id="安装web表单验证插件"><a href="#安装web表单验证插件" class="headerlink" title="-安装web表单验证插件"></a>-安装web表单验证插件</h6><h6 id="go-get-github-com-go-playground-validator-v10"><a href="#go-get-github-com-go-playground-validator-v10" class="headerlink" title="go get github.com/go-playground/validator/v10"></a><code>go get github.com/go-playground/validator/v10</code></h6><p><font color="red">TODO</font></p><h6 id="使用正则表达式去校验"><a href="#使用正则表达式去校验" class="headerlink" title="-使用正则表达式去校验"></a>-使用正则表达式去校验</h6><h1 id="11-web端发送数据"><a href="#11-web端发送数据" class="headerlink" title="11.web端发送数据"></a>11.web端发送数据</h1><h3 id="1-校验完成后使用grpc将数据传输到srv端"><a href="#1-校验完成后使用grpc将数据传输到srv端" class="headerlink" title="1.校验完成后使用grpc将数据传输到srv端"></a>1.校验完成后使用grpc将数据传输到srv端</h3><h5 id="1-注册grpc服务"><a href="#1-注册grpc服务" class="headerlink" title="1.注册grpc服务"></a>1.注册grpc服务</h5><h5 id="2-新建服务连通srv端"><a href="#2-新建服务连通srv端" class="headerlink" title="2.新建服务连通srv端"></a>2.新建服务连通srv端</h5><h5 id="3-使用通信方法"><a href="#3-使用通信方法" class="headerlink" title="3.使用通信方法"></a>3.使用通信方法</h5><h3 id="2-在Srv端注册第三步使用的接口"><a href="#2-在Srv端注册第三步使用的接口" class="headerlink" title="2.在Srv端注册第三步使用的接口"></a><font color="red">2.在Srv端注册第三步使用的接口</font></h3><h5 id="1-引入通信方法所使用的proto包"><a href="#1-引入通信方法所使用的proto包" class="headerlink" title="1.引入通信方法所使用的proto包"></a>1.引入通信方法所使用的proto包</h5><h5 id="2-注册在web所使用的gRPC服务容器"><a href="#2-注册在web所使用的gRPC服务容器" class="headerlink" title="2.注册在web所使用的gRPC服务容器"></a>2.注册在web所使用的gRPC服务容器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 第二个参数为容器名</span><br><span class="line">useSrv.RegisterUserSrvHandler(service.Server(), new(controller.User))</span><br></pre></td></tr></table></figure><h1 id="12-cookie和session的使用"><a href="#12-cookie和session的使用" class="headerlink" title="12.cookie和session的使用"></a>12.<span id="jump_2">cookie和session的使用</span></h1><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get github.com/gin-contrib/sessions</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"github.com/patrickmn/go-cache"</span></span><br></pre></td></tr></table></figure><h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="comment">//全局声明</span></span><br><span class="line"><span class="keyword">var</span> c = cache.New(<span class="number">60</span>*time.Second, <span class="number">10</span>*time.Second)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//存储使用  key-value的形式进行存储</span></span><br><span class="line"><span class="comment">//在需要使用的函数内使用</span></span><br><span class="line">c.Set(email, captcha, cache.DefaultExpiration)</span><br></pre></td></tr></table></figure><h1 id="13-srv端校验接收的数据"><a href="#13-srv端校验接收的数据" class="headerlink" title="13.srv端校验接收的数据"></a>13.srv端校验接收的数据</h1><h3 id="1-校验实例-接上一步全局声明的cache"><a href="#1-校验实例-接上一步全局声明的cache" class="headerlink" title="1.校验实例(接上一步全局声明的cache)"></a>1.校验实例<a href="#jump_2">(接上一步全局声明的cache)</a></h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//校验验证码是否正确</span></span><br><span class="line"><span class="comment">//获取cache中的captcha</span></span><br><span class="line">captchaCode, isOk :=c.Get(email)</span><br><span class="line"><span class="keyword">if</span> isOk == <span class="literal">true</span> &#123;</span><br><span class="line">   <span class="keyword">if</span> captchaCode!= captcha&#123;</span><br><span class="line">      out.Code = <span class="number">500</span></span><br><span class="line">      out.Msg = <span class="string">"邮箱验证码错误"</span></span><br><span class="line">   &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">//验证码一致则保存数据到数据库</span></span><br><span class="line">      out.Code = <span class="number">200</span></span><br><span class="line">      out.Msg = <span class="string">"注册成功"</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">   out.Code = <span class="number">500</span></span><br><span class="line">   out.Msg = <span class="string">"注册失败,请重试"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-接收的密码进行加密处理，再保存至数据库"><a href="#2-接收的密码进行加密处理，再保存至数据库" class="headerlink" title="2.接收的密码进行加密处理，再保存至数据库"></a>2.接收的密码进行加密处理，再保存至数据库</h3><p><code>utils</code></p><h5 id="1-引入md5加密"><a href="#1-引入md5加密" class="headerlink" title="1.引入md5加密"></a>1.引入md5加密</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> utils</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">   <span class="string">"crypto/md5"</span></span><br><span class="line">   <span class="string">"encoding/hex"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Md5pwd</span><span class="params">(pwd <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">   h := md5.New()</span><br><span class="line">   md5code := <span class="string">"12ffjkjru98hsjq%*"</span></span><br><span class="line">   h.Write([]<span class="keyword">byte</span>(pwd + md5code))</span><br><span class="line">   <span class="keyword">return</span> hex.EncodeToString(h.Sum(<span class="literal">nil</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-使用md5"><a href="#2-使用md5" class="headerlink" title="2.使用md5"></a>2.使用md5</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保存数据到数据库</span></span><br><span class="line"><span class="comment">//密码需进行加密处理再保存至数据库</span></span><br><span class="line">md5Password := utils.Md5pwd(password)</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化user结构体</span></span><br><span class="line">user := models.User&#123;</span><br><span class="line">   Password: md5Password,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-数据保存至数据库"><a href="#3-数据保存至数据库" class="headerlink" title="3.数据保存至数据库"></a>3.数据保存至数据库</h5><p><a href="#jump_1">点击跳转到第9步</a></p><h1 id="14-VUE项目"><a href="#14-VUE项目" class="headerlink" title="14.VUE项目"></a>14.VUE项目</h1><h3 id="1-创建项目"><a href="#1-创建项目" class="headerlink" title="1.创建项目"></a>1.创建项目</h3><pre><code>vue create [name]</code></pre><h3 id="2-使用vue-router路由管理"><a href="#2-使用vue-router路由管理" class="headerlink" title="2.使用vue-router路由管理"></a>2.使用vue-router路由管理</h3><pre><code>npm install vue-router@4.0.0-rc.5 --save或使用vue ui进行安装</code></pre><h3 id="3-在router文件编写路由"><a href="#3-在router文件编写路由" class="headerlink" title="3.在router文件编写路由"></a>3.在router文件编写路由</h3><h3 id="4-在views文件创建home组件"><a href="#4-在views文件创建home组件" class="headerlink" title="4.在views文件创建home组件"></a>4.在views文件创建home组件</h3><h3 id="5-将index-js指向home组件"><a href="#5-将index-js指向home组件" class="headerlink" title="5.将index.js指向home组件"></a>5.将index.js指向home组件</h3><h3 id="6-在main-js中引入index-js"><a href="#6-在main-js中引入index-js" class="headerlink" title="6.在main.js中引入index.js"></a>6.在main.js中引入index.js</h3><h3 id="7-App-vue为根路由"><a href="#7-App-vue为根路由" class="headerlink" title="7.App.vue为根路由"></a>7.App.vue为根路由</h3><h3 id="8-ant-design-vue组件库的使用"><a href="#8-ant-design-vue组件库的使用" class="headerlink" title="8.ant-design-vue组件库的使用"></a>8.ant-design-vue组件库的使用</h3><pre><code>yarn add ant-design-vue</code></pre><h3 id="9-app-vue中路由的使用"><a href="#9-app-vue中路由的使用" class="headerlink" title="9.app.vue中路由的使用"></a>9.app.vue中路由的使用</h3><h5 id><a href="#" class="headerlink" title></a><router-link to="/[path]"></router-link></h5><pre><code>&lt;router-view/&gt;</code></pre><h3 id="10-安装axios"><a href="#10-安装axios" class="headerlink" title="10.安装axios"></a>10.安装axios</h3><h3 id="11-axios-的使用"><a href="#11-axios-的使用" class="headerlink" title="11.axios 的使用"></a>11.axios 的使用</h3><h5 id="在标签对中使用"><a href="#在标签对中使用" class="headerlink" title="在标签对中使用@"></a>在标签对中使用@</h5><h5 id="比如点击为-click-”-函数-”"><a href="#比如点击为-click-”-函数-”" class="headerlink" title="比如点击为 @click=”[函数]”"></a>比如点击为 @click=”[函数]”</h5><h5 id="然后在script添加import-axios-from-“axios”"><a href="#然后在script添加import-axios-from-“axios”" class="headerlink" title="然后在script添加import axios from “axios”;"></a>然后在script添加import axios from “axios”;</h5><pre><code>添加methods,并在其中添加函数;</code></pre><h5 id="在后端设置跨域请求，编写跨域请求组件"><a href="#在后端设置跨域请求，编写跨域请求组件" class="headerlink" title="在后端设置跨域请求，编写跨域请求组件"></a>在后端设置跨域请求，编写跨域请求组件</h5><h5 id="设置全局axios"><a href="#设置全局axios" class="headerlink" title="设置全局axios"></a>设置全局axios</h5><h5 id="创建axios-js文件"><a href="#创建axios-js文件" class="headerlink" title="创建axios.js文件"></a>创建axios.js文件</h5><h5 id="在main-js中引用并全局输出"><a href="#在main-js中引用并全局输出" class="headerlink" title="在main.js中引用并全局输出"></a>在main.js中引用并全局输出</h5><h3 id="12-页面数据的显示"><a href="#12-页面数据的显示" class="headerlink" title="12.页面数据的显示"></a>12.页面数据的显示</h3><h5 id="script中使用data函数"><a href="#script中使用data函数" class="headerlink" title="script中使用data函数"></a>script中使用data函数</h5><h5 id="template中用引入"><a href="#template中用引入" class="headerlink" title="template中用引入"></a>template中用{{[name]}}引入</h5><h5 id="在函数中将获取的数据赋值给this-data"><a href="#在函数中将获取的数据赋值给this-data" class="headerlink" title="在函数中将获取的数据赋值给this.[data]"></a>在函数中将获取的数据赋值给this.[data]</h5><h5 id="想要回显数据到组件，使用箭头函数"><a href="#想要回显数据到组件，使用箭头函数" class="headerlink" title="想要回显数据到组件，使用箭头函数"></a>想要回显数据到组件，使用箭头函数</h5><h3 id="13-生命周期函数"><a href="#13-生命周期函数" class="headerlink" title="13.生命周期函数"></a>13.生命周期函数</h3><h5 id="created函数和mounted函数"><a href="#created函数和mounted函数" class="headerlink" title="created函数和mounted函数"></a>created函数和mounted函数</h5><h5 id="成功后重定向-this-router-push-“-path-”"><a href="#成功后重定向-this-router-push-“-path-”" class="headerlink" title="成功后重定向 this.$router.push(“[path]”)"></a>成功后重定向 this.$router.push(“[path]”)</h5><h1 id="15-前端传数值给后端"><a href="#15-前端传数值给后端" class="headerlink" title="15.前端传数值给后端"></a>15.前端传数值给后端</h1><h3 id="1-动态路由的使用"><a href="#1-动态路由的使用" class="headerlink" title="1.动态路由的使用"></a>1.动态路由的使用</h3><h5 id="“-book-id”"><a href="#“-book-id”" class="headerlink" title="“/book/:id”"></a>“/book/:id”</h5><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.<router-link :to="{name:'Bookdetail',params:{id:book.id}}"></router-link></h3><h3 id="3-后端Querry"><a href="#3-后端Querry" class="headerlink" title="3.后端Querry"></a>3.后端Querry</h3><pre><code>ctx.Querry(&quot;id &quot;)</code></pre><h1 id="16-post提交"><a href="#16-post提交" class="headerlink" title="16.post提交"></a>16.post提交</h1><h3 id="1-提交按钮绑定函数"><a href="#1-提交按钮绑定函数" class="headerlink" title="1.提交按钮绑定函数"></a>1.提交按钮绑定函数</h3><h3 id="2-this-axios-post-“-url-”-qs-stringify"><a href="#2-this-axios-post-“-url-”-qs-stringify" class="headerlink" title="2.this.$axios.post(“[url]”,qs.stringify({"></a>2.this.$axios.post(“[url]”,qs.stringify({</h3><p>name:this.form.name, password:this.form.password}))</p><h3 id="3-需要安装qs-npm-install-qs-–save"><a href="#3-需要安装qs-npm-install-qs-–save" class="headerlink" title="3.需要安装qs npm install qs –save ||"></a>3.需要安装qs npm install qs –save ||</h3><p>yarn add qs</p><h3 id="4-后端接口-ctx-postform-“name”-接收"><a href="#4-后端接口-ctx-postform-“name”-接收" class="headerlink" title="4.后端接口 ctx.postform(“name”)接收"></a>4.后端接口 ctx.postform(“name”)接收</h3><h3 id="5-接口绑定路由"><a href="#5-接口绑定路由" class="headerlink" title="5.接口绑定路由"></a>5.接口绑定路由</h3><h3 id="6-单文件上传"><a href="#6-单文件上传" class="headerlink" title="6.单文件上传"></a>6.单文件上传</h3><h3 id="7-在web端设置跨域请求中间件"><a href="#7-在web端设置跨域请求中间件" class="headerlink" title="7.在web端设置跨域请求中间件"></a>7.在web端设置跨域请求中间件</h3><h3 id="8-在web端获取前端数据"><a href="#8-在web端获取前端数据" class="headerlink" title="8.在web端获取前端数据"></a>8.在web端获取前端数据</h3><h3 id="9-设置web获取数据的路由"><a href="#9-设置web获取数据的路由" class="headerlink" title="9.设置web获取数据的路由"></a>9.设置web获取数据的路由</h3><h3 id="10-设置前端传送的路由"><a href="#10-设置前端传送的路由" class="headerlink" title="10.设置前端传送的路由"></a>10.设置前端传送的路由</h3><h3 id="11-vue中使用rules校验数据"><a href="#11-vue中使用rules校验数据" class="headerlink" title="11.vue中使用rules校验数据"></a>11.vue中使用rules校验数据</h3><h3 id="12-form中绑定rules"><a href="#12-form中绑定rules" class="headerlink" title="12.form中绑定rules"></a>12.form中绑定rules</h3><pre><code>&lt;a-form :model=&quot;form&quot; :rules=&quot;rules&quot;&gt;</code></pre><h3 id="13-在要校验的item上设置name属性，这里的name是第三中的key"><a href="#13-在要校验的item上设置name属性，这里的name是第三中的key" class="headerlink" title="13.在要校验的item上设置name属性，这里的name是第三中的key"></a>13.在要校验的item上设置name属性，这里的name是第三中的key</h3><pre><code>&lt;a-form-item label=&quot;邮箱地址&quot; name=&quot;mail&quot;&gt; &lt;a-input v-model:value=&quot;form.mail&quot; placeholder=&quot;请输入正确的邮箱地址&quot;&gt;</code></pre><h3 id="14-在data中定义rules"><a href="#14-在data中定义rules" class="headerlink" title="14.在data中定义rules"></a>14.在data中定义rules</h3><pre><code>  rules:{mail:[  {required:true,message:&quot;邮箱不能为空!&quot;,trigger:&quot;blur&quot;},  {max: 30,message: &quot;名称长度不能超过30位&quot; }],</code></pre><h5 id="自定义校验规则"><a href="#自定义校验规则" class="headerlink" title="自定义校验规则"></a>自定义校验规则</h5><h3 id="15-表单提交时进行校验（187：11）"><a href="#15-表单提交时进行校验（187：11）" class="headerlink" title="15.表单提交时进行校验（187：11）"></a>15.表单提交时进行校验（187：11）</h3><h3 id="16-后端也进行数据校验"><a href="#16-后端也进行数据校验" class="headerlink" title="16.后端也进行数据校验"></a>16.后端也进行数据校验</h3>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一步一步敲&quot;&gt;&lt;a href=&quot;#一步一步敲&quot; class=&quot;headerlink&quot; title=&quot;一步一步敲&quot;&gt;&lt;/a&gt;一步一步敲&lt;/h1&gt;&lt;h2 id=&quot;通信流程：前端-—-axios-—-gt-web端-—-gRPC-—-gt-srv端&quot;&gt;&lt;a href=&quot;#通信流程：前端-—-axios-—-gt-web端-—-gRPC-—-gt-srv端&quot; class=&quot;headerlink&quot; title=&quot;通信流程：前端 —(axios)—&amp;gt; web端 —(gRPC)—&amp;gt; srv端&quot;&gt;&lt;/a&gt;通信流程：前端 —(axios)—&amp;gt; web端 —(gRPC)—&amp;gt; srv端&lt;/h2&gt;
    
    </summary>
    
    
      <category term="gRPC" scheme="https://weixian13.github.io/tags/gRPC/"/>
    
      <category term="protobuf" scheme="https://weixian13.github.io/tags/protobuf/"/>
    
      <category term="go" scheme="https://weixian13.github.io/tags/go/"/>
    
      <category term="python" scheme="https://weixian13.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Git的使用</title>
    <link href="https://weixian13.github.io/2020/11/22/Git%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://weixian13.github.io/2020/11/22/Git的使用/</id>
    <published>2020-11-22T04:07:15.000Z</published>
    <updated>2020-11-22T10:31:49.332Z</updated>
    
    <content type="html"><![CDATA[<h1 id="首先分享一个学Git的网站-画风比较可爱，整个过程很清晰"><a href="#首先分享一个学Git的网站-画风比较可爱，整个过程很清晰" class="headerlink" title="首先分享一个学Git的网站,画风比较可爱，整个过程很清晰"></a>首先分享一个学Git的网站,画风比较可爱，整个过程很清晰</h1><p>(<a href="https://learngitbranching.js.org)[https://learngitbranching.js.org]" target="_blank" rel="noopener">https://learngitbranching.js.org)[https://learngitbranching.js.org]</a></p><a id="more"></a><h1 id="这里记录一下相关的Git的命令，以备之后遗忘可以看看"><a href="#这里记录一下相关的Git的命令，以备之后遗忘可以看看" class="headerlink" title="这里记录一下相关的Git的命令，以备之后遗忘可以看看"></a>这里记录一下相关的Git的命令，以备之后遗忘可以看看</h1><h2 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h2><pre><code>git commot</code></pre><h2 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h2><pre><code>git branch [name]</code></pre><h2 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h2><pre><code>git checkout [name]</code></pre><h2 id="创建并切换分支"><a href="#创建并切换分支" class="headerlink" title="创建并切换分支"></a>创建并切换分支</h2><pre><code>git checkout -b [name]</code></pre><h2 id="分支合并"><a href="#分支合并" class="headerlink" title="分支合并"></a>分支合并</h2><pre><code>git merge [name]</code></pre><h2 id="分支合并-线性"><a href="#分支合并-线性" class="headerlink" title="分支合并(线性)"></a>分支合并(线性)</h2><pre><code>git rebase [name]</code></pre><br><br><font color="green"> ------TODO</font>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;首先分享一个学Git的网站-画风比较可爱，整个过程很清晰&quot;&gt;&lt;a href=&quot;#首先分享一个学Git的网站-画风比较可爱，整个过程很清晰&quot; class=&quot;headerlink&quot; title=&quot;首先分享一个学Git的网站,画风比较可爱，整个过程很清晰&quot;&gt;&lt;/a&gt;首先分享一个学Git的网站,画风比较可爱，整个过程很清晰&lt;/h1&gt;&lt;p&gt;(&lt;a href=&quot;https://learngitbranching.js.org)[https://learngitbranching.js.org]&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://learngitbranching.js.org)[https://learngitbranching.js.org]&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://weixian13.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="记录" scheme="https://weixian13.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="Git" scheme="https://weixian13.github.io/tags/Git/"/>
    
      <category term="Github" scheme="https://weixian13.github.io/tags/Github/"/>
    
      <category term="TODO" scheme="https://weixian13.github.io/tags/TODO/"/>
    
  </entry>
  
  <entry>
    <title>Redis的安装和使用</title>
    <link href="https://weixian13.github.io/2020/11/19/Redis%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <id>https://weixian13.github.io/2020/11/19/Redis的安装和使用/</id>
    <published>2020-11-19T01:24:06.000Z</published>
    <updated>2020-11-20T03:08:44.734Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MacOS环境下的Redis的安装与使用"><a href="#MacOS环境下的Redis的安装与使用" class="headerlink" title="MacOS环境下的Redis的安装与使用"></a>MacOS环境下的Redis的安装与使用</h1><a id="more"></a><h2 id="现今互联网应用中，-NoSQL-已经广为应用，在互联网中起到加速系统的作用。主流的-NoSQL-有-Redis-和-MongoDB-，Redis-是一种运行在内存的数据库，支持-7-种数据类型（string-、list-、set-、hash-等）的存储。-Redis-是一个开源、使用-ANSI-C-语言编写、遵守-BSD-协议、支持网络、可基于内存亦可持久化的日志型、键值数据库，并提供多种语言的-API-。"><a href="#现今互联网应用中，-NoSQL-已经广为应用，在互联网中起到加速系统的作用。主流的-NoSQL-有-Redis-和-MongoDB-，Redis-是一种运行在内存的数据库，支持-7-种数据类型（string-、list-、set-、hash-等）的存储。-Redis-是一个开源、使用-ANSI-C-语言编写、遵守-BSD-协议、支持网络、可基于内存亦可持久化的日志型、键值数据库，并提供多种语言的-API-。" class="headerlink" title="现今互联网应用中， NoSQL 已经广为应用，在互联网中起到加速系统的作用。主流的 NoSQL 有 Redis 和 MongoDB ，Redis 是一种运行在内存的数据库，支持 7 种数据类型（string 、list 、set 、hash 等）的存储。 Redis 是一个开源、使用 ANSI C 语言编写、遵守 BSD 协议、支持网络、可基于内存亦可持久化的日志型、键值数据库，并提供多种语言的 API 。"></a>现今互联网应用中， NoSQL 已经广为应用，在互联网中起到加速系统的作用。主流的 NoSQL 有 Redis 和 MongoDB ，Redis 是一种运行在内存的数据库，支持 7 种数据类型（string 、list 、set 、hash 等）的存储。 Redis 是一个开源、使用 ANSI C 语言编写、遵守 BSD 协议、支持网络、可基于内存亦可持久化的日志型、键值数据库，并提供多种语言的 API 。</h2><p>Redis 本质上是一个 Key 、 Value 数据库，查询频率高，且查询的都是相同的内容，就可以使用 Redis 做缓存，增加系统性能。</p><h2 id="安装-Redis"><a href="#安装-Redis" class="headerlink" title="安装 Redis"></a>安装 Redis</h2><p><a href="https://redis.io/download" target="_blank" rel="noopener">官方网站</a>下载 Stable 稳定版。</p><h2 id="Redis-在-Mac-下的安装与使用"><a href="#Redis-在-Mac-下的安装与使用" class="headerlink" title="Redis 在 Mac 下的安装与使用"></a>Redis 在 Mac 下的安装与使用</h2><p>最新稳定版是6.0.9<br>    解压压缩包：tar zxvf redis-6.0.9.tar.gz</p><pre><code>移动目录：sudo mv redis-6.0.9 /usr/local/redis-6.0.9切换目录：cd /usr/local/redis-6.0.9编译测试：sudo make test编译安装：sudo make install</code></pre><h2 id="启动-Redis-服务"><a href="#启动-Redis-服务" class="headerlink" title="启动 Redis 服务"></a>启动 Redis 服务</h2><pre><code>先切换目录到： cd /usr/local/redis-6.0.9/src</code></pre><h3 id="启动-Redis-服务命令redis-server-和-Redis-客户端命令-redis-cli-命令在-src-目录下。"><a href="#启动-Redis-服务命令redis-server-和-Redis-客户端命令-redis-cli-命令在-src-目录下。" class="headerlink" title="启动 Redis 服务命令redis-server 和 Redis 客户端命令 redis-cli 命令在 src 目录下。"></a>启动 Redis 服务命令redis-server 和 Redis 客户端命令 redis-cli 命令在 src 目录下。</h3><pre><code>方式一：redis-server ，这种方式启动，关掉终端或者 ctrl + c 快捷键，可以退出 Redis 服务。方式二： redis-server /usr/local/redis-5.0.4/redis.conf ，这种方式启动可以让 Redis 服务在后台运行，关闭终端也不会退出 Redis 服务。</code></pre><h2 id="Redis-在-Mac-下的安装与使用-1"><a href="#Redis-在-Mac-下的安装与使用-1" class="headerlink" title="Redis 在 Mac 下的安装与使用"></a>Redis 在 Mac 下的安装与使用</h2><p>启动 Redis 客户端<br>执行命令：redis-cli ，可进入 Redis 客户端 。</p><h2 id="redis客户端常用命令："><a href="#redis客户端常用命令：" class="headerlink" title="redis客户端常用命令："></a>redis客户端常用命令：</h2><h3 id="命令用途"><a href="#命令用途" class="headerlink" title="命令用途"></a>命令用途</h3><pre><code>set key value    设置 key 的值get key    获取 key 的值exists key    查看此 key 是否存在keys *    查看所有的 keyflushall    消除所有的 key</code></pre><h2 id="Redis-图形客户端"><a href="#Redis-图形客户端" class="headerlink" title="Redis 图形客户端"></a>Redis 图形客户端</h2><p><a href="https://redisdesktop.com/" target="_blank" rel="noopener">官方网站</a>Mac 版 Redis 图形客户端是收费的，如果长期使用，建议支持下作者。</p><p>作者在 GitHub 也开源了客户端源码，<a href="https://github.com/uglide/RedisDesktopManager/releases" target="_blank" rel="noopener">地址</a></p><h3 id="安装好客户端后，需要先在终端启动-Redis-服务，才能在-Redis-Desktop-Manager-左下角点击-Connect-to-Redis-Server-，添加我们刚启动的-Redis-服务，远程-Redis-服务同理。"><a href="#安装好客户端后，需要先在终端启动-Redis-服务，才能在-Redis-Desktop-Manager-左下角点击-Connect-to-Redis-Server-，添加我们刚启动的-Redis-服务，远程-Redis-服务同理。" class="headerlink" title="安装好客户端后，需要先在终端启动 Redis 服务，才能在 Redis Desktop Manager 左下角点击 Connect to Redis Server ，添加我们刚启动的 Redis 服务，远程 Redis 服务同理。"></a>安装好客户端后，需要先在终端启动 Redis 服务，才能在 Redis Desktop Manager 左下角点击 Connect to Redis Server ，添加我们刚启动的 Redis 服务，远程 Redis 服务同理。</h3>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MacOS环境下的Redis的安装与使用&quot;&gt;&lt;a href=&quot;#MacOS环境下的Redis的安装与使用&quot; class=&quot;headerlink&quot; title=&quot;MacOS环境下的Redis的安装与使用&quot;&gt;&lt;/a&gt;MacOS环境下的Redis的安装与使用&lt;/h1&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://weixian13.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="记录" scheme="https://weixian13.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="分享" scheme="https://weixian13.github.io/tags/%E5%88%86%E4%BA%AB/"/>
    
      <category term="Reddis" scheme="https://weixian13.github.io/tags/Reddis/"/>
    
      <category term="微服务" scheme="https://weixian13.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>安装Micro环境</title>
    <link href="https://weixian13.github.io/2020/11/16/%E5%AE%89%E8%A3%85Micro%E7%8E%AF%E5%A2%83/"/>
    <id>https://weixian13.github.io/2020/11/16/安装Micro环境/</id>
    <published>2020-11-16T08:22:32.000Z</published>
    <updated>2020-11-21T05:15:50.759Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Micro的安装（MacOS本地安装）"><a href="#Micro的安装（MacOS本地安装）" class="headerlink" title="Micro的安装（MacOS本地安装）"></a>Micro的安装（MacOS本地安装）</h1><h2 id="1-安装micro和所需依赖"><a href="#1-安装micro和所需依赖" class="headerlink" title="1. 安装micro和所需依赖"></a>1. 安装micro和所需依赖</h2><pre><code>go get -u -v github.com/micro/micro</code></pre><p>安装过程中因为长城的原因，会有很多依赖下载失败，例如x/net,x/text,x/crypt,grcp等，后面有安装方法。</p><a id="more"></a><h2 id="2-安装consul"><a href="#2-安装consul" class="headerlink" title="2. 安装consul"></a>2. 安装consul</h2><pre><code>brew install consul</code></pre><h2 id="3-安装Protobuf"><a href="#3-安装Protobuf" class="headerlink" title="3. 安装Protobuf"></a>3. 安装Protobuf</h2><pre><code>brew install protobufgo get -u -v github.com/golang/protobuf/{proto,protoc-gen-go}go get -u -v github.com/micro/protoc-gen-micro</code></pre><h2 id="4-安装grpc和genproto"><a href="#4-安装grpc和genproto" class="headerlink" title="4. 安装grpc和genproto"></a>4. 安装grpc和genproto</h2><pre><code>mkdir $GOPATH/src/google.golang.orgcd $GOPATH/src/google.golang.orggit clone https://github.com/grpc/grpc-go.git grpcgit clone https://github.com/google/go-genproto.git genproto</code></pre><h2 id="5-安装-golang的net-crypt-text库"><a href="#5-安装-golang的net-crypt-text库" class="headerlink" title="5. 安装 golang的net,crypt,text库"></a>5. 安装 golang的net,crypt,text库</h2><pre><code>mkdir -p $GOPATH/src/golang.org/xcd $GOPATH/src/golang.org/xgit clone https://github.com/golang/net.gitgit clone https://github.com/golang/crypto.gitgit clone https://github.com/golang/text.git</code></pre><h2 id="6-最后安装micro"><a href="#6-最后安装micro" class="headerlink" title="6. 最后安装micro"></a>6. 最后安装micro</h2><pre><code>go get github.com/micro/go-micro/v2go get github.com/micro/protoc-gen-microgo get -u github.com/golang/protobuf/protoc-gen-gogo get github.com/micro/micro/v2</code></pre><p>安装完成<br>    micro –version</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Micro的安装（MacOS本地安装）&quot;&gt;&lt;a href=&quot;#Micro的安装（MacOS本地安装）&quot; class=&quot;headerlink&quot; title=&quot;Micro的安装（MacOS本地安装）&quot;&gt;&lt;/a&gt;Micro的安装（MacOS本地安装）&lt;/h1&gt;&lt;h2 id=&quot;1-安装micro和所需依赖&quot;&gt;&lt;a href=&quot;#1-安装micro和所需依赖&quot; class=&quot;headerlink&quot; title=&quot;1. 安装micro和所需依赖&quot;&gt;&lt;/a&gt;1. 安装micro和所需依赖&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;go get -u -v github.com/micro/micro&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装过程中因为长城的原因，会有很多依赖下载失败，例如x/net,x/text,x/crypt,grcp等，后面有安装方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://weixian13.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="记录" scheme="https://weixian13.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="分享" scheme="https://weixian13.github.io/tags/%E5%88%86%E4%BA%AB/"/>
    
      <category term="golang" scheme="https://weixian13.github.io/tags/golang/"/>
    
      <category term="微服务" scheme="https://weixian13.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>当我真正开始爱自己-卓别林</title>
    <link href="https://weixian13.github.io/2020/11/07/%E5%BD%93%E6%88%91%E7%9C%9F%E6%AD%A3%E5%BC%80%E5%A7%8B%E7%88%B1%E8%87%AA%E5%B7%B1-%E5%8D%93%E5%88%AB%E6%9E%97/"/>
    <id>https://weixian13.github.io/2020/11/07/当我真正开始爱自己-卓别林/</id>
    <published>2020-11-07T05:50:31.000Z</published>
    <updated>2020-11-20T03:13:15.586Z</updated>
    
    <content type="html"><![CDATA[<p>分享记录一下昨晚看到的一篇诗词~</p><a id="more"></a><blockquote><blockquote><center>当我真正开始爱自己</center>  </blockquote><blockquote><center>作者：卓别林</center></blockquote></blockquote><blockquote><p>   当我真正开始爱自己，<br>   我才认识到，所有的痛苦和情感的折磨，<br>   都只是提醒我：活着，不要违背自己的本心。<br>   今天我明白了，这叫做“真实”。</p></blockquote><blockquote><p>   当我真正开始爱自己，<br>   我才懂得，把自己的愿望强加于人，<br>   是多么的无礼，就算我知道，时机并不成熟，<br>   那人也还没有做好准备，<br>   就算那个人就是我自己。<br>   今天我明白了，这叫做“尊重”。</p></blockquote><blockquote><p>   当我开始爱自己，<br>   我不再渴求不同的人生，<br>   我知道任何发生在我身边的事情，<br>   都是对我成长的邀请。<br>   如今，我称之为“成熟”。</p></blockquote><blockquote><p>   当我开始真正爱自己，<br>   我才明白，我其实一直都在正确的时间，<br>   正确的地方，发生的一切都恰如其分。<br>   由此我得以平静。<br>   今天我明白了，这叫做“自信”。</p></blockquote><blockquote><p>   当我真正开始爱自己，<br>   我不再牺牲自己的自由时间，<br>   不再去勾画什么宏伟的明天。<br>   今天我只做有趣和快乐的事，<br>   做自己热爱，让心欢喜的事，<br>   用我的方式、我的韵律。<br>   今天我明白了，这叫做“单纯”。</p></blockquote><blockquote><p>   当我开始真正爱自己，<br>   我开始远离一切不健康的东西。<br>   不论是饮食和人物，还是事情和环境，<br>   我远离一切让我远离本真的东西。<br>   从前我把这叫做“追求健康的自私自利”，<br>   但今天我明白了，这是“自爱”。</p></blockquote><blockquote><p>   当我开始真正爱自己，<br>   我不再总想着要永远正确，不犯错误。<br>   我今天明白了，这叫做“谦逊”。</p></blockquote><blockquote><p>   当我开始真正爱自己，<br>   我不再继续沉溺于过去，<br>   也不再为明天而忧虑，<br>   现在我只活在一切正在发生的当下，<br>   今天，我活在此时此地，<br>   如此日复一日。这就叫“完美”。</p></blockquote><blockquote><p>   当我开始真正爱自己，<br>   我明白，我的思虑让我变得贫乏和病态，<br>   但当我唤起了心灵的力量，<br>   理智就变成了一个重要的伙伴，<br>   这种组合我称之为，“心的智慧”。</p></blockquote><blockquote><p>   我们无须再害怕自己和他人的分歧，<br>   矛盾和问题，因为即使星星有时也会碰在一起，<br>   形成新的世界，今天我明白，这就是“生命”<br>    ​        </p></blockquote><p>希望往后的自己也能在繁琐的生活中，找到那份恰如其分，属于自己的平静。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;分享记录一下昨晚看到的一篇诗词~&lt;/p&gt;
    
    </summary>
    
    
      <category term="分享" scheme="https://weixian13.github.io/tags/%E5%88%86%E4%BA%AB/"/>
    
      <category term="诗词" scheme="https://weixian13.github.io/tags/%E8%AF%97%E8%AF%8D/"/>
    
      <category term="生活" scheme="https://weixian13.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>Go-sync包</title>
    <link href="https://weixian13.github.io/2020/11/02/Go-sync%E5%8C%85/"/>
    <id>https://weixian13.github.io/2020/11/02/Go-sync包/</id>
    <published>2020-11-01T23:58:33.000Z</published>
    <updated>2020-11-02T00:00:23.615Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sync包"><a href="#sync包" class="headerlink" title="sync包"></a>sync包</h1><h3 id="sync-Mutex-互斥锁"><a href="#sync-Mutex-互斥锁" class="headerlink" title="sync.Mutex 互斥锁"></a>sync.Mutex 互斥锁</h3><p>适用于并发访问公共资源的场景。</p><p>声明互斥锁</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> lock sync.Mutex</span><br></pre></td></tr></table></figure><a id="more"></a><p>使用互斥锁</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">500000</span>; i++ &#123;</span><br><span class="line">lock.Lock()</span><br><span class="line">x = x + <span class="number">1</span></span><br><span class="line">lock.Unlock()</span><br><span class="line">&#125;</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="sync-RWMutex-读写互斥锁"><a href="#sync-RWMutex-读写互斥锁" class="headerlink" title="sync.RWMutex 读写互斥锁"></a>sync.RWMutex 读写互斥锁</h3><p>适用于读远远大于写的场景。</p><p>声明读写互斥锁</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> rwLock sync.RWMutex</span><br></pre></td></tr></table></figure><p>使用读写互斥锁</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 读操作</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">read</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> wg.Done()</span><br><span class="line">rwLock.RLock()</span><br><span class="line">fmt.Println(x)</span><br><span class="line">time.Sleep(time.Millisecond * <span class="number">2</span>)</span><br><span class="line">rwLock.RUnlock()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 写操作</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">write</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> wg.Done()</span><br><span class="line">rwLock.Lock()</span><br><span class="line">x = x + <span class="number">1</span></span><br><span class="line">time.Sleep(time.Millisecond * <span class="number">10</span>)</span><br><span class="line">rwLock.Unlock()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="sync-Once"><a href="#sync-Once" class="headerlink" title="sync.Once"></a>sync.Once</h3><p>适用于那些只执行一次的场景。</p><p>例如，只加载一次图片、只关闭一次channel</p><h3 id="sync-Map"><a href="#sync-Map" class="headerlink" title="sync.Map"></a>sync.Map</h3><p>Go内置的map不是并发安全的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sync.Map 是一个开箱即用的并发安全的map</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> m2 = sync.Map&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">wg := sync.WaitGroup&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">21</span>; i++ &#123;</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(n <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">key := strconv.Itoa(n)</span><br><span class="line">m2.Store(key, n)         <span class="comment">// 必须使用sync.Map内置的Store方法设置键值对</span></span><br><span class="line">value, _ := m2.Load(key) <span class="comment">// 必须使用sync.Map提供的Load方法根据key取值</span></span><br><span class="line">fmt.Printf(<span class="string">"k=:%v,v:=%v\n"</span>, key, value)</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;(i)</span><br><span class="line">&#125;</span><br><span class="line">wg.Wait()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="atomic"><a href="#atomic" class="headerlink" title="atomic"></a>atomic</h3><h3 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h3><h3 id="互联网协议"><a href="#互联网协议" class="headerlink" title="互联网协议"></a>互联网协议</h3><h3 id="TCP客户端和服务端"><a href="#TCP客户端和服务端" class="headerlink" title="TCP客户端和服务端"></a>TCP客户端和服务端</h3><h3 id="TCP黏包"><a href="#TCP黏包" class="headerlink" title="TCP黏包"></a>TCP黏包</h3><h3 id="UDP客户端和服务端"><a href="#UDP客户端和服务端" class="headerlink" title="UDP客户端和服务端"></a>UDP客户端和服务端</h3><p>引申知识点:</p><p><a href="https://zhuanlan.zhihu.com/p/36149865" target="_blank" rel="noopener">大端和小端</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;sync包&quot;&gt;&lt;a href=&quot;#sync包&quot; class=&quot;headerlink&quot; title=&quot;sync包&quot;&gt;&lt;/a&gt;sync包&lt;/h1&gt;&lt;h3 id=&quot;sync-Mutex-互斥锁&quot;&gt;&lt;a href=&quot;#sync-Mutex-互斥锁&quot; class=&quot;headerlink&quot; title=&quot;sync.Mutex 互斥锁&quot;&gt;&lt;/a&gt;sync.Mutex 互斥锁&lt;/h3&gt;&lt;p&gt;适用于并发访问公共资源的场景。&lt;/p&gt;
&lt;p&gt;声明互斥锁&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; lock sync.Mutex&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://weixian13.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="记录" scheme="https://weixian13.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="分享" scheme="https://weixian13.github.io/tags/%E5%88%86%E4%BA%AB/"/>
    
      <category term="golang" scheme="https://weixian13.github.io/tags/golang/"/>
    
      <category term="基础" scheme="https://weixian13.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Go-并发实现</title>
    <link href="https://weixian13.github.io/2020/11/01/Go-%E5%B9%B6%E5%8F%91%E5%AE%9E%E7%8E%B0/"/>
    <id>https://weixian13.github.io/2020/11/01/Go-并发实现/</id>
    <published>2020-11-01T01:38:29.000Z</published>
    <updated>2020-11-01T01:39:36.196Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Goroutine"><a href="#Goroutine" class="headerlink" title="Goroutine"></a>Goroutine</h1><h2 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h2><p>记住并发和并行的区别</p><h2 id="goroutine"><a href="#goroutine" class="headerlink" title="goroutine"></a>goroutine</h2><p><code>goroutine</code>是用户态的线程，比内核态线程更轻量级，是由Go语言的运行时(runtime)调度的。</p><a id="more"></a><h3 id="启动goroutine"><a href="#启动goroutine" class="headerlink" title="启动goroutine"></a>启动goroutine</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// goroutine</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">hello</span><span class="params">(i <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"hello"</span>, i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 程序启动之后会创建一个主goroutine去执行</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">100</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> hello(i) <span class="comment">// 开启一个单独的goroutine去执行hello函数（任务）</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"main"</span>)</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line"><span class="comment">// main函数结束了 由main函数启动的goroutine也都结束了</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="goroutine什么结束"><a href="#goroutine什么结束" class="headerlink" title="goroutine什么结束?"></a><code>goroutine</code>什么结束?</h3><p>goroutine 对应的函数结束了，goroutine结束了。</p><p><code>main</code>函数执行完了，由<code>main</code>函数创建的那些<code>goroutine</code>都结束了。</p><h3 id="math-rand"><a href="#math-rand" class="headerlink" title="math/rand"></a>math/rand</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f</span><span class="params">()</span></span> &#123;</span><br><span class="line">rand.Seed(time.Now().UnixNano()) <span class="comment">// 保证每次执行的时候都有点不一样</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line">r1 := rand.Int()    <span class="comment">// int64</span></span><br><span class="line">r2 := rand.Intn(<span class="number">10</span>) <span class="comment">// 0&lt;= x &lt; 10</span></span><br><span class="line">fmt.Println(r1, r2)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="goroutine调度模型"><a href="#goroutine调度模型" class="headerlink" title="goroutine调度模型"></a><code>goroutine</code>调度模型</h3><p><code>GMP</code></p><p><code>M:N</code>:把m个goroutine分配给n个操作系统线程去执行.</p><p>goroutine初始栈的大小是2k.</p><h2 id="channel"><a href="#channel" class="headerlink" title="channel"></a>channel</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> b <span class="keyword">chan</span> <span class="keyword">int</span> <span class="comment">// 需要指定通道中元素的类型</span></span><br></pre></td></tr></table></figure><p><strong>通道必须使用make函数初始化才能使用!!!</strong></p><h3 id="通道的操作"><a href="#通道的操作" class="headerlink" title="通道的操作"></a>通道的操作</h3><p> <code>&lt;-</code> </p><ol><li>发送 : <code>ch1 &lt;- 1</code></li><li>接收: <code>&lt;- ch1</code></li><li>关闭:<code>close()</code></li></ol><h3 id="带缓冲的通道和无缓冲的通道"><a href="#带缓冲的通道和无缓冲的通道" class="headerlink" title="带缓冲的通道和无缓冲的通道"></a>带缓冲的通道和无缓冲的通道</h3><p>无缓冲的通道要想发送值，必须有人接收。–》4x100接力传接棒</p><h3 id="单向通道"><a href="#单向通道" class="headerlink" title="单向通道"></a>单向通道</h3><p>多用于函数传参，限制函数中通道的操作。</p><h3 id="work-pool"><a href="#work-pool" class="headerlink" title="work pool"></a>work pool</h3><p><code>goroutine</code>池</p><h3 id="select多路复用"><a href="#select多路复用" class="headerlink" title="select多路复用"></a>select多路复用</h3>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Goroutine&quot;&gt;&lt;a href=&quot;#Goroutine&quot; class=&quot;headerlink&quot; title=&quot;Goroutine&quot;&gt;&lt;/a&gt;Goroutine&lt;/h1&gt;&lt;h2 id=&quot;并发&quot;&gt;&lt;a href=&quot;#并发&quot; class=&quot;headerlink&quot; title=&quot;并发&quot;&gt;&lt;/a&gt;并发&lt;/h2&gt;&lt;p&gt;记住并发和并行的区别&lt;/p&gt;
&lt;h2 id=&quot;goroutine&quot;&gt;&lt;a href=&quot;#goroutine&quot; class=&quot;headerlink&quot; title=&quot;goroutine&quot;&gt;&lt;/a&gt;goroutine&lt;/h2&gt;&lt;p&gt;&lt;code&gt;goroutine&lt;/code&gt;是用户态的线程，比内核态线程更轻量级，是由Go语言的运行时(runtime)调度的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://weixian13.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="记录" scheme="https://weixian13.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="分享" scheme="https://weixian13.github.io/tags/%E5%88%86%E4%BA%AB/"/>
    
      <category term="golang" scheme="https://weixian13.github.io/tags/golang/"/>
    
      <category term="基础" scheme="https://weixian13.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Go-time库&amp;日志</title>
    <link href="https://weixian13.github.io/2020/10/30/Go-time%E5%BA%93&amp;%E6%97%A5%E5%BF%97/"/>
    <id>https://weixian13.github.io/2020/10/30/Go-time库&amp;日志/</id>
    <published>2020-10-30T09:39:02.000Z</published>
    <updated>2020-10-30T10:57:54.602Z</updated>
    
    <content type="html"><![CDATA[<h1 id="time库-amp-日志"><a href="#time库-amp-日志" class="headerlink" title="time库&amp;日志"></a>time库&amp;日志</h1><h2 id="time标准库"><a href="#time标准库" class="headerlink" title="time标准库"></a>time标准库</h2><h3 id="时间类型-time-Time"><a href="#时间类型-time-Time" class="headerlink" title="时间类型 time.Time"></a>时间类型 time.Time</h3><a id="more"></a><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">now := time.Now()</span><br><span class="line">fmt.Println(now)</span><br><span class="line">fmt.Println(now.Year())</span><br><span class="line">fmt.Println(now.Month())</span><br><span class="line">fmt.Println(now.Day())</span><br><span class="line">fmt.Println(now.Date())</span><br><span class="line">fmt.Println(now.Hour())</span><br><span class="line">fmt.Println(now.Minute())</span><br><span class="line">fmt.Println(now.Second())</span><br></pre></td></tr></table></figure><h3 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 时间戳</span></span><br><span class="line">fmt.Println(now.Unix())</span><br><span class="line">fmt.Println(now.UnixNano())</span><br><span class="line"><span class="comment">// time.Unix()</span></span><br><span class="line">ret := time.Unix(<span class="number">1564803667</span>, <span class="number">0</span>)</span><br><span class="line">fmt.Println(ret)</span><br><span class="line">fmt.Println(ret.Year())</span><br><span class="line">fmt.Println(ret.Day())</span><br></pre></td></tr></table></figure><h3 id="时间间隔"><a href="#时间间隔" class="headerlink" title="时间间隔"></a>时间间隔</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 时间间隔</span></span><br><span class="line">fmt.Println(time.Second)</span><br><span class="line"><span class="comment">// now + 24小时</span></span><br><span class="line">fmt.Println(now.Add(<span class="number">24</span> * time.Hour))</span><br></pre></td></tr></table></figure><h3 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">timer := time.Tick(time.Second)</span><br><span class="line"><span class="keyword">for</span> t := <span class="keyword">range</span> timer &#123;</span><br><span class="line">fmt.Println(t) <span class="comment">// 1秒钟执行一次</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="格式化时间"><a href="#格式化时间" class="headerlink" title="格式化时间"></a>格式化时间</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 格式化时间 把语言中时间对象 转换成字符串类型的时间</span></span><br><span class="line"><span class="comment">// 2019-08-03</span></span><br><span class="line">fmt.Println(now.Format(<span class="string">"2006-01-02"</span>))</span><br><span class="line"><span class="comment">// 2019/02/03 11:55:02</span></span><br><span class="line">fmt.Println(now.Format(<span class="string">"2006/01/02 15:04:05"</span>))</span><br><span class="line"><span class="comment">// 2019/02/03 11:55:02 AM</span></span><br><span class="line">fmt.Println(now.Format(<span class="string">"2006/01/02 03:04:05 PM"</span>))</span><br><span class="line"><span class="comment">// // 2019/02/03 11:55:02.342</span></span><br><span class="line">fmt.Println(now.Format(<span class="string">"2006/01/02 15:04:05.000"</span>))</span><br><span class="line"><span class="comment">// 按照对应的格式解析字符串类型的时间</span></span><br><span class="line">timeObj, err := time.Parse(<span class="string">"2006-01-02"</span>, <span class="string">"2019-08-03"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"parse time failed, err:%v\n"</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(timeObj)</span><br><span class="line">fmt.Println(timeObj.Unix())</span><br></pre></td></tr></table></figure><p><img src="//weixian13.github.io/2020/10/30/Go-time库&日志/1564804613962.png" alt="1564804613962"></p><p><img src="//weixian13.github.io/2020/10/30/Go-time库&日志/1564814836624.png" alt="1564814836624"></p><h2 id="日志库"><a href="#日志库" class="headerlink" title="日志库"></a>日志库</h2><h3 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h3><ol><li><p>支持往不同的地方输出日志</p></li><li><p>日志分级别</p><ol><li>Debug</li><li>Trace</li><li>Info</li><li>Warning</li><li>Error</li><li>Fatal</li></ol></li><li><p>日志要支持开关控制，比如说开发的时候什么级别都能输出，但是上线之后只有INFO级别往下的才能输出</p></li><li><p>完整的日志记录要包含有时间、行号、文件名、日志级别、日志信息</p></li><li><p>日志文件要切割</p><ol><li>按文件大小切割 <ol><li>每次记录日志之前都判断一下当前写的这个文件的文件大小</li></ol></li><li>按日期切割<ol><li>在日志结构体中设置一个字段记录上一次切割的小时数</li><li>在写日志之前检查一下当前时间的小时数和之前保存的是否一致，不一致就要切割</li></ol></li></ol></li></ol><h3 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h3><p><strong>反射只需要了解原理即可，不必过分纠结于此</strong></p><h4 id="反射的应用"><a href="#反射的应用" class="headerlink" title="反射的应用"></a>反射的应用</h4><p><code>json</code>反序列化就是反射的应用。</p><p><code>{&quot;name:&quot;zhoulin&quot;, &quot;age&quot;:9000}</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> person <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="keyword">string</span> <span class="string">``</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反射的两个方法"><a href="#反射的两个方法" class="headerlink" title="反射的两个方法"></a>反射的两个方法</h3><p><code>reflect.TypeOf</code>和<code>reflect.ValueOf</code></p><p>type又分为<code>Name()</code>,<code>Kind()</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"reflect"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Cat <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">reflectType</span><span class="params">(x <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">v := reflect.TypeOf(x)</span><br><span class="line">fmt.Printf(<span class="string">"type:%v\n"</span>, v)</span><br><span class="line">fmt.Printf(<span class="string">"type name:%v type kind:%v\n"</span>, v.Name(), v.Kind())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">reflectValue</span><span class="params">(x <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">v := reflect.ValueOf(x)</span><br><span class="line">k := v.Kind() <span class="comment">// 值的类型种类</span></span><br><span class="line"><span class="keyword">switch</span> k &#123;</span><br><span class="line"><span class="keyword">case</span> reflect.Int64:</span><br><span class="line"><span class="comment">// v.Int()从反射中获取整型的原始值，然后通过int64()强制类型转换</span></span><br><span class="line">fmt.Printf(<span class="string">"type is int64, value is %d\n"</span>, <span class="keyword">int64</span>(v.Int()))</span><br><span class="line"><span class="keyword">case</span> reflect.Float32:</span><br><span class="line"><span class="comment">// v.Float()从反射中获取整型的原始值，然后通过float32()强制类型转换</span></span><br><span class="line">fmt.Printf(<span class="string">"type is float32, value is %f\n"</span>, <span class="keyword">float32</span>(v.Float()))</span><br><span class="line"><span class="keyword">case</span> reflect.Float64:</span><br><span class="line"><span class="comment">// v.Float()从反射中获取整型的原始值，然后通过float64()强制类型转换</span></span><br><span class="line">fmt.Printf(<span class="string">"type is float64, value is %f\n"</span>, <span class="keyword">float64</span>(v.Float()))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过反射设置变量的值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">reflectSetValue1</span><span class="params">(x <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">v := reflect.ValueOf(x)</span><br><span class="line"><span class="keyword">if</span> v.Kind() == reflect.Int64 &#123;</span><br><span class="line">v.SetInt(<span class="number">200</span>) <span class="comment">//修改的是副本，reflect包会引发panic</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">reflectSetValue2</span><span class="params">(x <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">v := reflect.ValueOf(x)</span><br><span class="line"><span class="keyword">if</span> v.Elem().Kind() == reflect.Int64 &#123;</span><br><span class="line">v.Elem().SetInt(<span class="number">200</span>) <span class="comment">//修改的是副本，reflect包会引发panic</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">float32</span> = <span class="number">3.14</span></span><br><span class="line">reflectType(a) <span class="comment">// type:float32</span></span><br><span class="line"><span class="keyword">var</span> b <span class="keyword">int64</span> = <span class="number">100</span></span><br><span class="line">reflectType(b) <span class="comment">// type:int64</span></span><br><span class="line"><span class="keyword">var</span> c = Cat&#123;&#125;</span><br><span class="line">reflectType(c)</span><br><span class="line"><span class="comment">// ValueOf</span></span><br><span class="line">reflectValue(a)</span><br><span class="line"><span class="comment">// 设置值</span></span><br><span class="line"><span class="comment">// reflectSetValue1(&amp;b)</span></span><br><span class="line">reflectSetValue2(&amp;b)</span><br><span class="line">fmt.Println(b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体反射"><a href="#结构体反射" class="headerlink" title="结构体反射"></a>结构体反射</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"reflect"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> student <span class="keyword">struct</span> &#123;</span><br><span class="line">Name  <span class="keyword">string</span> <span class="string">`json:"name" zhoulin:"嘿嘿嘿"`</span></span><br><span class="line">Score <span class="keyword">int</span>    <span class="string">`json:"score" zhoulin:"哈哈哈"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">stu1 := student&#123;</span><br><span class="line">Name:  <span class="string">"小王子"</span>,</span><br><span class="line">Score: <span class="number">90</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">t := reflect.TypeOf(stu1)</span><br><span class="line"></span><br><span class="line">fmt.Println(t.Name(), t.Kind()) <span class="comment">// student struct</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过for循环遍历结构体的所有字段信息</span></span><br><span class="line">fmt.Println(t.NumField()) <span class="comment">// 2</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; t.NumField(); i++ &#123;</span><br><span class="line">field := t.Field(i)</span><br><span class="line">fmt.Printf(<span class="string">"name:%s index:%d type:%v json tag:%v\n"</span>, field.Name, field.Index, field.Type, field.Tag.Get(<span class="string">"zhoulin"</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过字段名获取指定结构体字段信息</span></span><br><span class="line"><span class="keyword">if</span> scoreField, ok := t.FieldByName(<span class="string">"Score"</span>); ok &#123;</span><br><span class="line">fmt.Printf(<span class="string">"name:%s index:%d type:%v json tag:%v\n"</span>, scoreField.Name, scoreField.Index, scoreField.Type, scoreField.Tag.Get(<span class="string">"json"</span>))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;time库-amp-日志&quot;&gt;&lt;a href=&quot;#time库-amp-日志&quot; class=&quot;headerlink&quot; title=&quot;time库&amp;amp;日志&quot;&gt;&lt;/a&gt;time库&amp;amp;日志&lt;/h1&gt;&lt;h2 id=&quot;time标准库&quot;&gt;&lt;a href=&quot;#time标准库&quot; class=&quot;headerlink&quot; title=&quot;time标准库&quot;&gt;&lt;/a&gt;time标准库&lt;/h2&gt;&lt;h3 id=&quot;时间类型-time-Time&quot;&gt;&lt;a href=&quot;#时间类型-time-Time&quot; class=&quot;headerlink&quot; title=&quot;时间类型 time.Time&quot;&gt;&lt;/a&gt;时间类型 time.Time&lt;/h3&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://weixian13.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="记录" scheme="https://weixian13.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="分享" scheme="https://weixian13.github.io/tags/%E5%88%86%E4%BA%AB/"/>
    
      <category term="golang" scheme="https://weixian13.github.io/tags/golang/"/>
    
      <category term="基础" scheme="https://weixian13.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Go-接口</title>
    <link href="https://weixian13.github.io/2020/10/30/Go-%E6%8E%A5%E5%8F%A3/"/>
    <id>https://weixian13.github.io/2020/10/30/Go-接口/</id>
    <published>2020-10-30T06:20:43.000Z</published>
    <updated>2020-10-30T06:26:38.662Z</updated>
    
    <content type="html"><![CDATA[<h1 id="接口-interface"><a href="#接口-interface" class="headerlink" title="接口(interface)"></a>接口(interface)</h1><p><a href="https://www.liwenzhou.com/posts/Go/12_interface/" target="_blank" rel="noopener">博客:https://www.liwenzhou.com/posts/Go/12_interface/</a></p><p>接口是一种类型,是一种特殊的类型,它规定了变量有哪些方法.</p><p>在编程中会遇到以下场景:</p><a id="more"></a><p>我不关心一个变量是什么类型,我只关心能调用它的什么方法.</p><h3 id="接口的定义"><a href="#接口的定义" class="headerlink" title="接口的定义"></a>接口的定义</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> 接口名 <span class="keyword">interface</span> &#123;</span><br><span class="line">    方法名<span class="number">1</span>(参数<span class="number">1</span>,参数<span class="number">2.</span>..)(返回值<span class="number">1</span>, 返回值<span class="number">2.</span>..)</span><br><span class="line">    方法名<span class="number">2</span>(参数<span class="number">1</span>,参数<span class="number">2.</span>..)(返回值<span class="number">1</span>, 返回值<span class="number">2.</span>..)</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用来给变量\参数\返回值等设置类型.</p><h3 id="接口的实现"><a href="#接口的实现" class="headerlink" title="接口的实现"></a>接口的实现</h3><p>一个变量如果实现了接口中规定的所有的方法,那么这个变量就实现了这个接口,可以称为这个接口类型的变量.</p><p><img src="//weixian13.github.io/2020/10/30/Go-接口/1564211085692.png" alt="1564211085692"></p><p><img src="//weixian13.github.io/2020/10/30/Go-接口/1564211890251.png" alt="1564211890251"></p><h3 id="使用值接收者实现接口与使用指针接收者实现接口的区别"><a href="#使用值接收者实现接口与使用指针接收者实现接口的区别" class="headerlink" title="使用值接收者实现接口与使用指针接收者实现接口的区别?"></a>使用值接收者实现接口与使用指针接收者实现接口的区别?</h3><p>使用值接收者实现接口,结构体类型和结构体指针类型的变量都能存.</p><p>指针接收者实现接口只能存结构体指针类型的变量.</p><h3 id="接口和类型的关系"><a href="#接口和类型的关系" class="headerlink" title="接口和类型的关系"></a>接口和类型的关系</h3><p>多个类型可以实现同一个接口.</p><p>一个类型可以实现多个接口.</p><p><img src="//weixian13.github.io/2020/10/30/Go-接口/1564213783276.png" alt="1564213783276"></p><h3 id="接口可以嵌套"><a href="#接口可以嵌套" class="headerlink" title="接口可以嵌套"></a>接口可以嵌套</h3><p><img src="//weixian13.github.io/2020/10/30/Go-接口/1564213756671.png" alt="1564213756671"></p><h3 id="空接口"><a href="#空接口" class="headerlink" title="空接口"></a>空接口</h3><p>没有必要起名字,通常定义成下面的格式:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span>&#123;&#125; <span class="comment">// 空接口</span></span><br></pre></td></tr></table></figure><p>所有的类型都实现了空接口.也就是任意类型的变量都能保存到空接口中.</p><p><img src="//weixian13.github.io/2020/10/30/Go-接口/1564216843178.png" alt="1564216843178"></p><h2 id="包-package"><a href="#包-package" class="headerlink" title="包(package)"></a>包(package)</h2><p><a href="https://www.liwenzhou.com/posts/Go/11_package/" target="_blank" rel="noopener">博客:https://www.liwenzhou.com/posts/Go/11_package/</a></p><ul><li>包的路径从<code>GOPATH/src</code>后面的路径开始写起,路径分隔符用<code>/</code></li><li>想被别的包调用的标识符都要首字母大写!</li><li>单行导入和多行导入</li><li>导入包的时候可以指定别名</li><li>导入包不想使用包内部的标识符,需要使用匿名导入</li><li>每个包导入的时候会自动执行一个名为<code>init()</code>的函数,它没有参数也没有返回值也不能手动调用</li><li>多个包中都定义了<code>init()</code>函数,则它们的执行顺序见下图:</li></ul><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><p><a href="https://www.liwenzhou.com/posts/Go/go_file/" target="_blank" rel="noopener">博客:https://www.liwenzhou.com/posts/Go/go_file/</a></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">        <span class="string">"fmt"</span></span><br><span class="line">        <span class="string">"os"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打开文件</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">        fileObj, err := os.Open(<span class="string">"./main.go"</span>)</span><br><span class="line">        <span class="keyword">if</span> err !</span><br><span class="line">读了<span class="number">128</span>个字节</span><br><span class="line">= <span class="literal">nil</span> &#123;</span><br><span class="line">                fmt.Printf(<span class="string">"open file failed, err:%v"</span>, err)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 记得关闭文件</span></span><br><span class="line">        <span class="keyword">defer</span> fileObj.Close()</span><br><span class="line">        <span class="comment">// 读文</span></span><br><span class="line">读了<span class="number">128</span>个字节</span><br><span class="line">件</span><br><span class="line">        <span class="comment">// var tmp = make([]byte, 128) // 指定读的长度</span></span><br><span class="line">        <span class="keyword">var</span> tmp [<span class="number">128</span>]<span class="keyword">byte</span></span><br><span class="line">        <span class="keyword">for</span> &#123;</span><br><span class="line">                n, err := fileObj.Read(tmp[:])</span><br><span class="line">                <span class="keyword">if</span> e</span><br><span class="line">读了<span class="number">128</span>个字节</span><br><span class="line">rr != <span class="literal">nil</span> &#123;</span><br><span class="line">                        fmt.Printf(<span class="string">"read from file failed, err:%v"</span>, err)</span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line">                &#125;</span><br><span class="line">                fmt.Printf(<span class="string">"读了%d个字节\n"</span>, n)</span><br><span class="line">                fmt.</span><br><span class="line">读了<span class="number">66</span>个字节</span><br><span class="line">Println(<span class="keyword">string</span>(tmp[:n]))</span><br><span class="line">                <span class="keyword">if</span> n == <span class="number">0</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;接口-interface&quot;&gt;&lt;a href=&quot;#接口-interface&quot; class=&quot;headerlink&quot; title=&quot;接口(interface)&quot;&gt;&lt;/a&gt;接口(interface)&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.liwenzhou.com/posts/Go/12_interface/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;博客:https://www.liwenzhou.com/posts/Go/12_interface/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接口是一种类型,是一种特殊的类型,它规定了变量有哪些方法.&lt;/p&gt;
&lt;p&gt;在编程中会遇到以下场景:&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://weixian13.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="记录" scheme="https://weixian13.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="分享" scheme="https://weixian13.github.io/tags/%E5%88%86%E4%BA%AB/"/>
    
      <category term="golang" scheme="https://weixian13.github.io/tags/golang/"/>
    
      <category term="基础" scheme="https://weixian13.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Go-结构体</title>
    <link href="https://weixian13.github.io/2020/10/29/Go-%E7%BB%93%E6%9E%84%E4%BD%93/"/>
    <id>https://weixian13.github.io/2020/10/29/Go-结构体/</id>
    <published>2020-10-29T01:25:00.000Z</published>
    <updated>2020-10-30T06:17:50.720Z</updated>
    
    <content type="html"><![CDATA[<h1 id="结构体-struct"><a href="#结构体-struct" class="headerlink" title="结构体(struct)"></a>结构体(struct)</h1><h3 id="结构体定义"><a href="#结构体定义" class="headerlink" title="结构体定义"></a>结构体定义</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> 结构体名 <span class="keyword">struct</span>&#123;</span><br><span class="line">    字段<span class="number">1</span> 字段<span class="number">1</span>的类型</span><br><span class="line">    字段<span class="number">2</span> 字段<span class="number">2</span>的类型</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <a id="more"></a><h3 id="结构体初始化"><a href="#结构体初始化" class="headerlink" title="结构体初始化"></a>结构体初始化</h3><h4 id="先声明再赋值"><a href="#先声明再赋值" class="headerlink" title="先声明再赋值"></a>先声明再赋值</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p person <span class="comment">// 声明一个person类型的变量p</span></span><br><span class="line">p.name = <span class="string">"元帅"</span></span><br><span class="line">p.age = <span class="number">18</span></span><br><span class="line">fmt.Println(p)</span><br></pre></td></tr></table></figure><h4 id="声明同时初始化"><a href="#声明同时初始化" class="headerlink" title="声明同时初始化"></a>声明同时初始化</h4><p>键值对初始化</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 键值对初始化</span></span><br><span class="line"><span class="keyword">var</span> p2 = person&#123;</span><br><span class="line">name: <span class="string">"冠华"</span>,</span><br><span class="line">age:  <span class="number">15</span>,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(p2)</span><br></pre></td></tr></table></figure><p>值列表初始化</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 值列表初始化</span></span><br><span class="line"><span class="keyword">var</span> p3 = person&#123;</span><br><span class="line"><span class="string">"理想"</span>,</span><br><span class="line"><span class="number">100</span>,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(p3)</span><br></pre></td></tr></table></figure><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项:"></a>注意事项:</h4><ol><li><p>两者不能混用</p></li><li><p>没有赋值的字段会使用对应类型的零值.</p></li></ol><h3 id="结构体指针"><a href="#结构体指针" class="headerlink" title="结构体指针"></a>结构体指针</h3><p>结构体是值类型,赋值的时候都是拷贝.</p><p>当结构体字段较多的时候,为了减少内存消耗可以传递结构体指针.</p><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><p>返回一个结构体变量的函数,为了实例化结构体的时候更省事儿.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newPerson</span><span class="params">(name <span class="keyword">string</span>, age <span class="keyword">int</span>)</span><span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> person&#123;</span><br><span class="line">        name: name,</span><br><span class="line">        age: age,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>方法是作用于特定类型的函数.</p><p>方法的定义:(万变不离其宗)</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(接收者变量 接收者类型)</span>方法名<span class="params">(参数)</span>返回值</span>&#123;</span><br><span class="line">    <span class="comment">// 方法体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="接收者"><a href="#接收者" class="headerlink" title="接收者"></a>接收者</h4><p>接收者通常使用类型首字母的小写,不建议使用诸如<code>this</code>和<code>self</code>这样的.</p><h3 id="值接收者和指针接收者的区别"><a href="#值接收者和指针接收者的区别" class="headerlink" title="值接收者和指针接收者的区别"></a>值接收者和指针接收者的区别</h3><p>使用值接收者的方法不能修改结构体变量</p><p>使用指针接收者的方法可以修改结构体的变量,课上过年长一岁的例子.</p><p><img src="//weixian13.github.io/2020/10/29/Go-结构体/1563616941046.png" alt="1563616941046"></p><p>我们应该尽量使用指针接收者.</p><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><p>// 标识符:变量名 函数名 类型名 方法名</p><p>// Go语言中如果标识符首字母是大写的,就表示对外部包可见(暴露的,公有的).</p><h3 id="匿名字段"><a href="#匿名字段" class="headerlink" title="匿名字段"></a>匿名字段</h3><p>没有名字的字段.</p><h3 id="嵌套结构体"><a href="#嵌套结构体" class="headerlink" title="嵌套结构体"></a>嵌套结构体</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> address <span class="keyword">struct</span> &#123;</span><br><span class="line">province <span class="keyword">string</span></span><br><span class="line">city     <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> company <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="keyword">string</span></span><br><span class="line">addr address <span class="comment">// 嵌套</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="匿名嵌套结构体"><a href="#匿名嵌套结构体" class="headerlink" title="匿名嵌套结构体"></a>匿名嵌套结构体</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> address <span class="keyword">struct</span> &#123;</span><br><span class="line">province <span class="keyword">string</span></span><br><span class="line">city     <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> company <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="keyword">string</span></span><br><span class="line">address <span class="comment">// 嵌套匿名结构体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="匿名嵌套结构体的字段冲突"><a href="#匿名嵌套结构体的字段冲突" class="headerlink" title="匿名嵌套结构体的字段冲突"></a>匿名嵌套结构体的字段冲突</h3><p>先在自己结构体找这个字段,找不到就去匿名嵌套的结构体中查找该字段</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> address <span class="keyword">struct</span> &#123;</span><br><span class="line">province <span class="keyword">string</span></span><br><span class="line">city     <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> workPlace <span class="keyword">struct</span> &#123;</span><br><span class="line">province <span class="keyword">string</span></span><br><span class="line">city     <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> person <span class="keyword">struct</span> &#123;</span><br><span class="line">name    <span class="keyword">string</span></span><br><span class="line">age     <span class="keyword">int</span></span><br><span class="line">address   <span class="comment">// 匿名嵌套结构体</span></span><br><span class="line">workPlace <span class="comment">// 匿名嵌套结构体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结构体与JSON"><a href="#结构体与JSON" class="headerlink" title="结构体与JSON"></a>结构体与JSON</h2><p>JSON:是一种跨语言的数据格式.多用于在不同语言间传递数据</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.序列化:   把Go语言中的结构体变量 --&gt; json格式的字符串</span></span><br><span class="line"><span class="comment">// 2.反序列化: json格式的字符串   --&gt; Go语言中能够识别的结构体变量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> person <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="keyword">string</span> <span class="string">`json:"name" db:"name" ini:"name"`</span></span><br><span class="line">Age  <span class="keyword">int</span>    <span class="string">`json:"age"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">p1 := person&#123;</span><br><span class="line">Name: <span class="string">"周林"</span>,</span><br><span class="line">Age:  <span class="number">9000</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 序列化</span></span><br><span class="line">b, err := json.Marshal(p1)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"marshal failed, err:%v"</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">"%v\n"</span>, <span class="keyword">string</span>(b))</span><br><span class="line"><span class="comment">// 反序列化</span></span><br><span class="line">str := <span class="string">`&#123;"name":"理想","age":18&#125;`</span></span><br><span class="line"><span class="keyword">var</span> p2 person</span><br><span class="line">json.Unmarshal([]<span class="keyword">byte</span>(str), &amp;p2) <span class="comment">// 传指针是为了能在json.Unmarshal内部修改p2的值</span></span><br><span class="line">fmt.Printf(<span class="string">"%#v\n"</span>, p2)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;结构体-struct&quot;&gt;&lt;a href=&quot;#结构体-struct&quot; class=&quot;headerlink&quot; title=&quot;结构体(struct)&quot;&gt;&lt;/a&gt;结构体(struct)&lt;/h1&gt;&lt;h3 id=&quot;结构体定义&quot;&gt;&lt;a href=&quot;#结构体定义&quot; class=&quot;headerlink&quot; title=&quot;结构体定义&quot;&gt;&lt;/a&gt;结构体定义&lt;/h3&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; 结构体名 &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    字段&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; 字段&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;的类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    字段&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; 字段&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;的类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://weixian13.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="记录" scheme="https://weixian13.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="分享" scheme="https://weixian13.github.io/tags/%E5%88%86%E4%BA%AB/"/>
    
      <category term="golang" scheme="https://weixian13.github.io/tags/golang/"/>
    
      <category term="基础" scheme="https://weixian13.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Go-基本语法</title>
    <link href="https://weixian13.github.io/2020/10/29/Go-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>https://weixian13.github.io/2020/10/29/Go-基本语法/</id>
    <published>2020-10-29T01:23:00.000Z</published>
    <updated>2020-10-29T01:25:20.540Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GO语言文件基础语法"><a href="#GO语言文件基础语法" class="headerlink" title="GO语言文件基础语法"></a>GO语言文件基础语法</h2><p>存放Go源代码的文件后缀名是<code>.go</code></p><p>文件第一行：<code>package</code>关键字声明包名</p><p>如果要编译可执行文件，必须要有main包和main函数（入口函数）</p><a id="more"></a><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>Go语言函数外的语句必须以关键字开</p><p>函数内部定义的变量必须使用</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>3种声明方式：</p><ol><li><code>var name1 string</code></li><li><code>var name2 = &quot;沙河娜扎&quot;</code></li><li>函数内部专属：<code>name3:=&quot;沙河小王子&quot;</code></li></ol><p>匿名变量（哑元变量）：</p><p>当有些数据必须用变量接收但是又不使用它时，就可以用<code>_</code>来接收这个值。</p><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p><code>const PI = 3.1415926</code></p><p><code>const UserNotExistErr = 10000</code></p><p>iota:实现枚举</p><p>两个要点：</p><ol><li><code>iota</code>在const关键字出现时将被重置为0</li><li>const中每新增一行常量声明，iota累加1</li></ol><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h4 id="if"><a href="#if" class="headerlink" title="if"></a>if</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">19</span></span><br><span class="line"><span class="keyword">if</span> age &gt; <span class="number">18</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"成年了"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> age &gt; <span class="number">7</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"上小学"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"最快乐的时光！"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><p>标准for循环</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">fmt.Println(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><h3 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h3><p>​    无符号整型：<code>uint8</code>、<code>uint16</code>、<code>uint32</code>、<code>uint64</code></p><p>​    带符号整型:<code>int8</code>、<code>int16</code>、<code>int32</code>、<code>int64</code></p><p>​    <code>uint</code>和<code>int</code>:具体是32位还是64位看操作系统</p><p>​    <code>uintptr</code>:表示指针</p><h3 id="其他进制数"><a href="#其他进制数" class="headerlink" title="其他进制数"></a>其他进制数</h3><p>Go语言中没办法直接定义二进制数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 八进制数</span></span><br><span class="line"><span class="keyword">var</span> n1 = <span class="number">0777</span></span><br><span class="line"><span class="comment">// 十六进制数</span></span><br><span class="line"><span class="keyword">var</span> n2 = <span class="number">0xff</span></span><br><span class="line">fmt.Println(n1, n2)</span><br><span class="line">fmt.Printf(<span class="string">"%o\n"</span>, n1)</span><br><span class="line">fmt.Printf(<span class="string">"%x\n"</span>, n2)</span><br></pre></td></tr></table></figure><h3 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h3><p><code>float64</code>和<code>float32</code></p><p>Go语言中浮点数默认是<code>float64</code></p><h3 id="复数"><a href="#复数" class="headerlink" title="复数"></a>复数</h3><p><code>complex128</code>和<code>complex64</code></p><h3 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h3><p><code>true</code>和<code>false</code></p><p>不能和其他的类型做转换</p><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>常用方法</p><p>字符串不能修改</p><h3 id="byte和rune类型"><a href="#byte和rune类型" class="headerlink" title="byte和rune类型"></a>byte和rune类型</h3><p>都属于类型别名</p><h3 id="字符串、字符、字节-都是什么？"><a href="#字符串、字符、字节-都是什么？" class="headerlink" title="字符串、字符、字节 都是什么？"></a>字符串、字符、字节 都是什么？</h3><p>字符串：双引号包裹的是字符串</p><p>字符：单引号包裹的是字符，单个字母、单个符号、单个文字</p><p>字节：1byte=8bit</p><p>go语言中字符串都是UTF8编码，UTF8编码中一个常用汉字一般占用3个字节。</p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p><a href="https://www.liwenzhou.com/posts/Go/03_operators/" target="_blank" rel="noopener">https://www.liwenzhou.com/posts/Go/03_operators/</a></p><h2 id="复合数据类型"><a href="#复合数据类型" class="headerlink" title="复合数据类型"></a>复合数据类型</h2><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="数组的声明"><a href="#数组的声明" class="headerlink" title="数组的声明"></a>数组的声明</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组是存放元素的容器</span></span><br><span class="line"><span class="comment">// 必须指定存放的元素的类型和容量（长度）</span></span><br><span class="line"><span class="comment">// 数组的长度是数组类型的一部分</span></span><br><span class="line"><span class="keyword">var</span> a1 [<span class="number">3</span>]<span class="keyword">bool</span> <span class="comment">// [true false true]</span></span><br><span class="line"><span class="keyword">var</span> a2 [<span class="number">4</span>]<span class="keyword">bool</span> <span class="comment">// [true true false false]</span></span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"a1:%T a2:%T\n"</span>, a1, a2)</span><br></pre></td></tr></table></figure><h3 id="数组的初始化"><a href="#数组的初始化" class="headerlink" title="数组的初始化"></a>数组的初始化</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组的初始化</span></span><br><span class="line"><span class="comment">// 如果不初始化：默认元素都是零值（布尔值：false, 整型和浮点型都是0, 字符串：""）</span></span><br><span class="line">fmt.Println(a1, a2)</span><br><span class="line"><span class="comment">// 1. 初始化方式1</span></span><br><span class="line">a1 = [<span class="number">3</span>]<span class="keyword">bool</span>&#123;<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">true</span>&#125;</span><br><span class="line">fmt.Println(a1)</span><br><span class="line"><span class="comment">// 2. 初始化方式2：根据初始值自动推断数组的长度是多少</span></span><br><span class="line"><span class="comment">// a10 := [9]int&#123;0, 1, 2, 3, 4, 4, 5, 6, 7&#125;</span></span><br><span class="line">a10 := [...]<span class="keyword">int</span>&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line">fmt.Println(a10)</span><br><span class="line"><span class="comment">// 3. 初始化方式3：根据索引来初始化</span></span><br><span class="line">a3 := [<span class="number">5</span>]<span class="keyword">int</span>&#123;<span class="number">0</span>: <span class="number">1</span>, <span class="number">4</span>: <span class="number">2</span>&#125;</span><br><span class="line">fmt.Println(a3)</span><br></pre></td></tr></table></figure><h3 id="数组的遍历"><a href="#数组的遍历" class="headerlink" title="数组的遍历"></a>数组的遍历</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组的遍历</span></span><br><span class="line">citys := [...]<span class="keyword">string</span>&#123;<span class="string">"北京"</span>, <span class="string">"上海"</span>, <span class="string">"深圳"</span>&#125; <span class="comment">// 索引：0~2 citys[0],citys[1],citys[2]</span></span><br><span class="line"><span class="comment">// 1. 根据索引遍历</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(citys); i++ &#123;</span><br><span class="line">fmt.Println(citys[i])</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 2. for range遍历</span></span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> citys &#123;</span><br><span class="line">fmt.Println(i, v)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多维数组</span></span><br><span class="line"><span class="comment">// [[1 2] [3 4] [5 6]]</span></span><br><span class="line"><span class="keyword">var</span> a11 [<span class="number">3</span>][<span class="number">2</span>]<span class="keyword">int</span></span><br><span class="line">a11 = [<span class="number">3</span>][<span class="number">2</span>]<span class="keyword">int</span>&#123;</span><br><span class="line">[<span class="number">2</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>&#125;,</span><br><span class="line">[<span class="number">2</span>]<span class="keyword">int</span>&#123;<span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">[<span class="number">2</span>]<span class="keyword">int</span>&#123;<span class="number">5</span>, <span class="number">6</span>&#125;,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(a11)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多维数组的遍历</span></span><br><span class="line"><span class="keyword">for</span> _, v1 := <span class="keyword">range</span> a11 &#123;</span><br><span class="line">fmt.Println(v1)</span><br><span class="line"><span class="keyword">for</span> _, v2 := <span class="keyword">range</span> v1 &#123;</span><br><span class="line">fmt.Println(v2)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数组是值类型"><a href="#数组是值类型" class="headerlink" title="数组是值类型"></a>数组是值类型</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组是值类型</span></span><br><span class="line">b1 := [<span class="number">3</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125; <span class="comment">// [1 2 3]</span></span><br><span class="line">b2 := b1              <span class="comment">// [1 2 3] Ctrl+C Ctrl+V =&gt; 把world文档从文件夹A拷贝到文件夹B</span></span><br><span class="line">b2[<span class="number">0</span>] = <span class="number">100</span>           <span class="comment">// b2:[100 2 3]</span></span><br><span class="line">fmt.Println(b1, b2)   <span class="comment">// b1:[1 2</span></span><br></pre></td></tr></table></figure><h2 id="切片（slice）"><a href="#切片（slice）" class="headerlink" title="切片（slice）"></a>切片（slice）</h2><p>切片指向了一个底层的数组。</p><p>切片的长度就是它元素的个数。</p><p>切片的容量是底层数组从切片的第一个元素到最后一个元素的数量。</p><h3 id="切片的定义"><a href="#切片的定义" class="headerlink" title="切片的定义"></a>切片的定义</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 切片的定义</span></span><br><span class="line"><span class="keyword">var</span> s1 []<span class="keyword">int</span>    <span class="comment">// 定义一个存放int类型元素的切片</span></span><br><span class="line"><span class="keyword">var</span> s2 []<span class="keyword">string</span> <span class="comment">// 定义一个存放string类型元素的切片</span></span><br><span class="line">fmt.Println(s1, s2)</span><br><span class="line">fmt.Println(s1 == <span class="literal">nil</span>) <span class="comment">// true</span></span><br><span class="line">fmt.Println(s2 == <span class="literal">nil</span>) <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h3 id="切片的初始化"><a href="#切片的初始化" class="headerlink" title="切片的初始化"></a>切片的初始化</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化</span></span><br><span class="line">s1 = []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">s2 = []<span class="keyword">string</span>&#123;<span class="string">"沙河"</span>, <span class="string">"张江"</span>, <span class="string">"平山村"</span>&#125;</span><br><span class="line">fmt.Println(s1, s2)</span><br><span class="line">fmt.Println(s1 == <span class="literal">nil</span>) <span class="comment">// false</span></span><br><span class="line">fmt.Println(s2 == <span class="literal">nil</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h3 id="切片的长度和容量"><a href="#切片的长度和容量" class="headerlink" title="切片的长度和容量"></a>切片的长度和容量</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 长度和容量</span></span><br><span class="line">fmt.Printf(<span class="string">"len(s1):%d cap(s1):%d\n"</span>, <span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1))</span><br><span class="line">fmt.Printf(<span class="string">"len(s2):%d cap(s2):%d\n"</span>, <span class="built_in">len</span>(s2), <span class="built_in">cap</span>(s2)</span><br></pre></td></tr></table></figure><h3 id="make"><a href="#make" class="headerlink" title="make"></a>make</h3><p>make()函数用于创建指定长度和容量的切片。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s1 := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">5</span>, <span class="number">10</span>)</span><br><span class="line">fmt.Printf(<span class="string">"s1=%v len(s1)=%d cap(s1)=%d\n"</span>, s1, <span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1))</span><br><span class="line"></span><br><span class="line">s2 := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line">fmt.Printf(<span class="string">"s1=%v len(s1)=%d cap(s1)=%d\n"</span>, s2, <span class="built_in">len</span>(s2), <span class="built_in">cap</span>(s2))</span><br></pre></td></tr></table></figure><h3 id="切片的本质"><a href="#切片的本质" class="headerlink" title="切片的本质"></a>切片的本质</h3><p>切片就是一个框，框住了一块连续的内存。</p><p>切片属于引用类型，真正的数据都是保存在底层数组里的。</p><p>判断一个切片是否是空的，要是用<code>len(s) == 0</code>来判断</p><h3 id="append"><a href="#append" class="headerlink" title="append"></a>append</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用append函数必须用原来的切片变量接收返回值</span></span><br><span class="line"><span class="comment">// append追加元素，原来的底层数组放不下的时候，Go底层就会把底层数组换一个</span></span><br><span class="line"><span class="comment">// 必须用变量接收append的返回值</span></span><br><span class="line">s1 = <span class="built_in">append</span>(s1, <span class="string">"广州"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"s1=%v len(s1)=%d cap(s1)=%d\n"</span>, s1, <span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1))</span><br><span class="line">s1 = <span class="built_in">append</span>(s1, <span class="string">"杭州"</span>, <span class="string">"成都"</span>)</span><br><span class="line">fmt.Printf(<span class="string">"s1=%v len(s1)=%d cap(s1)=%d\n"</span>, s1, <span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1))</span><br><span class="line">ss := []<span class="keyword">string</span>&#123;<span class="string">"武汉"</span>, <span class="string">"西安"</span>, <span class="string">"苏州"</span>&#125;</span><br><span class="line">s1 = <span class="built_in">append</span>(s1, ss...) <span class="comment">// ...表示拆开</span></span><br><span class="line">fmt.Printf(<span class="string">"s1=%v len(s1)=%d cap(s1)=%d\n"</span>, s1, <span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1))</span><br></pre></td></tr></table></figure><h3 id="copy"><a href="#copy" class="headerlink" title="copy"></a>copy</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a1 := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>&#125;</span><br><span class="line">a2 := a1 <span class="comment">// 赋值</span></span><br><span class="line"><span class="keyword">var</span> a3 = <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">copy</span>(a3, a1) <span class="comment">// copy</span></span><br><span class="line">fmt.Println(a1, a2, a3)</span><br><span class="line">a1[<span class="number">0</span>] = <span class="number">100</span></span><br><span class="line">fmt.Println(a1, a2, a3)</span><br></pre></td></tr></table></figure><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><p>Go语言中不存在指针操作，只需要记住两个符号：</p><ol><li><code>&amp;</code>:取地址</li><li><code>*</code>:根据地址取值</li></ol><h2 id="make和new的区别"><a href="#make和new的区别" class="headerlink" title="make和new的区别"></a>make和new的区别</h2><ol><li>make和new都是用来申请内存的</li><li>new很少用，一般用来给基本数据类型申请内存，<code>string</code>、<code>int</code>,返回的是对应类型的指针(*string、*int)。</li><li>make是用来给<code>slice</code>、<code>map</code>、<code>chan</code>申请内存的，make函数返回的的是对应的这三个类型本身</li></ol><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><p>map也是引用类型，必须初始化之后才能使用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> m1 <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span></span><br><span class="line">fmt.Println(m1 == <span class="literal">nil</span>)        <span class="comment">// 还没有初始化（没有在内存中开辟空间）</span></span><br><span class="line">m1 = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>, <span class="number">10</span>) <span class="comment">// 要估算好该map容量，避免在程序运行期间再动态扩容</span></span><br><span class="line">m1[<span class="string">"理想"</span>] = <span class="number">18</span></span><br><span class="line">m1[<span class="string">"jiwuming"</span>] = <span class="number">35</span></span><br><span class="line"></span><br><span class="line">fmt.Println(m1)</span><br><span class="line">fmt.Println(m1[<span class="string">"理想"</span>])</span><br><span class="line"><span class="comment">// 约定成俗用ok接收返回的布尔值</span></span><br><span class="line">fmt.Println(m1[<span class="string">"娜扎"</span>]) <span class="comment">// 如果不存在这个key拿到对应值类型的零值</span></span><br><span class="line">value, ok := m1[<span class="string">"娜扎"</span>]</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">fmt.Println(<span class="string">"查无此key"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(value)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// map的遍历</span></span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> m1 &#123;</span><br><span class="line">fmt.Println(k, v)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 只遍历key</span></span><br><span class="line"><span class="keyword">for</span> k := <span class="keyword">range</span> m1 &#123;</span><br><span class="line">fmt.Println(k)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 只遍历value</span></span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> m1 &#123;</span><br><span class="line">fmt.Println(v)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 删除</span></span><br><span class="line"><span class="built_in">delete</span>(m1, <span class="string">"jiwuming"</span>)</span><br><span class="line">fmt.Println(m1)</span><br><span class="line"><span class="built_in">delete</span>(m1, <span class="string">"沙河"</span>) <span class="comment">// 删除不存在的key</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数存在的意义？</span></span><br><span class="line"><span class="comment">// 函数是一段代码的封装</span></span><br><span class="line"><span class="comment">// 把一段逻辑抽象出来封装到一个函数中，给它起个名字，每次用到它的时候直接用函数名调用就可以了</span></span><br><span class="line"><span class="comment">// 使用函数能够让代码结构更清晰、更简洁。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数的定义</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sum</span><span class="params">(x <span class="keyword">int</span>, y <span class="keyword">int</span>)</span> <span class="params">(ret <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 没有返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f1</span><span class="params">(x <span class="keyword">int</span>, y <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(x + y)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 没有参数没有返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f2</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"f2"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 没有参数但有返回值的</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f3</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">ret := <span class="number">3</span></span><br><span class="line"><span class="keyword">return</span> ret</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回值可以命名也可以不命名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 命名的返回值就相当于在函数中声明一个变量</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f4</span><span class="params">(x <span class="keyword">int</span>, y <span class="keyword">int</span>)</span> <span class="params">(ret <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">ret = x + y</span><br><span class="line"><span class="keyword">return</span> <span class="comment">// 使用命名返回值可以return后省略</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多个返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f5</span><span class="params">()</span> <span class="params">(<span class="keyword">int</span>, <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>, <span class="string">"沙河"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 参数的类型简写:</span></span><br><span class="line"><span class="comment">// 当参数中连续多个参数的类型一致时，我们可以将非最后一个参数的类型省略</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f6</span><span class="params">(x, y, z <span class="keyword">int</span>, m, n <span class="keyword">string</span>, i, j <span class="keyword">bool</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可变长参数</span></span><br><span class="line"><span class="comment">// 可变长参数必须放在函数参数的最后</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f7</span><span class="params">(x <span class="keyword">string</span>, y ...<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(x)</span><br><span class="line">fmt.Println(y) <span class="comment">// y的类型是切片 []int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Go语言中函数没有默认参数这个概念</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := sum(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">fmt.Println(r)</span><br><span class="line"></span><br><span class="line">_, n := f5()</span><br><span class="line">fmt.Println(n)</span><br><span class="line"></span><br><span class="line">f7(<span class="string">"下雨了"</span>)</span><br><span class="line">f7(<span class="string">"下雨了"</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;GO语言文件基础语法&quot;&gt;&lt;a href=&quot;#GO语言文件基础语法&quot; class=&quot;headerlink&quot; title=&quot;GO语言文件基础语法&quot;&gt;&lt;/a&gt;GO语言文件基础语法&lt;/h2&gt;&lt;p&gt;存放Go源代码的文件后缀名是&lt;code&gt;.go&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;文件第一行：&lt;code&gt;package&lt;/code&gt;关键字声明包名&lt;/p&gt;
&lt;p&gt;如果要编译可执行文件，必须要有main包和main函数（入口函数）&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://weixian13.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="记录" scheme="https://weixian13.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="分享" scheme="https://weixian13.github.io/tags/%E5%88%86%E4%BA%AB/"/>
    
      <category term="golang" scheme="https://weixian13.github.io/tags/golang/"/>
    
      <category term="基础" scheme="https://weixian13.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Go-函数</title>
    <link href="https://weixian13.github.io/2020/10/29/Go-%E5%87%BD%E6%95%B0/"/>
    <id>https://weixian13.github.io/2020/10/29/Go-函数/</id>
    <published>2020-10-29T01:22:00.000Z</published>
    <updated>2020-10-30T06:19:05.967Z</updated>
    
    <content type="html"><![CDATA[<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p>+-*/</p><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p><code>&amp;&amp;</code> <code>||</code> <code>!</code></p><a id="more"></a><h3 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h3><p><code>&gt;&gt;</code> <code>&lt;&lt;</code> <code>|</code> <code>^</code> <code>&amp;</code></p><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p><code>=</code> <code>+=</code> 。。。</p><p><code>++</code> 和<code>--</code> 是独立的语句，不属于赋值运算符</p><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><p><code>&lt;</code> <code>&lt;=</code> <code>!=</code> 。。。</p><h2 id="数组（Array）"><a href="#数组（Array）" class="headerlink" title="数组（Array）"></a>数组（Array）</h2><p><code>var ages [30]int</code></p><p><code>var names [30]string</code></p><p><code>var nums [40]int</code></p><p>数组包含元素的类型和元素的个数。元素的个数（数组的长度）属于数组类型的一部分。</p><p>数组是值类型。</p><h2 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h2><p>切片的定义</p><p>切片不存值，它就像一个框，去底层数组框值。</p><p>切片：指针、长度、容量</p><p>切片的扩容策略：</p><pre><code>1. 如果申请的容量大于原来的2倍，那就直接扩容至新申请的容量 2. 如果小于1024， 那么就直接两倍 3. 如果大于1024，就按照1.25倍去扩容 4. 具体存储的值类型不同，扩容策略也有一定的不同。</code></pre><p>append函数</p><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><p>只需要记住两个符号：<code>&amp;</code> 和<code>*</code></p><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><p>map存储的是键值对的数据。</p><p>也是需要申请内存的。</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h3><h4 id="基本格式"><a href="#基本格式" class="headerlink" title="基本格式"></a>基本格式</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f1</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Hello 沙河！"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="参数的格式"><a href="#参数的格式" class="headerlink" title="参数的格式"></a>参数的格式</h4><p>有参数的函数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f2</span><span class="params">(name <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Hello"</span>, name)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数类型简写</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 参数类型简写</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f4</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可变参数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可变参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f5</span><span class="params">(title <span class="keyword">string</span>, y ...<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">fmt.Println(y) <span class="comment">// y是一个int类型的切片</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="返回值的格式"><a href="#返回值的格式" class="headerlink" title="返回值的格式"></a>返回值的格式</h4><p>有返回值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 带参数和返回值的函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f3</span><span class="params">(x <span class="keyword">int</span>, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">sum := x + y</span><br><span class="line"><span class="keyword">return</span> sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多返回值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Go语言中支持多个返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f7</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="params">(sum <span class="keyword">int</span>, sub <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">sum = x + y</span><br><span class="line">sub = x - y</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>命名返回值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 命名返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f6</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="params">(sum <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">sum = x + y <span class="comment">// 如果使用命名的返回值，那么在函数中可以直接使用返回值变量</span></span><br><span class="line"><span class="keyword">return</span>      <span class="comment">// 如果使用命名的返回值,return后面可以省略返回值变量</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h3><ol><li>全局作用域</li><li>函数作用域<ol><li>先在函数内部找变量，找不到往外层找</li><li>函数内部的变量，外部是访问不到的</li></ol></li><li>代码块作用域</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">100</span> <span class="comment">// 定义一个全局变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f1</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// x := 10</span></span><br><span class="line">name := <span class="string">"理想"</span></span><br><span class="line"><span class="comment">// 函数中查找变量的顺序</span></span><br><span class="line"><span class="comment">// 1. 先在函数内部查找</span></span><br><span class="line"><span class="comment">// 2. 找不到就往函数的外面查找,一直找到全局</span></span><br><span class="line">fmt.Println(x, name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">f1()</span><br><span class="line"><span class="comment">// fmt.Println(name) // 函数内部定义的变脸只能在该函数内部使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 语句块作用域</span></span><br><span class="line"><span class="keyword">if</span> i := <span class="number">10</span>; i &lt; <span class="number">18</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"乖乖上学"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// fmt.Println(i) // 不存在i</span></span><br><span class="line"><span class="keyword">for</span> j := <span class="number">0</span>; j &lt; <span class="number">5</span>; j++ &#123;</span><br><span class="line">fmt.Println(j)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// fmt.Println(j) // 不存在j</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="高阶函数"><a href="#高阶函数" class="headerlink" title="高阶函数"></a>高阶函数</h3><p>函数也是一种类型，它可以作为参数，也可以作为返回值。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数也可以作为参数的类型</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f3</span><span class="params">(x <span class="keyword">func</span>()</span> <span class="title">int</span>)</span> &#123;</span><br><span class="line">ret := x()</span><br><span class="line">fmt.Println(ret)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ff</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数还可以作为返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f5</span><span class="params">(x <span class="keyword">func</span>()</span> <span class="title">int</span>) <span class="title">func</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> ff</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><p>没有名字的函数。</p><p>多用在函数内部定义函数时使用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数内部没有办法声明带名字的函数</span></span><br><span class="line"><span class="comment">// 匿名函数</span></span><br><span class="line">f1 := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(x + y)</span><br><span class="line">&#125;</span><br><span class="line">f1(<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果只是调用一次的函数，还可以简写成立即执行函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(x + y)</span><br><span class="line">fmt.Println(<span class="string">"Hello world!"</span>)</span><br><span class="line">&#125;(<span class="number">100</span>, <span class="number">200</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="defer"><a href="#defer" class="headerlink" title="defer"></a>defer</h3><p>defer延迟调用，会把defer后面的语句延迟调用</p><p>把当时的状态都保存</p><p>defer多用于释放资源</p><p>多个defer存在时，按照先进后出的方式去执行。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">calc</span><span class="params">(index <span class="keyword">string</span>, a, b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">ret := a + b</span><br><span class="line">fmt.Println(index, a, b, ret)</span><br><span class="line"><span class="keyword">return</span> ret</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a := <span class="number">1</span></span><br><span class="line">b := <span class="number">2</span></span><br><span class="line"><span class="keyword">defer</span> calc(<span class="string">"1"</span>, a, calc(<span class="string">"10"</span>, a, b))</span><br><span class="line">a = <span class="number">0</span></span><br><span class="line"><span class="keyword">defer</span> calc(<span class="string">"2"</span>, a, calc(<span class="string">"20"</span>, a, b))</span><br><span class="line">b = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. a:=1</span></span><br><span class="line"><span class="comment">// 2. b:=2</span></span><br><span class="line"><span class="comment">// 3. defer calc("1", 1, calc("10", 1, 2))</span></span><br><span class="line"><span class="comment">// 4. calc("10", 1, 2) // "10" 1 2 3</span></span><br><span class="line"><span class="comment">// 5. defer calc("1", 1, 3)</span></span><br><span class="line"><span class="comment">// 6. a = 0</span></span><br><span class="line"><span class="comment">// 7. defer calc("2", 0, calc("20", 0, 2))</span></span><br><span class="line"><span class="comment">// 8. calc("20", 0, 2) // "20" 0 2 2</span></span><br><span class="line"><span class="comment">// 9. defer calc("2", 0, 2)</span></span><br><span class="line"><span class="comment">// 10. b = 1</span></span><br><span class="line"><span class="comment">// calc("2", 0, 2) // "2" 0 2 2</span></span><br><span class="line"><span class="comment">// calc("1", 1, 3) // "1" 1 3 4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 最终的答案：</span></span><br><span class="line"><span class="comment">// "10" 1 2 3</span></span><br><span class="line"><span class="comment">// "20" 0 2 2</span></span><br><span class="line"><span class="comment">//  "2" 0 2 2</span></span><br><span class="line"><span class="comment">// "1" 0 3 3</span></span><br></pre></td></tr></table></figure><h3 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h3><p><img src="//weixian13.github.io/2020/10/29/Go-函数/1563014612689.png" alt="1563014612689"></p><h3 id="panic和recover"><a href="#panic和recover" class="headerlink" title="panic和recover"></a>panic和recover</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">funcA</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"a"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">funcB</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 刚刚打开数据库连接</span></span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">err := <span class="built_in">recover</span>()</span><br><span class="line">fmt.Println(err)</span><br><span class="line">fmt.Println(<span class="string">"释放数据库连接..."</span>)</span><br><span class="line">&#125;()</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">"出现了严重的错误！！！"</span>) <span class="comment">// 程序崩溃退出</span></span><br><span class="line">fmt.Println(<span class="string">"b"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">funcC</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"c"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">funcA()</span><br><span class="line">funcB()</span><br><span class="line">funcC()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="难点"><a href="#难点" class="headerlink" title="难点"></a>难点</h3><ol><li>函数的定义</li><li>高阶函数</li><li>函数类型</li><li>闭包</li><li>defer</li><li>panic/revocer</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;运算符&quot;&gt;&lt;a href=&quot;#运算符&quot; class=&quot;headerlink&quot; title=&quot;运算符&quot;&gt;&lt;/a&gt;运算符&lt;/h2&gt;&lt;h3 id=&quot;算术运算符&quot;&gt;&lt;a href=&quot;#算术运算符&quot; class=&quot;headerlink&quot; title=&quot;算术运算符&quot;&gt;&lt;/a&gt;算术运算符&lt;/h3&gt;&lt;p&gt;+-*/&lt;/p&gt;
&lt;h3 id=&quot;逻辑运算符&quot;&gt;&lt;a href=&quot;#逻辑运算符&quot; class=&quot;headerlink&quot; title=&quot;逻辑运算符&quot;&gt;&lt;/a&gt;逻辑运算符&lt;/h3&gt;&lt;p&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;code&gt;||&lt;/code&gt; &lt;code&gt;!&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://weixian13.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="记录" scheme="https://weixian13.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="分享" scheme="https://weixian13.github.io/tags/%E5%88%86%E4%BA%AB/"/>
    
      <category term="golang" scheme="https://weixian13.github.io/tags/golang/"/>
    
      <category term="基础" scheme="https://weixian13.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>思维导图-Go语言基础</title>
    <link href="https://weixian13.github.io/2020/10/18/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE-Go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    <id>https://weixian13.github.io/2020/10/18/思维导图-Go语言基础/</id>
    <published>2020-10-18T09:30:28.000Z</published>
    <updated>2020-10-30T06:16:43.384Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Go语言基础"><a href="#Go语言基础" class="headerlink" title="Go语言基础"></a>Go语言基础</h1><h2 id="开发环境安装-MacOS"><a href="#开发环境安装-MacOS" class="headerlink" title="开发环境安装(MacOS)"></a>开发环境安装(MacOS)</h2><h3 id="安装go"><a href="#安装go" class="headerlink" title="安装go"></a>安装go</h3><ul><li><a href="https://golang.org" target="_blank" rel="noopener">https://golang.org</a></li></ul><a id="more"></a><h3 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h3><ul><li><a href="https://golang.org/dl/" target="_blank" rel="noopener">https://golang.org/dl/</a></li></ul><h3 id="IDE的安装-goland"><a href="#IDE的安装-goland" class="headerlink" title="IDE的安装(goland)"></a>IDE的安装(goland)</h3><ul><li><a href="https://www.jetbrains.com/go/" target="_blank" rel="noopener">https://www.jetbrains.com/go/</a></li></ul><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><h3 id="常量的类型可以是基本类型，可被赋予对应的基本值"><a href="#常量的类型可以是基本类型，可被赋予对应的基本值" class="headerlink" title="常量的类型可以是基本类型，可被赋予对应的基本值"></a>常量的类型可以是基本类型，可被赋予对应的基本值</h3><h3 id="常量声明"><a href="#常量声明" class="headerlink" title="常量声明"></a>常量声明</h3><ul><li><p>const num = 1</p></li><li><p>iota</p><ul><li>代表连续的、无类型的整数常量</li><li>以const开始的常量声明语句为单位</li><li>从0开始，每赋给一个常量就递增一次</li><li>const(<br>a = iota<br>bc<br>)</li></ul></li></ul><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3><ul><li>全局变量</li><li>局部变量</li></ul><h3 id="声明方式"><a href="#声明方式" class="headerlink" title="声明方式"></a>声明方式</h3><ul><li><p>var声明</p><ul><li>显示指定类型</li><li>不显示指定类型</li></ul></li><li><p>短变量声明</p><ul><li>仅允许在函数中出现</li><li>func main(){<br>a := 1<br>fmt.Println(a)<br>}</li></ul></li></ul><h3 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h3><ul><li>变量名必须以字母或下划线打头，名字中间只能由字母、数字和下划线“_”组成，区分大小写</li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><ul><li><p>布尔类型</p><ul><li>bool</li></ul></li><li><p>数值类型</p><ul><li><p>整数类型</p><ul><li>byte</li><li>rune</li><li>int/uint</li><li>int8/uint8</li><li>int16/uint16</li><li>int32/uint32</li><li>int64/uint64</li></ul></li><li><p>浮点数类型</p><ul><li>float32</li><li>float64</li></ul></li><li><p>复数类型</p><ul><li>complex64</li><li>complex128</li></ul></li></ul></li><li><p>字符串类型</p><ul><li>string</li></ul></li></ul><h3 id="高级数据类型"><a href="#高级数据类型" class="headerlink" title="高级数据类型"></a>高级数据类型</h3><ul><li>数组(array)</li><li>结构体(struct)</li><li>指针(*Xxx)</li><li>接口(interface)</li><li>函数(function)</li><li>字典(map)</li><li>切片(slice)</li><li>通道(chan)</li></ul><h3 id="值类型"><a href="#值类型" class="headerlink" title="值类型"></a>值类型</h3><ul><li><p>所有基本数据类型</p><ul><li><p>　布尔类型</p><ul><li>bool</li></ul></li><li><p>数值类型</p><ul><li><p>整数类型</p><ul><li>byte</li><li>rune</li><li>int/uint</li><li>int8/uint8</li><li>int16/uint16</li><li>int32/uint32</li><li>int64/uint64</li></ul></li><li><p>浮点数类型</p><ul><li>float32</li><li>float64</li></ul></li><li><p>复数类型</p><ul><li>complex64</li><li>complex128</li></ul></li></ul></li><li><p>字符串类型</p><ul><li>string</li></ul></li></ul></li><li><p>数组(array)</p></li><li><p>结构体(struct)</p></li></ul><h3 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h3><ul><li>指针(*Xxx)</li><li>接口(interface)</li><li>函数(function)</li><li>字典(map)</li><li>切片(slice)</li><li>通道(chan)</li></ul><h2 id="注释和引号"><a href="#注释和引号" class="headerlink" title="注释和引号"></a>注释和引号</h2><h3 id="注释的使用"><a href="#注释的使用" class="headerlink" title="注释的使用"></a>注释的使用</h3><ul><li><p>单行注释</p><ul><li>//这是注释</li></ul></li><li><p>多行注释</p><ul><li>/*这<br>是注释</li></ul></li></ul><p>*/</p><h3 id="引号的使用"><a href="#引号的使用" class="headerlink" title="引号的使用"></a>引号的使用</h3><ul><li><p>“双引号”</p><ul><li>可解析的字符串字面量</li></ul></li><li><p><code>反引号</code></p><ul><li>原生的字符串字面量</li></ul></li><li><p>‘单引号’</p><ul><li>表示rune类型，类似byte，但是将中英文字符都看作一个字符</li></ul></li></ul><h2 id="保留关键字"><a href="#保留关键字" class="headerlink" title="保留关键字"></a>保留关键字</h2><h3 id="1-break"><a href="#1-break" class="headerlink" title="1.break"></a>1.break</h3><h3 id="2-case"><a href="#2-case" class="headerlink" title="2.case"></a>2.case</h3><h3 id="3-chan"><a href="#3-chan" class="headerlink" title="3.chan"></a>3.chan</h3><h3 id="4-const"><a href="#4-const" class="headerlink" title="4.const"></a>4.const</h3><h3 id="5-continue"><a href="#5-continue" class="headerlink" title="5.continue"></a>5.continue</h3><h3 id="6-default"><a href="#6-default" class="headerlink" title="6.default"></a>6.default</h3><h3 id="7-defer"><a href="#7-defer" class="headerlink" title="7.defer"></a>7.defer</h3><h3 id="8-else"><a href="#8-else" class="headerlink" title="8.else"></a>8.else</h3><h3 id="9-fallthough"><a href="#9-fallthough" class="headerlink" title="9.fallthough"></a>9.fallthough</h3><h3 id="10-for"><a href="#10-for" class="headerlink" title="10.for"></a>10.for</h3><h3 id="11-func"><a href="#11-func" class="headerlink" title="11.func"></a>11.func</h3><h3 id="12-go"><a href="#12-go" class="headerlink" title="12.go"></a>12.go</h3><h3 id="13-goto"><a href="#13-goto" class="headerlink" title="13.goto"></a>13.goto</h3><h3 id="14-if"><a href="#14-if" class="headerlink" title="14.if"></a>14.if</h3><h3 id="15-import"><a href="#15-import" class="headerlink" title="15.import"></a>15.import</h3><h3 id="16-interface"><a href="#16-interface" class="headerlink" title="16.interface"></a>16.interface</h3><h3 id="17-map"><a href="#17-map" class="headerlink" title="17.map"></a>17.map</h3><h3 id="18-package"><a href="#18-package" class="headerlink" title="18.package"></a>18.package</h3><h3 id="19-range"><a href="#19-range" class="headerlink" title="19.range"></a>19.range</h3><h3 id="20-return"><a href="#20-return" class="headerlink" title="20.return"></a>20.return</h3><h3 id="21-select"><a href="#21-select" class="headerlink" title="21.select"></a>21.select</h3><h3 id="22-struct"><a href="#22-struct" class="headerlink" title="22.struct"></a>22.struct</h3><h3 id="23-switch"><a href="#23-switch" class="headerlink" title="23.switch"></a>23.switch</h3><h3 id="24-type"><a href="#24-type" class="headerlink" title="24.type"></a>24.type</h3><h3 id="25-var"><a href="#25-var" class="headerlink" title="25.var"></a>25.var</h3><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="go语句"><a href="#go语句" class="headerlink" title="go语句"></a>go语句</h3><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><h3 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a>for语句</h3><h3 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h3><ul><li>fallthough</li><li>continue</li><li>break</li></ul><h3 id="select语句"><a href="#select语句" class="headerlink" title="select语句"></a>select语句</h3><h3 id="defer语句"><a href="#defer语句" class="headerlink" title="defer语句"></a>defer语句</h3><h3 id="goto语句"><a href="#goto语句" class="headerlink" title="goto语句"></a>goto语句</h3><h3 id="label语句"><a href="#label语句" class="headerlink" title="label语句"></a>label语句</h3><h2 id="常用包"><a href="#常用包" class="headerlink" title="常用包"></a>常用包</h2><h3 id="strings包"><a href="#strings包" class="headerlink" title="strings包"></a>strings包</h3><ul><li><p>1.判断</p><ul><li><p>1.strings.HasPrefix(s string, prefix string) bool：<br>判断字符串s是否以prefix开头 </p><ul><li>判断一个url是否以http://开头，如果不是，则加上http://</li></ul></li><li><p>2.strings.HasSuffix(s string, suffix string) bool：<br>判断字符串s是否以suffix结尾。</p><ul><li>判断一个路径是否以“/”结尾，如果不是，则加上/</li></ul></li><li><ol start="3"><li>strings.Index(s string, str string) int：<br>判断str在s中首次出现的位置，如果没有出现，则返回-1</li></ol></li><li><ol start="4"><li>strings.LastIndex(s string, str string) int：<br>判断str在s中最后出现的位置，如果没有出现，则返回-1</li></ol></li></ul></li><li><p>2.替换</p><ul><li>strings.Replace(str string, old string, new string, n int)：</li></ul></li><li><p>3.计数</p><ul><li>strings.Count(str string, substr string)int：</li></ul></li><li><p>4.重复</p><ul><li>strings.Repeat(str string, count int)string：</li></ul></li><li><p>5.转换</p><ul><li>strings.ToLower(str string)string：<br>转为小写</li><li>strings.ToUpper(str string)string：<br>转为大写</li></ul></li><li><p>6.删减</p><ul><li>strings.TrimSpace(str string)：<br>去掉字符串首尾空白字符</li><li>strings.Trim(str string, cut string)：<br>去掉字符串首尾cut字符</li><li>strings.TrimLeft(str string, cut string)：<br>去掉字符串首cut字符</li><li>strings.TrimRight(str string, cut string)：<br>去掉字符串尾cut字符</li></ul></li><li><p>7.分隔</p><ul><li>strings.Field(str string)：<br>返回str空格分隔的所有子串的slice</li><li>strings.Split(str string, split string)：<br>返回str split分隔的所有子串的slice</li></ul></li><li><p>8.连接</p><ul><li>strings.Join(s1 []string, sep string)：<br>用sep把s1中的所有元素链接起来</li></ul></li></ul><h3 id="strconv包"><a href="#strconv包" class="headerlink" title="strconv包"></a>strconv包</h3><ul><li><p>1.把一个整数转成字符串</p><ul><li>strconv.Itoa(i int)：</li></ul></li><li><p>2.把一个字符串转成整数</p><ul><li>strconv.Atoi(str string)(int, error)：</li></ul></li></ul><h3 id="time包"><a href="#time包" class="headerlink" title="time包"></a>time包</h3><ul><li><p>1.表示时间的类型</p><ul><li>time.Time()</li></ul></li><li><p>2.获取当前的时间</p><ul><li>time.Now()</li><li>time.Now().Minute()</li><li>time.Now().Day()</li><li>time.Now().Month()</li><li>time.Now().Year()</li></ul></li><li><p>3.格式化输出</p><ul><li>fmt.Println(now.Format(“2006-01-02 15:04:05”))<br>fmt.Println(now.Format(“2006/1/2 15:04:05”))<br>fmt.Println(now.Format(“2006/01/02 15:04:05”))<br>fmt.Println(now.Format(“15:04:05 2006/1/2”))<br>fmt.Println(now.Format(“2006/1/2”))</li></ul></li></ul><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><h3 id="error接口"><a href="#error接口" class="headerlink" title="error接口"></a>error接口</h3><ul><li>error.New()函数</li><li>fmt.Errorf函数</li><li>自定义错误类型</li><li>自定义错误值</li></ul><h3 id="panic函数"><a href="#panic函数" class="headerlink" title="panic函数"></a>panic函数</h3><ul><li>与error接口及其实现值的连勇</li></ul><h3 id="recover函数"><a href="#recover函数" class="headerlink" title="recover函数"></a>recover函数</h3><ul><li>与defer语句的联用</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Go语言基础&quot;&gt;&lt;a href=&quot;#Go语言基础&quot; class=&quot;headerlink&quot; title=&quot;Go语言基础&quot;&gt;&lt;/a&gt;Go语言基础&lt;/h1&gt;&lt;h2 id=&quot;开发环境安装-MacOS&quot;&gt;&lt;a href=&quot;#开发环境安装-MacOS&quot; class=&quot;headerlink&quot; title=&quot;开发环境安装(MacOS)&quot;&gt;&lt;/a&gt;开发环境安装(MacOS)&lt;/h2&gt;&lt;h3 id=&quot;安装go&quot;&gt;&lt;a href=&quot;#安装go&quot; class=&quot;headerlink&quot; title=&quot;安装go&quot;&gt;&lt;/a&gt;安装go&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://golang.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://golang.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://weixian13.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="记录" scheme="https://weixian13.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="golang" scheme="https://weixian13.github.io/tags/golang/"/>
    
      <category term="基础" scheme="https://weixian13.github.io/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>100 numpy exercises</title>
    <link href="https://weixian13.github.io/2019/06/29/100%20numpy%20exercises/"/>
    <id>https://weixian13.github.io/2019/06/29/100 numpy exercises/</id>
    <published>2019-06-29T12:40:11.000Z</published>
    <updated>2020-10-30T06:16:07.821Z</updated>
    
    <content type="html"><![CDATA[<h6 id="This-is-a-collection-of-exercises-that-have-been-collected-in-the-numpy-mailing-list-on-stack-overflow-and-in-the-numpy-documentation-The-goal-of-this-collection-is-to-offer-a-quick-reference-for-both-old-and-new-users-but-also-to-provide-a-set-of-exercises-for-those-who-teach-If-you-find-an-error-or-think-you’ve-a-better-way-to-solve-some-of-them-feel-free-to-open-an-issue-at-https-github-com-rougier-numpy-100"><a href="#This-is-a-collection-of-exercises-that-have-been-collected-in-the-numpy-mailing-list-on-stack-overflow-and-in-the-numpy-documentation-The-goal-of-this-collection-is-to-offer-a-quick-reference-for-both-old-and-new-users-but-also-to-provide-a-set-of-exercises-for-those-who-teach-If-you-find-an-error-or-think-you’ve-a-better-way-to-solve-some-of-them-feel-free-to-open-an-issue-at-https-github-com-rougier-numpy-100" class="headerlink" title="This is a collection of exercises that have been collected in the numpy mailing list, on stack overflow and in the numpy documentation. The goal of this collection is to offer a quick reference for both old and new users but also to provide a set of exercises for those who teach.If you find an error or think you’ve a better way to solve some of them, feel free to open an issue at https://github.com/rougier/numpy-100"></a>This is a collection of exercises that have been collected in the numpy mailing list, on stack overflow and in the numpy documentation. The goal of this collection is to offer a quick reference for both old and new users but also to provide a set of exercises for those who teach.If you find an error or think you’ve a better way to solve some of them, feel free to open an issue at <a href="https://github.com/rougier/numpy-100" target="_blank" rel="noopener">https://github.com/rougier/numpy-100</a></h6><a id="more"></a><h4 id="1-Import-the-numpy-package-under-the-name-np-★☆☆"><a href="#1-Import-the-numpy-package-under-the-name-np-★☆☆" class="headerlink" title="1. Import the numpy package under the name np (★☆☆)"></a>1. Import the numpy package under the name <code>np</code> (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><h4 id="2-Print-the-numpy-version-and-the-configuration-★☆☆"><a href="#2-Print-the-numpy-version-and-the-configuration-★☆☆" class="headerlink" title="2. Print the numpy version and the configuration (★☆☆)"></a>2. Print the numpy version and the configuration (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(np.__version__)</span><br><span class="line">np.show_config()</span><br></pre></td></tr></table></figure><h4 id="3-Create-a-null-vector-of-size-10-★☆☆"><a href="#3-Create-a-null-vector-of-size-10-★☆☆" class="headerlink" title="3. Create a null vector of size 10 (★☆☆)"></a>3. Create a null vector of size 10 (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Z = np.zeros(<span class="number">10</span>)</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="4-How-to-find-the-memory-size-of-any-array-★☆☆"><a href="#4-How-to-find-the-memory-size-of-any-array-★☆☆" class="headerlink" title="4.  How to find the memory size of any array (★☆☆)"></a>4.  How to find the memory size of any array (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Z = np.zeros((<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line">print(<span class="string">"%d bytes"</span> % (Z.size * Z.itemsize))</span><br></pre></td></tr></table></figure><h4 id="5-How-to-get-the-documentation-of-the-numpy-add-function-from-the-command-line-★☆☆"><a href="#5-How-to-get-the-documentation-of-the-numpy-add-function-from-the-command-line-★☆☆" class="headerlink" title="5.  How to get the documentation of the numpy add function from the command line? (★☆☆)"></a>5.  How to get the documentation of the numpy add function from the command line? (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%run `python -c <span class="string">"import numpy; numpy.info(numpy.add)"</span>`</span><br></pre></td></tr></table></figure><h4 id="6-Create-a-null-vector-of-size-10-but-the-fifth-value-which-is-1-★☆☆"><a href="#6-Create-a-null-vector-of-size-10-but-the-fifth-value-which-is-1-★☆☆" class="headerlink" title="6.  Create a null vector of size 10 but the fifth value which is 1 (★☆☆)"></a>6.  Create a null vector of size 10 but the fifth value which is 1 (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Z = np.zeros(<span class="number">10</span>)</span><br><span class="line">Z[<span class="number">4</span>] = <span class="number">1</span></span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="7-Create-a-vector-with-values-ranging-from-10-to-49-★☆☆"><a href="#7-Create-a-vector-with-values-ranging-from-10-to-49-★☆☆" class="headerlink" title="7.  Create a vector with values ranging from 10 to 49 (★☆☆)"></a>7.  Create a vector with values ranging from 10 to 49 (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Z = np.arange(<span class="number">10</span>,<span class="number">50</span>)</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="8-Reverse-a-vector-first-element-becomes-last-★☆☆"><a href="#8-Reverse-a-vector-first-element-becomes-last-★☆☆" class="headerlink" title="8.  Reverse a vector (first element becomes last) (★☆☆)"></a>8.  Reverse a vector (first element becomes last) (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Z = np.arange(<span class="number">50</span>)</span><br><span class="line">Z = Z[::<span class="number">-1</span>]</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="9-Create-a-3x3-matrix-with-values-ranging-from-0-to-8-★☆☆"><a href="#9-Create-a-3x3-matrix-with-values-ranging-from-0-to-8-★☆☆" class="headerlink" title="9.  Create a 3x3 matrix with values ranging from 0 to 8 (★☆☆)"></a>9.  Create a 3x3 matrix with values ranging from 0 to 8 (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Z = np.arange(<span class="number">9</span>).reshape(<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="10-Find-indices-of-non-zero-elements-from-1-2-0-0-4-0-★☆☆"><a href="#10-Find-indices-of-non-zero-elements-from-1-2-0-0-4-0-★☆☆" class="headerlink" title="10. Find indices of non-zero elements from [1,2,0,0,4,0] (★☆☆)"></a>10. Find indices of non-zero elements from [1,2,0,0,4,0] (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nz = np.nonzero([<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">0</span>])</span><br><span class="line">print(nz)</span><br></pre></td></tr></table></figure><h4 id="11-Create-a-3x3-identity-matrix-★☆☆"><a href="#11-Create-a-3x3-identity-matrix-★☆☆" class="headerlink" title="11. Create a 3x3 identity matrix (★☆☆)"></a>11. Create a 3x3 identity matrix (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Z = np.eye(<span class="number">3</span>)</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="12-Create-a-3x3x3-array-with-random-values-★☆☆"><a href="#12-Create-a-3x3x3-array-with-random-values-★☆☆" class="headerlink" title="12. Create a 3x3x3 array with random values (★☆☆)"></a>12. Create a 3x3x3 array with random values (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Z = np.random.random((<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>))</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="13-Create-a-10x10-array-with-random-values-and-find-the-minimum-and-maximum-values-★☆☆"><a href="#13-Create-a-10x10-array-with-random-values-and-find-the-minimum-and-maximum-values-★☆☆" class="headerlink" title="13. Create a 10x10 array with random values and find the minimum and maximum values (★☆☆)"></a>13. Create a 10x10 array with random values and find the minimum and maximum values (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Z = np.random.random((<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line">Zmin, Zmax = Z.min(), Z.max()</span><br><span class="line">print(Zmin, Zmax)</span><br></pre></td></tr></table></figure><h4 id="14-Create-a-random-vector-of-size-30-and-find-the-mean-value-★☆☆"><a href="#14-Create-a-random-vector-of-size-30-and-find-the-mean-value-★☆☆" class="headerlink" title="14. Create a random vector of size 30 and find the mean value (★☆☆)"></a>14. Create a random vector of size 30 and find the mean value (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Z = np.random.random(<span class="number">30</span>)</span><br><span class="line">m = Z.mean()</span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><h4 id="15-Create-a-2d-array-with-1-on-the-border-and-0-inside-★☆☆"><a href="#15-Create-a-2d-array-with-1-on-the-border-and-0-inside-★☆☆" class="headerlink" title="15. Create a 2d array with 1 on the border and 0 inside (★☆☆)"></a>15. Create a 2d array with 1 on the border and 0 inside (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Z = np.ones((<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line">Z[<span class="number">1</span>:<span class="number">-1</span>,<span class="number">1</span>:<span class="number">-1</span>] = <span class="number">0</span></span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="16-How-to-add-a-border-filled-with-0’s-around-an-existing-array-★☆☆"><a href="#16-How-to-add-a-border-filled-with-0’s-around-an-existing-array-★☆☆" class="headerlink" title="16. How to add a border (filled with 0’s) around an existing array? (★☆☆)"></a>16. How to add a border (filled with 0’s) around an existing array? (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Z = np.ones((<span class="number">5</span>,<span class="number">5</span>))</span><br><span class="line">Z = np.pad(Z, pad_width=<span class="number">1</span>, mode=<span class="string">'constant'</span>, constant_values=<span class="number">0</span>)</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="17-What-is-the-result-of-the-following-expression-★☆☆"><a href="#17-What-is-the-result-of-the-following-expression-★☆☆" class="headerlink" title="17. What is the result of the following expression? (★☆☆)"></a>17. What is the result of the following expression? (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">0</span> * np.nan)</span><br><span class="line">print(np.nan == np.nan)</span><br><span class="line">print(np.inf &gt; np.nan)</span><br><span class="line">print(np.nan - np.nan)</span><br><span class="line">print(np.nan <span class="keyword">in</span> set([np.nan]))</span><br><span class="line">print(<span class="number">0.3</span> == <span class="number">3</span> * <span class="number">0.1</span>)</span><br></pre></td></tr></table></figure><h4 id="18-Create-a-5x5-matrix-with-values-1-2-3-4-just-below-the-diagonal-★☆☆"><a href="#18-Create-a-5x5-matrix-with-values-1-2-3-4-just-below-the-diagonal-★☆☆" class="headerlink" title="18. Create a 5x5 matrix with values 1,2,3,4 just below the diagonal (★☆☆)"></a>18. Create a 5x5 matrix with values 1,2,3,4 just below the diagonal (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Z = np.diag(<span class="number">1</span>+np.arange(<span class="number">4</span>),k=<span class="number">-1</span>)</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="19-Create-a-8x8-matrix-and-fill-it-with-a-checkerboard-pattern-★☆☆"><a href="#19-Create-a-8x8-matrix-and-fill-it-with-a-checkerboard-pattern-★☆☆" class="headerlink" title="19. Create a 8x8 matrix and fill it with a checkerboard pattern (★☆☆)"></a>19. Create a 8x8 matrix and fill it with a checkerboard pattern (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Z = np.zeros((<span class="number">8</span>,<span class="number">8</span>),dtype=int)</span><br><span class="line">Z[<span class="number">1</span>::<span class="number">2</span>,::<span class="number">2</span>] = <span class="number">1</span></span><br><span class="line">Z[::<span class="number">2</span>,<span class="number">1</span>::<span class="number">2</span>] = <span class="number">1</span></span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="20-Consider-a-6-7-8-shape-array-what-is-the-index-x-y-z-of-the-100th-element"><a href="#20-Consider-a-6-7-8-shape-array-what-is-the-index-x-y-z-of-the-100th-element" class="headerlink" title="20. Consider a (6,7,8) shape array, what is the index (x,y,z) of the 100th element?"></a>20. Consider a (6,7,8) shape array, what is the index (x,y,z) of the 100th element?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(np.unravel_index(<span class="number">99</span>,(<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>)))</span><br></pre></td></tr></table></figure><h4 id="21-Create-a-checkerboard-8x8-matrix-using-the-tile-function-★☆☆"><a href="#21-Create-a-checkerboard-8x8-matrix-using-the-tile-function-★☆☆" class="headerlink" title="21. Create a checkerboard 8x8 matrix using the tile function (★☆☆)"></a>21. Create a checkerboard 8x8 matrix using the tile function (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Z = np.tile( np.array([[<span class="number">0</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">0</span>]]), (<span class="number">4</span>,<span class="number">4</span>))</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="22-Normalize-a-5x5-random-matrix-★☆☆"><a href="#22-Normalize-a-5x5-random-matrix-★☆☆" class="headerlink" title="22. Normalize a 5x5 random matrix (★☆☆)"></a>22. Normalize a 5x5 random matrix (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Z = np.random.random((<span class="number">5</span>,<span class="number">5</span>))</span><br><span class="line">Z = (Z - np.mean (Z)) / (np.std (Z))</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="23-Create-a-custom-dtype-that-describes-a-color-as-four-unsigned-bytes-RGBA-★☆☆"><a href="#23-Create-a-custom-dtype-that-describes-a-color-as-four-unsigned-bytes-RGBA-★☆☆" class="headerlink" title="23. Create a custom dtype that describes a color as four unsigned bytes (RGBA) (★☆☆)"></a>23. Create a custom dtype that describes a color as four unsigned bytes (RGBA) (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">color = np.dtype([(<span class="string">"r"</span>, np.ubyte, <span class="number">1</span>),</span><br><span class="line">                  (<span class="string">"g"</span>, np.ubyte, <span class="number">1</span>),</span><br><span class="line">                  (<span class="string">"b"</span>, np.ubyte, <span class="number">1</span>),</span><br><span class="line">                  (<span class="string">"a"</span>, np.ubyte, <span class="number">1</span>)])</span><br></pre></td></tr></table></figure><h4 id="24-Multiply-a-5x3-matrix-by-a-3x2-matrix-real-matrix-product-★☆☆"><a href="#24-Multiply-a-5x3-matrix-by-a-3x2-matrix-real-matrix-product-★☆☆" class="headerlink" title="24. Multiply a 5x3 matrix by a 3x2 matrix (real matrix product) (★☆☆)"></a>24. Multiply a 5x3 matrix by a 3x2 matrix (real matrix product) (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Z = np.dot(np.ones((<span class="number">5</span>,<span class="number">3</span>)), np.ones((<span class="number">3</span>,<span class="number">2</span>)))</span><br><span class="line">print(Z)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Alternative solution, in Python 3.5 and above</span></span><br><span class="line">Z = np.ones((<span class="number">5</span>,<span class="number">3</span>)) @ np.ones((<span class="number">3</span>,<span class="number">2</span>))</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="25-Given-a-1D-array-negate-all-elements-which-are-between-3-and-8-in-place-★☆☆"><a href="#25-Given-a-1D-array-negate-all-elements-which-are-between-3-and-8-in-place-★☆☆" class="headerlink" title="25. Given a 1D array, negate all elements which are between 3 and 8, in place. (★☆☆)"></a>25. Given a 1D array, negate all elements which are between 3 and 8, in place. (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Evgeni Burovski</span></span><br><span class="line"></span><br><span class="line">Z = np.arange(<span class="number">11</span>)</span><br><span class="line">Z[(<span class="number">3</span> &lt; Z) &amp; (Z &lt;= <span class="number">8</span>)] *= <span class="number">-1</span></span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="26-What-is-the-output-of-the-following-script-★☆☆"><a href="#26-What-is-the-output-of-the-following-script-★☆☆" class="headerlink" title="26. What is the output of the following script? (★☆☆)"></a>26. What is the output of the following script? (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Jake VanderPlas</span></span><br><span class="line"></span><br><span class="line">print(sum(range(<span class="number">5</span>),<span class="number">-1</span>))</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line">print(sum(range(<span class="number">5</span>),<span class="number">-1</span>))</span><br></pre></td></tr></table></figure><h4 id="27-Consider-an-integer-vector-Z-which-of-these-expressions-are-legal-★☆☆"><a href="#27-Consider-an-integer-vector-Z-which-of-these-expressions-are-legal-★☆☆" class="headerlink" title="27. Consider an integer vector Z, which of these expressions are legal? (★☆☆)"></a>27. Consider an integer vector Z, which of these expressions are legal? (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Z**Z</span><br><span class="line"><span class="number">2</span> &lt;&lt; Z &gt;&gt; <span class="number">2</span></span><br><span class="line">Z &lt;- Z</span><br><span class="line"><span class="number">1j</span>*Z</span><br><span class="line">Z/<span class="number">1</span>/<span class="number">1</span></span><br><span class="line">Z&lt;Z&gt;Z</span><br></pre></td></tr></table></figure><h4 id="28-What-are-the-result-of-the-following-expressions"><a href="#28-What-are-the-result-of-the-following-expressions" class="headerlink" title="28. What are the result of the following expressions?"></a>28. What are the result of the following expressions?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(np.array(<span class="number">0</span>) / np.array(<span class="number">0</span>))</span><br><span class="line">print(np.array(<span class="number">0</span>) // np.array(<span class="number">0</span>))</span><br><span class="line">print(np.array([np.nan]).astype(int).astype(float))</span><br></pre></td></tr></table></figure><h4 id="29-How-to-round-away-from-zero-a-float-array-★☆☆"><a href="#29-How-to-round-away-from-zero-a-float-array-★☆☆" class="headerlink" title="29. How to round away from zero a float array ? (★☆☆)"></a>29. How to round away from zero a float array ? (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Charles R Harris</span></span><br><span class="line"></span><br><span class="line">Z = np.random.uniform(<span class="number">-10</span>,+<span class="number">10</span>,<span class="number">10</span>)</span><br><span class="line"><span class="keyword">print</span> (np.copysign(np.ceil(np.abs(Z)), Z))</span><br></pre></td></tr></table></figure><h4 id="30-How-to-find-common-values-between-two-arrays-★☆☆"><a href="#30-How-to-find-common-values-between-two-arrays-★☆☆" class="headerlink" title="30. How to find common values between two arrays? (★☆☆)"></a>30. How to find common values between two arrays? (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Z1 = np.random.randint(<span class="number">0</span>,<span class="number">10</span>,<span class="number">10</span>)</span><br><span class="line">Z2 = np.random.randint(<span class="number">0</span>,<span class="number">10</span>,<span class="number">10</span>)</span><br><span class="line">print(np.intersect1d(Z1,Z2))</span><br></pre></td></tr></table></figure><h4 id="31-How-to-ignore-all-numpy-warnings-not-recommended-★☆☆"><a href="#31-How-to-ignore-all-numpy-warnings-not-recommended-★☆☆" class="headerlink" title="31. How to ignore all numpy warnings (not recommended)? (★☆☆)"></a>31. How to ignore all numpy warnings (not recommended)? (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Suicide mode on</span></span><br><span class="line">defaults = np.seterr(all=<span class="string">"ignore"</span>)</span><br><span class="line">Z = np.ones(<span class="number">1</span>) / <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Back to sanity</span></span><br><span class="line">_ = np.seterr(**defaults)</span><br></pre></td></tr></table></figure><p>An equivalent way, with a context manager:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> np.errstate(divide=<span class="string">'ignore'</span>):</span><br><span class="line">    Z = np.ones(<span class="number">1</span>) / <span class="number">0</span></span><br></pre></td></tr></table></figure><h4 id="32-Is-the-following-expressions-true-★☆☆"><a href="#32-Is-the-following-expressions-true-★☆☆" class="headerlink" title="32. Is the following expressions true? (★☆☆)"></a>32. Is the following expressions true? (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.sqrt(<span class="number">-1</span>) == np.emath.sqrt(<span class="number">-1</span>)</span><br></pre></td></tr></table></figure><h4 id="33-How-to-get-the-dates-of-yesterday-today-and-tomorrow-★☆☆"><a href="#33-How-to-get-the-dates-of-yesterday-today-and-tomorrow-★☆☆" class="headerlink" title="33. How to get the dates of yesterday, today and tomorrow? (★☆☆)"></a>33. How to get the dates of yesterday, today and tomorrow? (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yesterday = np.datetime64(<span class="string">'today'</span>, <span class="string">'D'</span>) - np.timedelta64(<span class="number">1</span>, <span class="string">'D'</span>)</span><br><span class="line">today     = np.datetime64(<span class="string">'today'</span>, <span class="string">'D'</span>)</span><br><span class="line">tomorrow  = np.datetime64(<span class="string">'today'</span>, <span class="string">'D'</span>) + np.timedelta64(<span class="number">1</span>, <span class="string">'D'</span>)</span><br></pre></td></tr></table></figure><h4 id="34-How-to-get-all-the-dates-corresponding-to-the-month-of-July-2016-★★☆"><a href="#34-How-to-get-all-the-dates-corresponding-to-the-month-of-July-2016-★★☆" class="headerlink" title="34. How to get all the dates corresponding to the month of July 2016? (★★☆)"></a>34. How to get all the dates corresponding to the month of July 2016? (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Z = np.arange(<span class="string">'2016-07'</span>, <span class="string">'2016-08'</span>, dtype=<span class="string">'datetime64[D]'</span>)</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="35-How-to-compute-A-B-A-2-in-place-without-copy-★★☆"><a href="#35-How-to-compute-A-B-A-2-in-place-without-copy-★★☆" class="headerlink" title="35. How to compute ((A+B)*(-A/2)) in place (without copy)? (★★☆)"></a>35. How to compute ((A+B)*(-A/2)) in place (without copy)? (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">A = np.ones(<span class="number">3</span>)*<span class="number">1</span></span><br><span class="line">B = np.ones(<span class="number">3</span>)*<span class="number">2</span></span><br><span class="line">C = np.ones(<span class="number">3</span>)*<span class="number">3</span></span><br><span class="line">np.add(A,B,out=B)</span><br><span class="line">np.divide(A,<span class="number">2</span>,out=A)</span><br><span class="line">np.negative(A,out=A)</span><br><span class="line">np.multiply(A,B,out=A)</span><br></pre></td></tr></table></figure><h4 id="36-Extract-the-integer-part-of-a-random-array-using-5-different-methods-★★☆"><a href="#36-Extract-the-integer-part-of-a-random-array-using-5-different-methods-★★☆" class="headerlink" title="36. Extract the integer part of a random array using 5 different methods (★★☆)"></a>36. Extract the integer part of a random array using 5 different methods (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Z = np.random.uniform(<span class="number">0</span>,<span class="number">10</span>,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> (Z - Z%<span class="number">1</span>)</span><br><span class="line"><span class="keyword">print</span> (np.floor(Z))</span><br><span class="line"><span class="keyword">print</span> (np.ceil(Z)<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">print</span> (Z.astype(int))</span><br><span class="line"><span class="keyword">print</span> (np.trunc(Z))</span><br></pre></td></tr></table></figure><h4 id="37-Create-a-5x5-matrix-with-row-values-ranging-from-0-to-4-★★☆"><a href="#37-Create-a-5x5-matrix-with-row-values-ranging-from-0-to-4-★★☆" class="headerlink" title="37. Create a 5x5 matrix with row values ranging from 0 to 4 (★★☆)"></a>37. Create a 5x5 matrix with row values ranging from 0 to 4 (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Z = np.zeros((<span class="number">5</span>,<span class="number">5</span>))</span><br><span class="line">Z += np.arange(<span class="number">5</span>)</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="38-Consider-a-generator-function-that-generates-10-integers-and-use-it-to-build-an-array-★☆☆"><a href="#38-Consider-a-generator-function-that-generates-10-integers-and-use-it-to-build-an-array-★☆☆" class="headerlink" title="38. Consider a generator function that generates 10 integers and use it to build an array (★☆☆)"></a>38. Consider a generator function that generates 10 integers and use it to build an array (★☆☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">yield</span> x</span><br><span class="line">Z = np.fromiter(generate(),dtype=float,count=<span class="number">-1</span>)</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="39-Create-a-vector-of-size-10-with-values-ranging-from-0-to-1-both-excluded-★★☆"><a href="#39-Create-a-vector-of-size-10-with-values-ranging-from-0-to-1-both-excluded-★★☆" class="headerlink" title="39. Create a vector of size 10 with values ranging from 0 to 1, both excluded (★★☆)"></a>39. Create a vector of size 10 with values ranging from 0 to 1, both excluded (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Z = np.linspace(<span class="number">0</span>,<span class="number">1</span>,<span class="number">11</span>,endpoint=<span class="literal">False</span>)[<span class="number">1</span>:]</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="40-Create-a-random-vector-of-size-10-and-sort-it-★★☆"><a href="#40-Create-a-random-vector-of-size-10-and-sort-it-★★☆" class="headerlink" title="40. Create a random vector of size 10 and sort it (★★☆)"></a>40. Create a random vector of size 10 and sort it (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Z = np.random.random(<span class="number">10</span>)</span><br><span class="line">Z.sort()</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="41-How-to-sum-a-small-array-faster-than-np-sum-★★☆"><a href="#41-How-to-sum-a-small-array-faster-than-np-sum-★★☆" class="headerlink" title="41. How to sum a small array faster than np.sum? (★★☆)"></a>41. How to sum a small array faster than np.sum? (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Evgeni Burovski</span></span><br><span class="line"></span><br><span class="line">Z = np.arange(<span class="number">10</span>)</span><br><span class="line">np.add.reduce(Z)</span><br></pre></td></tr></table></figure><h4 id="42-Consider-two-random-array-A-and-B-check-if-they-are-equal-★★☆"><a href="#42-Consider-two-random-array-A-and-B-check-if-they-are-equal-★★☆" class="headerlink" title="42. Consider two random array A and B, check if they are equal (★★☆)"></a>42. Consider two random array A and B, check if they are equal (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">A = np.random.randint(<span class="number">0</span>,<span class="number">2</span>,<span class="number">5</span>)</span><br><span class="line">B = np.random.randint(<span class="number">0</span>,<span class="number">2</span>,<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Assuming identical shape of the arrays and a tolerance for the comparison of values</span></span><br><span class="line">equal = np.allclose(A,B)</span><br><span class="line">print(equal)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Checking both the shape and the element values, no tolerance (values have to be exactly equal)</span></span><br><span class="line">equal = np.array_equal(A,B)</span><br><span class="line">print(equal)</span><br></pre></td></tr></table></figure><h4 id="43-Make-an-array-immutable-read-only-★★☆"><a href="#43-Make-an-array-immutable-read-only-★★☆" class="headerlink" title="43. Make an array immutable (read-only) (★★☆)"></a>43. Make an array immutable (read-only) (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Z = np.zeros(<span class="number">10</span>)</span><br><span class="line">Z.flags.writeable = <span class="literal">False</span></span><br><span class="line">Z[<span class="number">0</span>] = <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="44-Consider-a-random-10x2-matrix-representing-cartesian-coordinates-convert-them-to-polar-coordinates-★★☆"><a href="#44-Consider-a-random-10x2-matrix-representing-cartesian-coordinates-convert-them-to-polar-coordinates-★★☆" class="headerlink" title="44. Consider a random 10x2 matrix representing cartesian coordinates, convert them to polar coordinates (★★☆)"></a>44. Consider a random 10x2 matrix representing cartesian coordinates, convert them to polar coordinates (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Z = np.random.random((<span class="number">10</span>,<span class="number">2</span>))</span><br><span class="line">X,Y = Z[:,<span class="number">0</span>], Z[:,<span class="number">1</span>]</span><br><span class="line">R = np.sqrt(X**<span class="number">2</span>+Y**<span class="number">2</span>)</span><br><span class="line">T = np.arctan2(Y,X)</span><br><span class="line">print(R)</span><br><span class="line">print(T)</span><br></pre></td></tr></table></figure><h4 id="45-Create-random-vector-of-size-10-and-replace-the-maximum-value-by-0-★★☆"><a href="#45-Create-random-vector-of-size-10-and-replace-the-maximum-value-by-0-★★☆" class="headerlink" title="45. Create random vector of size 10 and replace the maximum value by 0 (★★☆)"></a>45. Create random vector of size 10 and replace the maximum value by 0 (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Z = np.random.random(<span class="number">10</span>)</span><br><span class="line">Z[Z.argmax()] = <span class="number">0</span></span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="46-Create-a-structured-array-with-x-and-y-coordinates-covering-the-0-1-x-0-1-area-★★☆"><a href="#46-Create-a-structured-array-with-x-and-y-coordinates-covering-the-0-1-x-0-1-area-★★☆" class="headerlink" title="46. Create a structured array with x and y coordinates covering the [0,1]x[0,1] area (★★☆)"></a>46. Create a structured array with <code>x</code> and <code>y</code> coordinates covering the [0,1]x[0,1] area (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Z = np.zeros((<span class="number">5</span>,<span class="number">5</span>), [(<span class="string">'x'</span>,float),(<span class="string">'y'</span>,float)])</span><br><span class="line">Z[<span class="string">'x'</span>], Z[<span class="string">'y'</span>] = np.meshgrid(np.linspace(<span class="number">0</span>,<span class="number">1</span>,<span class="number">5</span>),</span><br><span class="line">                             np.linspace(<span class="number">0</span>,<span class="number">1</span>,<span class="number">5</span>))</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="47-Given-two-arrays-X-and-Y-construct-the-Cauchy-matrix-C-Cij-1-xi-yj"><a href="#47-Given-two-arrays-X-and-Y-construct-the-Cauchy-matrix-C-Cij-1-xi-yj" class="headerlink" title="47. Given two arrays, X and Y, construct the Cauchy matrix C (Cij =1/(xi - yj))"></a>47. Given two arrays, X and Y, construct the Cauchy matrix C (Cij =1/(xi - yj))</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Evgeni Burovski</span></span><br><span class="line"></span><br><span class="line">X = np.arange(<span class="number">8</span>)</span><br><span class="line">Y = X + <span class="number">0.5</span></span><br><span class="line">C = <span class="number">1.0</span> / np.subtract.outer(X, Y)</span><br><span class="line">print(np.linalg.det(C))</span><br></pre></td></tr></table></figure><h4 id="48-Print-the-minimum-and-maximum-representable-value-for-each-numpy-scalar-type-★★☆"><a href="#48-Print-the-minimum-and-maximum-representable-value-for-each-numpy-scalar-type-★★☆" class="headerlink" title="48. Print the minimum and maximum representable value for each numpy scalar type (★★☆)"></a>48. Print the minimum and maximum representable value for each numpy scalar type (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> dtype <span class="keyword">in</span> [np.int8, np.int32, np.int64]:</span><br><span class="line">   print(np.iinfo(dtype).min)</span><br><span class="line">   print(np.iinfo(dtype).max)</span><br><span class="line"><span class="keyword">for</span> dtype <span class="keyword">in</span> [np.float32, np.float64]:</span><br><span class="line">   print(np.finfo(dtype).min)</span><br><span class="line">   print(np.finfo(dtype).max)</span><br><span class="line">   print(np.finfo(dtype).eps)</span><br></pre></td></tr></table></figure><h4 id="49-How-to-print-all-the-values-of-an-array-★★☆"><a href="#49-How-to-print-all-the-values-of-an-array-★★☆" class="headerlink" title="49. How to print all the values of an array? (★★☆)"></a>49. How to print all the values of an array? (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">np.set_printoptions(threshold=np.nan)</span><br><span class="line">Z = np.zeros((<span class="number">16</span>,<span class="number">16</span>))</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="50-How-to-find-the-closest-value-to-a-given-scalar-in-a-vector-★★☆"><a href="#50-How-to-find-the-closest-value-to-a-given-scalar-in-a-vector-★★☆" class="headerlink" title="50. How to find the closest value (to a given scalar) in a vector? (★★☆)"></a>50. How to find the closest value (to a given scalar) in a vector? (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Z = np.arange(<span class="number">100</span>)</span><br><span class="line">v = np.random.uniform(<span class="number">0</span>,<span class="number">100</span>)</span><br><span class="line">index = (np.abs(Z-v)).argmin()</span><br><span class="line">print(Z[index])</span><br></pre></td></tr></table></figure><h4 id="51-Create-a-structured-array-representing-a-position-x-y-and-a-color-r-g-b-★★☆"><a href="#51-Create-a-structured-array-representing-a-position-x-y-and-a-color-r-g-b-★★☆" class="headerlink" title="51. Create a structured array representing a position (x,y) and a color (r,g,b) (★★☆)"></a>51. Create a structured array representing a position (x,y) and a color (r,g,b) (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Z = np.zeros(<span class="number">10</span>, [ (<span class="string">'position'</span>, [ (<span class="string">'x'</span>, float, <span class="number">1</span>),</span><br><span class="line">                                  (<span class="string">'y'</span>, float, <span class="number">1</span>)]),</span><br><span class="line">                   (<span class="string">'color'</span>,    [ (<span class="string">'r'</span>, float, <span class="number">1</span>),</span><br><span class="line">                                  (<span class="string">'g'</span>, float, <span class="number">1</span>),</span><br><span class="line">                                  (<span class="string">'b'</span>, float, <span class="number">1</span>)])])</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="52-Consider-a-random-vector-with-shape-100-2-representing-coordinates-find-point-by-point-distances-★★☆"><a href="#52-Consider-a-random-vector-with-shape-100-2-representing-coordinates-find-point-by-point-distances-★★☆" class="headerlink" title="52. Consider a random vector with shape (100,2) representing coordinates, find point by point distances (★★☆)"></a>52. Consider a random vector with shape (100,2) representing coordinates, find point by point distances (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Z = np.random.random((<span class="number">10</span>,<span class="number">2</span>))</span><br><span class="line">X,Y = np.atleast_2d(Z[:,<span class="number">0</span>], Z[:,<span class="number">1</span>])</span><br><span class="line">D = np.sqrt( (X-X.T)**<span class="number">2</span> + (Y-Y.T)**<span class="number">2</span>)</span><br><span class="line">print(D)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Much faster with scipy</span></span><br><span class="line"><span class="keyword">import</span> scipy</span><br><span class="line"><span class="comment"># Thanks Gavin Heverly-Coulson (#issue 1)</span></span><br><span class="line"><span class="keyword">import</span> scipy.spatial</span><br><span class="line"></span><br><span class="line">Z = np.random.random((<span class="number">10</span>,<span class="number">2</span>))</span><br><span class="line">D = scipy.spatial.distance.cdist(Z,Z)</span><br><span class="line">print(D)</span><br></pre></td></tr></table></figure><h4 id="53-How-to-convert-a-float-32-bits-array-into-an-integer-32-bits-in-place"><a href="#53-How-to-convert-a-float-32-bits-array-into-an-integer-32-bits-in-place" class="headerlink" title="53. How to convert a float (32 bits) array into an integer (32 bits) in place?"></a>53. How to convert a float (32 bits) array into an integer (32 bits) in place?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Z = np.arange(<span class="number">10</span>, dtype=np.float32)</span><br><span class="line">Z = Z.astype(np.int32, copy=<span class="literal">False</span>)</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="54-How-to-read-the-following-file-★★☆"><a href="#54-How-to-read-the-following-file-★★☆" class="headerlink" title="54. How to read the following file? (★★☆)"></a>54. How to read the following file? (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> StringIO</span><br><span class="line"></span><br><span class="line"><span class="comment"># Fake file</span></span><br><span class="line">s = StringIO(<span class="string">"""1, 2, 3, 4, 5\n</span></span><br><span class="line"><span class="string">                6,  ,  , 7, 8\n</span></span><br><span class="line"><span class="string">                 ,  , 9,10,11\n"""</span>)</span><br><span class="line">Z = np.genfromtxt(s, delimiter=<span class="string">","</span>, dtype=np.int)</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="55-What-is-the-equivalent-of-enumerate-for-numpy-arrays-★★☆"><a href="#55-What-is-the-equivalent-of-enumerate-for-numpy-arrays-★★☆" class="headerlink" title="55. What is the equivalent of enumerate for numpy arrays? (★★☆)"></a>55. What is the equivalent of enumerate for numpy arrays? (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Z = np.arange(<span class="number">9</span>).reshape(<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line"><span class="keyword">for</span> index, value <span class="keyword">in</span> np.ndenumerate(Z):</span><br><span class="line">    print(index, value)</span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> np.ndindex(Z.shape):</span><br><span class="line">    print(index, Z[index])</span><br></pre></td></tr></table></figure><h4 id="56-Generate-a-generic-2D-Gaussian-like-array-★★☆"><a href="#56-Generate-a-generic-2D-Gaussian-like-array-★★☆" class="headerlink" title="56. Generate a generic 2D Gaussian-like array (★★☆)"></a>56. Generate a generic 2D Gaussian-like array (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">X, Y = np.meshgrid(np.linspace(<span class="number">-1</span>,<span class="number">1</span>,<span class="number">10</span>), np.linspace(<span class="number">-1</span>,<span class="number">1</span>,<span class="number">10</span>))</span><br><span class="line">D = np.sqrt(X*X+Y*Y)</span><br><span class="line">sigma, mu = <span class="number">1.0</span>, <span class="number">0.0</span></span><br><span class="line">G = np.exp(-( (D-mu)**<span class="number">2</span> / ( <span class="number">2.0</span> * sigma**<span class="number">2</span> ) ) )</span><br><span class="line">print(G)</span><br></pre></td></tr></table></figure><h4 id="57-How-to-randomly-place-p-elements-in-a-2D-array-★★☆"><a href="#57-How-to-randomly-place-p-elements-in-a-2D-array-★★☆" class="headerlink" title="57. How to randomly place p elements in a 2D array? (★★☆)"></a>57. How to randomly place p elements in a 2D array? (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Divakar</span></span><br><span class="line"></span><br><span class="line">n = <span class="number">10</span></span><br><span class="line">p = <span class="number">3</span></span><br><span class="line">Z = np.zeros((n,n))</span><br><span class="line">np.put(Z, np.random.choice(range(n*n), p, replace=<span class="literal">False</span>),<span class="number">1</span>)</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="58-Subtract-the-mean-of-each-row-of-a-matrix-★★☆"><a href="#58-Subtract-the-mean-of-each-row-of-a-matrix-★★☆" class="headerlink" title="58. Subtract the mean of each row of a matrix (★★☆)"></a>58. Subtract the mean of each row of a matrix (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Warren Weckesser</span></span><br><span class="line"></span><br><span class="line">X = np.random.rand(<span class="number">5</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Recent versions of numpy</span></span><br><span class="line">Y = X - X.mean(axis=<span class="number">1</span>, keepdims=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Older versions of numpy</span></span><br><span class="line">Y = X - X.mean(axis=<span class="number">1</span>).reshape(<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">print(Y)</span><br></pre></td></tr></table></figure><h4 id="59-How-to-I-sort-an-array-by-the-nth-column-★★☆"><a href="#59-How-to-I-sort-an-array-by-the-nth-column-★★☆" class="headerlink" title="59. How to I sort an array by the nth column? (★★☆)"></a>59. How to I sort an array by the nth column? (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Steve Tjoa</span></span><br><span class="line"></span><br><span class="line">Z = np.random.randint(<span class="number">0</span>,<span class="number">10</span>,(<span class="number">3</span>,<span class="number">3</span>))</span><br><span class="line">print(Z)</span><br><span class="line">print(Z[Z[:,<span class="number">1</span>].argsort()])</span><br></pre></td></tr></table></figure><h4 id="60-How-to-tell-if-a-given-2D-array-has-null-columns-★★☆"><a href="#60-How-to-tell-if-a-given-2D-array-has-null-columns-★★☆" class="headerlink" title="60. How to tell if a given 2D array has null columns? (★★☆)"></a>60. How to tell if a given 2D array has null columns? (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Warren Weckesser</span></span><br><span class="line"></span><br><span class="line">Z = np.random.randint(<span class="number">0</span>,<span class="number">3</span>,(<span class="number">3</span>,<span class="number">10</span>))</span><br><span class="line">print((~Z.any(axis=<span class="number">0</span>)).any())</span><br></pre></td></tr></table></figure><h4 id="61-Find-the-nearest-value-from-a-given-value-in-an-array-★★☆"><a href="#61-Find-the-nearest-value-from-a-given-value-in-an-array-★★☆" class="headerlink" title="61. Find the nearest value from a given value in an array (★★☆)"></a>61. Find the nearest value from a given value in an array (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Z = np.random.uniform(<span class="number">0</span>,<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line">z = <span class="number">0.5</span></span><br><span class="line">m = Z.flat[np.abs(Z - z).argmin()]</span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><h4 id="62-Considering-two-arrays-with-shape-1-3-and-3-1-how-to-compute-their-sum-using-an-iterator-★★☆"><a href="#62-Considering-two-arrays-with-shape-1-3-and-3-1-how-to-compute-their-sum-using-an-iterator-★★☆" class="headerlink" title="62. Considering two arrays with shape (1,3) and (3,1), how to compute their sum using an iterator? (★★☆)"></a>62. Considering two arrays with shape (1,3) and (3,1), how to compute their sum using an iterator? (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A = np.arange(<span class="number">3</span>).reshape(<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line">B = np.arange(<span class="number">3</span>).reshape(<span class="number">1</span>,<span class="number">3</span>)</span><br><span class="line">it = np.nditer([A,B,<span class="literal">None</span>])</span><br><span class="line"><span class="keyword">for</span> x,y,z <span class="keyword">in</span> it: z[...] = x + y</span><br><span class="line">print(it.operands[<span class="number">2</span>])</span><br></pre></td></tr></table></figure><h4 id="63-Create-an-array-class-that-has-a-name-attribute-★★☆"><a href="#63-Create-an-array-class-that-has-a-name-attribute-★★☆" class="headerlink" title="63. Create an array class that has a name attribute (★★☆)"></a>63. Create an array class that has a name attribute (★★☆)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NamedArray</span><span class="params">(np.ndarray)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls, array, name=<span class="string">"no name"</span>)</span>:</span></span><br><span class="line">        obj = np.asarray(array).view(cls)</span><br><span class="line">        obj.name = name</span><br><span class="line">        <span class="keyword">return</span> obj</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__array_finalize__</span><span class="params">(self, obj)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> obj <span class="keyword">is</span> <span class="literal">None</span>: <span class="keyword">return</span></span><br><span class="line">        self.info = getattr(obj, <span class="string">'name'</span>, <span class="string">"no name"</span>)</span><br><span class="line"></span><br><span class="line">Z = NamedArray(np.arange(<span class="number">10</span>), <span class="string">"range_10"</span>)</span><br><span class="line"><span class="keyword">print</span> (Z.name)</span><br></pre></td></tr></table></figure><h4 id="64-Consider-a-given-vector-how-to-add-1-to-each-element-indexed-by-a-second-vector-be-careful-with-repeated-indices-★★★"><a href="#64-Consider-a-given-vector-how-to-add-1-to-each-element-indexed-by-a-second-vector-be-careful-with-repeated-indices-★★★" class="headerlink" title="64. Consider a given vector, how to add 1 to each element indexed by a second vector (be careful with repeated indices)? (★★★)"></a>64. Consider a given vector, how to add 1 to each element indexed by a second vector (be careful with repeated indices)? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Brett Olsen</span></span><br><span class="line"></span><br><span class="line">Z = np.ones(<span class="number">10</span>)</span><br><span class="line">I = np.random.randint(<span class="number">0</span>,len(Z),<span class="number">20</span>)</span><br><span class="line">Z += np.bincount(I, minlength=len(Z))</span><br><span class="line">print(Z)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Another solution</span></span><br><span class="line"><span class="comment"># Author: Bartosz Telenczuk</span></span><br><span class="line">np.add.at(Z, I, <span class="number">1</span>)</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="65-How-to-accumulate-elements-of-a-vector-X-to-an-array-F-based-on-an-index-list-I-★★★"><a href="#65-How-to-accumulate-elements-of-a-vector-X-to-an-array-F-based-on-an-index-list-I-★★★" class="headerlink" title="65. How to accumulate elements of a vector (X) to an array (F) based on an index list (I)? (★★★)"></a>65. How to accumulate elements of a vector (X) to an array (F) based on an index list (I)? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Alan G Isaac</span></span><br><span class="line"></span><br><span class="line">X = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">I = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>]</span><br><span class="line">F = np.bincount(I,X)</span><br><span class="line">print(F)</span><br></pre></td></tr></table></figure><h4 id="66-Considering-a-w-h-3-image-of-dtype-ubyte-compute-the-number-of-unique-colors-★★★"><a href="#66-Considering-a-w-h-3-image-of-dtype-ubyte-compute-the-number-of-unique-colors-★★★" class="headerlink" title="66. Considering a (w,h,3) image of (dtype=ubyte), compute the number of unique colors (★★★)"></a>66. Considering a (w,h,3) image of (dtype=ubyte), compute the number of unique colors (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Nadav Horesh</span></span><br><span class="line"></span><br><span class="line">w,h = <span class="number">16</span>,<span class="number">16</span></span><br><span class="line">I = np.random.randint(<span class="number">0</span>,<span class="number">2</span>,(h,w,<span class="number">3</span>)).astype(np.ubyte)</span><br><span class="line">F = I[...,<span class="number">0</span>]*<span class="number">256</span>*<span class="number">256</span> + I[...,<span class="number">1</span>]*<span class="number">256</span> +I[...,<span class="number">2</span>]</span><br><span class="line">n = len(np.unique(F))</span><br><span class="line">print(np.unique(I))</span><br></pre></td></tr></table></figure><h4 id="67-Considering-a-four-dimensions-array-how-to-get-sum-over-the-last-two-axis-at-once-★★★"><a href="#67-Considering-a-four-dimensions-array-how-to-get-sum-over-the-last-two-axis-at-once-★★★" class="headerlink" title="67. Considering a four dimensions array, how to get sum over the last two axis at once? (★★★)"></a>67. Considering a four dimensions array, how to get sum over the last two axis at once? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">A = np.random.randint(<span class="number">0</span>,<span class="number">10</span>,(<span class="number">3</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line"><span class="comment"># solution by passing a tuple of axes (introduced in numpy 1.7.0)</span></span><br><span class="line">sum = A.sum(axis=(<span class="number">-2</span>,<span class="number">-1</span>))</span><br><span class="line">print(sum)</span><br><span class="line"><span class="comment"># solution by flattening the last two dimensions into one</span></span><br><span class="line"><span class="comment"># (useful for functions that don't accept tuples for axis argument)</span></span><br><span class="line">sum = A.reshape(A.shape[:<span class="number">-2</span>] + (<span class="number">-1</span>,)).sum(axis=<span class="number">-1</span>)</span><br><span class="line">print(sum)</span><br></pre></td></tr></table></figure><h4 id="68-Considering-a-one-dimensional-vector-D-how-to-compute-means-of-subsets-of-D-using-a-vector-S-of-same-size-describing-subset-indices-★★★"><a href="#68-Considering-a-one-dimensional-vector-D-how-to-compute-means-of-subsets-of-D-using-a-vector-S-of-same-size-describing-subset-indices-★★★" class="headerlink" title="68. Considering a one-dimensional vector D, how to compute means of subsets of D using a vector S of same size describing subset  indices? (★★★)"></a>68. Considering a one-dimensional vector D, how to compute means of subsets of D using a vector S of same size describing subset  indices? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Jaime Fernández del Río</span></span><br><span class="line"></span><br><span class="line">D = np.random.uniform(<span class="number">0</span>,<span class="number">1</span>,<span class="number">100</span>)</span><br><span class="line">S = np.random.randint(<span class="number">0</span>,<span class="number">10</span>,<span class="number">100</span>)</span><br><span class="line">D_sums = np.bincount(S, weights=D)</span><br><span class="line">D_counts = np.bincount(S)</span><br><span class="line">D_means = D_sums / D_counts</span><br><span class="line">print(D_means)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pandas solution as a reference due to more intuitive code</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">print(pd.Series(D).groupby(S).mean())</span><br></pre></td></tr></table></figure><h4 id="69-How-to-get-the-diagonal-of-a-dot-product-★★★"><a href="#69-How-to-get-the-diagonal-of-a-dot-product-★★★" class="headerlink" title="69. How to get the diagonal of a dot product? (★★★)"></a>69. How to get the diagonal of a dot product? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Mathieu Blondel</span></span><br><span class="line"></span><br><span class="line">A = np.random.uniform(<span class="number">0</span>,<span class="number">1</span>,(<span class="number">5</span>,<span class="number">5</span>))</span><br><span class="line">B = np.random.uniform(<span class="number">0</span>,<span class="number">1</span>,(<span class="number">5</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Slow version  </span></span><br><span class="line">np.diag(np.dot(A, B))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Fast version</span></span><br><span class="line">np.sum(A * B.T, axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Faster version</span></span><br><span class="line">np.einsum(<span class="string">"ij,ji-&gt;i"</span>, A, B)</span><br></pre></td></tr></table></figure><h4 id="70-Consider-the-vector-1-2-3-4-5-how-to-build-a-new-vector-with-3-consecutive-zeros-interleaved-between-each-value-★★★"><a href="#70-Consider-the-vector-1-2-3-4-5-how-to-build-a-new-vector-with-3-consecutive-zeros-interleaved-between-each-value-★★★" class="headerlink" title="70. Consider the vector [1, 2, 3, 4, 5], how to build a new vector with 3 consecutive zeros interleaved between each value? (★★★)"></a>70. Consider the vector [1, 2, 3, 4, 5], how to build a new vector with 3 consecutive zeros interleaved between each value? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Warren Weckesser</span></span><br><span class="line"></span><br><span class="line">Z = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line">nz = <span class="number">3</span></span><br><span class="line">Z0 = np.zeros(len(Z) + (len(Z)<span class="number">-1</span>)*(nz))</span><br><span class="line">Z0[::nz+<span class="number">1</span>] = Z</span><br><span class="line">print(Z0)</span><br></pre></td></tr></table></figure><h4 id="71-Consider-an-array-of-dimension-5-5-3-how-to-mulitply-it-by-an-array-with-dimensions-5-5-★★★"><a href="#71-Consider-an-array-of-dimension-5-5-3-how-to-mulitply-it-by-an-array-with-dimensions-5-5-★★★" class="headerlink" title="71. Consider an array of dimension (5,5,3), how to mulitply it by an array with dimensions (5,5)? (★★★)"></a>71. Consider an array of dimension (5,5,3), how to mulitply it by an array with dimensions (5,5)? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A = np.ones((<span class="number">5</span>,<span class="number">5</span>,<span class="number">3</span>))</span><br><span class="line">B = <span class="number">2</span>*np.ones((<span class="number">5</span>,<span class="number">5</span>))</span><br><span class="line">print(A * B[:,:,<span class="literal">None</span>])</span><br></pre></td></tr></table></figure><h4 id="72-How-to-swap-two-rows-of-an-array-★★★"><a href="#72-How-to-swap-two-rows-of-an-array-★★★" class="headerlink" title="72. How to swap two rows of an array? (★★★)"></a>72. How to swap two rows of an array? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Eelco Hoogendoorn</span></span><br><span class="line"></span><br><span class="line">A = np.arange(<span class="number">25</span>).reshape(<span class="number">5</span>,<span class="number">5</span>)</span><br><span class="line">A[[<span class="number">0</span>,<span class="number">1</span>]] = A[[<span class="number">1</span>,<span class="number">0</span>]]</span><br><span class="line">print(A)</span><br></pre></td></tr></table></figure><h4 id="73-Consider-a-set-of-10-triplets-describing-10-triangles-with-shared-vertices-find-the-set-of-unique-line-segments-composing-all-the-triangles-★★★"><a href="#73-Consider-a-set-of-10-triplets-describing-10-triangles-with-shared-vertices-find-the-set-of-unique-line-segments-composing-all-the-triangles-★★★" class="headerlink" title="73. Consider a set of 10 triplets describing 10 triangles (with shared vertices), find the set of unique line segments composing all the  triangles (★★★)"></a>73. Consider a set of 10 triplets describing 10 triangles (with shared vertices), find the set of unique line segments composing all the  triangles (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Nicolas P. Rougier</span></span><br><span class="line"></span><br><span class="line">faces = np.random.randint(<span class="number">0</span>,<span class="number">100</span>,(<span class="number">10</span>,<span class="number">3</span>))</span><br><span class="line">F = np.roll(faces.repeat(<span class="number">2</span>,axis=<span class="number">1</span>),<span class="number">-1</span>,axis=<span class="number">1</span>)</span><br><span class="line">F = F.reshape(len(F)*<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line">F = np.sort(F,axis=<span class="number">1</span>)</span><br><span class="line">G = F.view( dtype=[(<span class="string">'p0'</span>,F.dtype),(<span class="string">'p1'</span>,F.dtype)] )</span><br><span class="line">G = np.unique(G)</span><br><span class="line">print(G)</span><br></pre></td></tr></table></figure><h4 id="74-Given-an-array-C-that-is-a-bincount-how-to-produce-an-array-A-such-that-np-bincount-A-C-★★★"><a href="#74-Given-an-array-C-that-is-a-bincount-how-to-produce-an-array-A-such-that-np-bincount-A-C-★★★" class="headerlink" title="74. Given an array C that is a bincount, how to produce an array A such that np.bincount(A) == C? (★★★)"></a>74. Given an array C that is a bincount, how to produce an array A such that np.bincount(A) == C? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Jaime Fernández del Río</span></span><br><span class="line"></span><br><span class="line">C = np.bincount([<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">6</span>])</span><br><span class="line">A = np.repeat(np.arange(len(C)), C)</span><br><span class="line">print(A)</span><br></pre></td></tr></table></figure><h4 id="75-How-to-compute-averages-using-a-sliding-window-over-an-array-★★★"><a href="#75-How-to-compute-averages-using-a-sliding-window-over-an-array-★★★" class="headerlink" title="75. How to compute averages using a sliding window over an array? (★★★)"></a>75. How to compute averages using a sliding window over an array? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Jaime Fernández del Río</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">moving_average</span><span class="params">(a, n=<span class="number">3</span>)</span> :</span></span><br><span class="line">    ret = np.cumsum(a, dtype=float)</span><br><span class="line">    ret[n:] = ret[n:] - ret[:-n]</span><br><span class="line">    <span class="keyword">return</span> ret[n - <span class="number">1</span>:] / n</span><br><span class="line">Z = np.arange(<span class="number">20</span>)</span><br><span class="line">print(moving_average(Z, n=<span class="number">3</span>))</span><br></pre></td></tr></table></figure><h4 id="76-Consider-a-one-dimensional-array-Z-build-a-two-dimensional-array-whose-first-row-is-Z-0-Z-1-Z-2-and-each-subsequent-row-is-shifted-by-1-last-row-should-be-Z-3-Z-2-Z-1-★★★"><a href="#76-Consider-a-one-dimensional-array-Z-build-a-two-dimensional-array-whose-first-row-is-Z-0-Z-1-Z-2-and-each-subsequent-row-is-shifted-by-1-last-row-should-be-Z-3-Z-2-Z-1-★★★" class="headerlink" title="76. Consider a one-dimensional array Z, build a two-dimensional array whose first row is (Z[0],Z[1],Z[2]) and each subsequent row is  shifted by 1 (last row should be (Z[-3],Z[-2],Z[-1]) (★★★)"></a>76. Consider a one-dimensional array Z, build a two-dimensional array whose first row is (Z[0],Z[1],Z[2]) and each subsequent row is  shifted by 1 (last row should be (Z[-3],Z[-2],Z[-1]) (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Joe Kington / Erik Rigtorp</span></span><br><span class="line"><span class="keyword">from</span> numpy.lib <span class="keyword">import</span> stride_tricks</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rolling</span><span class="params">(a, window)</span>:</span></span><br><span class="line">    shape = (a.size - window + <span class="number">1</span>, window)</span><br><span class="line">    strides = (a.itemsize, a.itemsize)</span><br><span class="line">    <span class="keyword">return</span> stride_tricks.as_strided(a, shape=shape, strides=strides)</span><br><span class="line">Z = rolling(np.arange(<span class="number">10</span>), <span class="number">3</span>)</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="77-How-to-negate-a-boolean-or-to-change-the-sign-of-a-float-inplace-★★★"><a href="#77-How-to-negate-a-boolean-or-to-change-the-sign-of-a-float-inplace-★★★" class="headerlink" title="77. How to negate a boolean, or to change the sign of a float inplace? (★★★)"></a>77. How to negate a boolean, or to change the sign of a float inplace? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Nathaniel J. Smith</span></span><br><span class="line"></span><br><span class="line">Z = np.random.randint(<span class="number">0</span>,<span class="number">2</span>,<span class="number">100</span>)</span><br><span class="line">np.logical_not(Z, out=Z)</span><br><span class="line"></span><br><span class="line">Z = np.random.uniform(<span class="number">-1.0</span>,<span class="number">1.0</span>,<span class="number">100</span>)</span><br><span class="line">np.negative(Z, out=Z)</span><br></pre></td></tr></table></figure><h4 id="78-Consider-2-sets-of-points-P0-P1-describing-lines-2d-and-a-point-p-how-to-compute-distance-from-p-to-each-line-i-P0-i-P1-i-★★★"><a href="#78-Consider-2-sets-of-points-P0-P1-describing-lines-2d-and-a-point-p-how-to-compute-distance-from-p-to-each-line-i-P0-i-P1-i-★★★" class="headerlink" title="78. Consider 2 sets of points P0,P1 describing lines (2d) and a point p, how to compute distance from p to each line i  (P0[i],P1[i])? (★★★)"></a>78. Consider 2 sets of points P0,P1 describing lines (2d) and a point p, how to compute distance from p to each line i  (P0[i],P1[i])? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">distance</span><span class="params">(P0, P1, p)</span>:</span></span><br><span class="line">    T = P1 - P0</span><br><span class="line">    L = (T**<span class="number">2</span>).sum(axis=<span class="number">1</span>)</span><br><span class="line">    U = -((P0[:,<span class="number">0</span>]-p[...,<span class="number">0</span>])*T[:,<span class="number">0</span>] + (P0[:,<span class="number">1</span>]-p[...,<span class="number">1</span>])*T[:,<span class="number">1</span>]) / L</span><br><span class="line">    U = U.reshape(len(U),<span class="number">1</span>)</span><br><span class="line">    D = P0 + U*T - p</span><br><span class="line">    <span class="keyword">return</span> np.sqrt((D**<span class="number">2</span>).sum(axis=<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">P0 = np.random.uniform(<span class="number">-10</span>,<span class="number">10</span>,(<span class="number">10</span>,<span class="number">2</span>))</span><br><span class="line">P1 = np.random.uniform(<span class="number">-10</span>,<span class="number">10</span>,(<span class="number">10</span>,<span class="number">2</span>))</span><br><span class="line">p  = np.random.uniform(<span class="number">-10</span>,<span class="number">10</span>,( <span class="number">1</span>,<span class="number">2</span>))</span><br><span class="line">print(distance(P0, P1, p))</span><br></pre></td></tr></table></figure><h4 id="79-Consider-2-sets-of-points-P0-P1-describing-lines-2d-and-a-set-of-points-P-how-to-compute-distance-from-each-point-j-P-j-to-each-line-i-P0-i-P1-i-★★★"><a href="#79-Consider-2-sets-of-points-P0-P1-describing-lines-2d-and-a-set-of-points-P-how-to-compute-distance-from-each-point-j-P-j-to-each-line-i-P0-i-P1-i-★★★" class="headerlink" title="79. Consider 2 sets of points P0,P1 describing lines (2d) and a set of points P, how to compute distance from each point j (P[j]) to each line i (P0[i],P1[i])? (★★★)"></a>79. Consider 2 sets of points P0,P1 describing lines (2d) and a set of points P, how to compute distance from each point j (P[j]) to each line i (P0[i],P1[i])? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Italmassov Kuanysh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># based on distance function from previous question</span></span><br><span class="line">P0 = np.random.uniform(<span class="number">-10</span>, <span class="number">10</span>, (<span class="number">10</span>,<span class="number">2</span>))</span><br><span class="line">P1 = np.random.uniform(<span class="number">-10</span>,<span class="number">10</span>,(<span class="number">10</span>,<span class="number">2</span>))</span><br><span class="line">p = np.random.uniform(<span class="number">-10</span>, <span class="number">10</span>, (<span class="number">10</span>,<span class="number">2</span>))</span><br><span class="line">print(np.array([distance(P0,P1,p_i) <span class="keyword">for</span> p_i <span class="keyword">in</span> p]))</span><br></pre></td></tr></table></figure><h4 id="80-Consider-an-arbitrary-array-write-a-function-that-extract-a-subpart-with-a-fixed-shape-and-centered-on-a-given-element-pad-with-a-fill-value-when-necessary-★★★"><a href="#80-Consider-an-arbitrary-array-write-a-function-that-extract-a-subpart-with-a-fixed-shape-and-centered-on-a-given-element-pad-with-a-fill-value-when-necessary-★★★" class="headerlink" title="80. Consider an arbitrary array, write a function that extract a subpart with a fixed shape and centered on a given element (pad with a fill value when necessary) (★★★)"></a>80. Consider an arbitrary array, write a function that extract a subpart with a fixed shape and centered on a given element (pad with a <code>fill</code> value when necessary) (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Nicolas Rougier</span></span><br><span class="line"></span><br><span class="line">Z = np.random.randint(<span class="number">0</span>,<span class="number">10</span>,(<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line">shape = (<span class="number">5</span>,<span class="number">5</span>)</span><br><span class="line">fill  = <span class="number">0</span></span><br><span class="line">position = (<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">R = np.ones(shape, dtype=Z.dtype)*fill</span><br><span class="line">P  = np.array(list(position)).astype(int)</span><br><span class="line">Rs = np.array(list(R.shape)).astype(int)</span><br><span class="line">Zs = np.array(list(Z.shape)).astype(int)</span><br><span class="line"></span><br><span class="line">R_start = np.zeros((len(shape),)).astype(int)</span><br><span class="line">R_stop  = np.array(list(shape)).astype(int)</span><br><span class="line">Z_start = (P-Rs//<span class="number">2</span>)</span><br><span class="line">Z_stop  = (P+Rs//<span class="number">2</span>)+Rs%<span class="number">2</span></span><br><span class="line"></span><br><span class="line">R_start = (R_start - np.minimum(Z_start,<span class="number">0</span>)).tolist()</span><br><span class="line">Z_start = (np.maximum(Z_start,<span class="number">0</span>)).tolist()</span><br><span class="line">R_stop = np.maximum(R_start, (R_stop - np.maximum(Z_stop-Zs,<span class="number">0</span>))).tolist()</span><br><span class="line">Z_stop = (np.minimum(Z_stop,Zs)).tolist()</span><br><span class="line"></span><br><span class="line">r = [slice(start,stop) <span class="keyword">for</span> start,stop <span class="keyword">in</span> zip(R_start,R_stop)]</span><br><span class="line">z = [slice(start,stop) <span class="keyword">for</span> start,stop <span class="keyword">in</span> zip(Z_start,Z_stop)]</span><br><span class="line">R[r] = Z[z]</span><br><span class="line">print(Z)</span><br><span class="line">print(R)</span><br></pre></td></tr></table></figure><h4 id="81-Consider-an-array-Z-1-2-3-4-5-6-7-8-9-10-11-12-13-14-how-to-generate-an-array-R-1-2-3-4-2-3-4-5-3-4-5-6-…-11-12-13-14-★★★"><a href="#81-Consider-an-array-Z-1-2-3-4-5-6-7-8-9-10-11-12-13-14-how-to-generate-an-array-R-1-2-3-4-2-3-4-5-3-4-5-6-…-11-12-13-14-★★★" class="headerlink" title="81. Consider an array Z = [1,2,3,4,5,6,7,8,9,10,11,12,13,14], how to generate an array R = [[1,2,3,4], [2,3,4,5], [3,4,5,6], …, [11,12,13,14]]? (★★★)"></a>81. Consider an array Z = [1,2,3,4,5,6,7,8,9,10,11,12,13,14], how to generate an array R = [[1,2,3,4], [2,3,4,5], [3,4,5,6], …, [11,12,13,14]]? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Stefan van der Walt</span></span><br><span class="line"></span><br><span class="line">Z = np.arange(<span class="number">1</span>,<span class="number">15</span>,dtype=np.uint32)</span><br><span class="line">R = stride_tricks.as_strided(Z,(<span class="number">11</span>,<span class="number">4</span>),(<span class="number">4</span>,<span class="number">4</span>))</span><br><span class="line">print(R)</span><br></pre></td></tr></table></figure><h4 id="82-Compute-a-matrix-rank-★★★"><a href="#82-Compute-a-matrix-rank-★★★" class="headerlink" title="82. Compute a matrix rank (★★★)"></a>82. Compute a matrix rank (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Stefan van der Walt</span></span><br><span class="line"></span><br><span class="line">Z = np.random.uniform(<span class="number">0</span>,<span class="number">1</span>,(<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line">U, S, V = np.linalg.svd(Z) <span class="comment"># Singular Value Decomposition</span></span><br><span class="line">rank = np.sum(S &gt; <span class="number">1e-10</span>)</span><br><span class="line">print(rank)</span><br></pre></td></tr></table></figure><h4 id="83-How-to-find-the-most-frequent-value-in-an-array"><a href="#83-How-to-find-the-most-frequent-value-in-an-array" class="headerlink" title="83. How to find the most frequent value in an array?"></a>83. How to find the most frequent value in an array?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Z = np.random.randint(<span class="number">0</span>,<span class="number">10</span>,<span class="number">50</span>)</span><br><span class="line">print(np.bincount(Z).argmax())</span><br></pre></td></tr></table></figure><h4 id="84-Extract-all-the-contiguous-3x3-blocks-from-a-random-10x10-matrix-★★★"><a href="#84-Extract-all-the-contiguous-3x3-blocks-from-a-random-10x10-matrix-★★★" class="headerlink" title="84. Extract all the contiguous 3x3 blocks from a random 10x10 matrix (★★★)"></a>84. Extract all the contiguous 3x3 blocks from a random 10x10 matrix (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Chris Barker</span></span><br><span class="line"></span><br><span class="line">Z = np.random.randint(<span class="number">0</span>,<span class="number">5</span>,(<span class="number">10</span>,<span class="number">10</span>))</span><br><span class="line">n = <span class="number">3</span></span><br><span class="line">i = <span class="number">1</span> + (Z.shape[<span class="number">0</span>]<span class="number">-3</span>)</span><br><span class="line">j = <span class="number">1</span> + (Z.shape[<span class="number">1</span>]<span class="number">-3</span>)</span><br><span class="line">C = stride_tricks.as_strided(Z, shape=(i, j, n, n), strides=Z.strides + Z.strides)</span><br><span class="line">print(C)</span><br></pre></td></tr></table></figure><h4 id="85-Create-a-2D-array-subclass-such-that-Z-i-j-Z-j-i-★★★"><a href="#85-Create-a-2D-array-subclass-such-that-Z-i-j-Z-j-i-★★★" class="headerlink" title="85. Create a 2D array subclass such that Z[i,j] == Z[j,i] (★★★)"></a>85. Create a 2D array subclass such that Z[i,j] == Z[j,i] (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Eric O. Lebigot</span></span><br><span class="line"><span class="comment"># Note: only works for 2d array and value setting using indices</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Symetric</span><span class="params">(np.ndarray)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setitem__</span><span class="params">(self, index, value)</span>:</span></span><br><span class="line">        i,j = index</span><br><span class="line">        super(Symetric, self).__setitem__((i,j), value)</span><br><span class="line">        super(Symetric, self).__setitem__((j,i), value)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">symetric</span><span class="params">(Z)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> np.asarray(Z + Z.T - np.diag(Z.diagonal())).view(Symetric)</span><br><span class="line"></span><br><span class="line">S = symetric(np.random.randint(<span class="number">0</span>,<span class="number">10</span>,(<span class="number">5</span>,<span class="number">5</span>)))</span><br><span class="line">S[<span class="number">2</span>,<span class="number">3</span>] = <span class="number">42</span></span><br><span class="line">print(S)</span><br></pre></td></tr></table></figure><h4 id="86-Consider-a-set-of-p-matrices-wich-shape-n-n-and-a-set-of-p-vectors-with-shape-n-1-How-to-compute-the-sum-of-of-the-p-matrix-products-at-once-result-has-shape-n-1-★★★"><a href="#86-Consider-a-set-of-p-matrices-wich-shape-n-n-and-a-set-of-p-vectors-with-shape-n-1-How-to-compute-the-sum-of-of-the-p-matrix-products-at-once-result-has-shape-n-1-★★★" class="headerlink" title="86. Consider a set of p matrices wich shape (n,n) and a set of p vectors with shape (n,1). How to compute the sum of of the p matrix products at once? (result has shape (n,1)) (★★★)"></a>86. Consider a set of p matrices wich shape (n,n) and a set of p vectors with shape (n,1). How to compute the sum of of the p matrix products at once? (result has shape (n,1)) (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Stefan van der Walt</span></span><br><span class="line"></span><br><span class="line">p, n = <span class="number">10</span>, <span class="number">20</span></span><br><span class="line">M = np.ones((p,n,n))</span><br><span class="line">V = np.ones((p,n,<span class="number">1</span>))</span><br><span class="line">S = np.tensordot(M, V, axes=[[<span class="number">0</span>, <span class="number">2</span>], [<span class="number">0</span>, <span class="number">1</span>]])</span><br><span class="line">print(S)</span><br><span class="line"></span><br><span class="line"><span class="comment"># It works, because:</span></span><br><span class="line"><span class="comment"># M is (p,n,n)</span></span><br><span class="line"><span class="comment"># V is (p,n,1)</span></span><br><span class="line"><span class="comment"># Thus, summing over the paired axes 0 and 0 (of M and V independently),</span></span><br><span class="line"><span class="comment"># and 2 and 1, to remain with a (n,1) vector.</span></span><br></pre></td></tr></table></figure><h4 id="87-Consider-a-16x16-array-how-to-get-the-block-sum-block-size-is-4x4-★★★"><a href="#87-Consider-a-16x16-array-how-to-get-the-block-sum-block-size-is-4x4-★★★" class="headerlink" title="87. Consider a 16x16 array, how to get the block-sum (block size is 4x4)? (★★★)"></a>87. Consider a 16x16 array, how to get the block-sum (block size is 4x4)? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Robert Kern</span></span><br><span class="line"></span><br><span class="line">Z = np.ones((<span class="number">16</span>,<span class="number">16</span>))</span><br><span class="line">k = <span class="number">4</span></span><br><span class="line">S = np.add.reduceat(np.add.reduceat(Z, np.arange(<span class="number">0</span>, Z.shape[<span class="number">0</span>], k), axis=<span class="number">0</span>),</span><br><span class="line">                                       np.arange(<span class="number">0</span>, Z.shape[<span class="number">1</span>], k), axis=<span class="number">1</span>)</span><br><span class="line">print(S)</span><br></pre></td></tr></table></figure><h4 id="88-How-to-implement-the-Game-of-Life-using-numpy-arrays-★★★"><a href="#88-How-to-implement-the-Game-of-Life-using-numpy-arrays-★★★" class="headerlink" title="88. How to implement the Game of Life using numpy arrays? (★★★)"></a>88. How to implement the Game of Life using numpy arrays? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Nicolas Rougier</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">iterate</span><span class="params">(Z)</span>:</span></span><br><span class="line">    <span class="comment"># Count neighbours</span></span><br><span class="line">    N = (Z[<span class="number">0</span>:<span class="number">-2</span>,<span class="number">0</span>:<span class="number">-2</span>] + Z[<span class="number">0</span>:<span class="number">-2</span>,<span class="number">1</span>:<span class="number">-1</span>] + Z[<span class="number">0</span>:<span class="number">-2</span>,<span class="number">2</span>:] +</span><br><span class="line">         Z[<span class="number">1</span>:<span class="number">-1</span>,<span class="number">0</span>:<span class="number">-2</span>]                + Z[<span class="number">1</span>:<span class="number">-1</span>,<span class="number">2</span>:] +</span><br><span class="line">         Z[<span class="number">2</span>:  ,<span class="number">0</span>:<span class="number">-2</span>] + Z[<span class="number">2</span>:  ,<span class="number">1</span>:<span class="number">-1</span>] + Z[<span class="number">2</span>:  ,<span class="number">2</span>:])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Apply rules</span></span><br><span class="line">    birth = (N==<span class="number">3</span>) &amp; (Z[<span class="number">1</span>:<span class="number">-1</span>,<span class="number">1</span>:<span class="number">-1</span>]==<span class="number">0</span>)</span><br><span class="line">    survive = ((N==<span class="number">2</span>) | (N==<span class="number">3</span>)) &amp; (Z[<span class="number">1</span>:<span class="number">-1</span>,<span class="number">1</span>:<span class="number">-1</span>]==<span class="number">1</span>)</span><br><span class="line">    Z[...] = <span class="number">0</span></span><br><span class="line">    Z[<span class="number">1</span>:<span class="number">-1</span>,<span class="number">1</span>:<span class="number">-1</span>][birth | survive] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> Z</span><br><span class="line"></span><br><span class="line">Z = np.random.randint(<span class="number">0</span>,<span class="number">2</span>,(<span class="number">50</span>,<span class="number">50</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>): Z = iterate(Z)</span><br><span class="line">print(Z)</span><br></pre></td></tr></table></figure><h4 id="89-How-to-get-the-n-largest-values-of-an-array-★★★"><a href="#89-How-to-get-the-n-largest-values-of-an-array-★★★" class="headerlink" title="89. How to get the n largest values of an array (★★★)"></a>89. How to get the n largest values of an array (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Z = np.arange(<span class="number">10000</span>)</span><br><span class="line">np.random.shuffle(Z)</span><br><span class="line">n = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Slow</span></span><br><span class="line"><span class="keyword">print</span> (Z[np.argsort(Z)[-n:]])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Fast</span></span><br><span class="line"><span class="keyword">print</span> (Z[np.argpartition(-Z,n)[:n]])</span><br></pre></td></tr></table></figure><h4 id="90-Given-an-arbitrary-number-of-vectors-build-the-cartesian-product-every-combinations-of-every-item-★★★"><a href="#90-Given-an-arbitrary-number-of-vectors-build-the-cartesian-product-every-combinations-of-every-item-★★★" class="headerlink" title="90. Given an arbitrary number of vectors, build the cartesian product (every combinations of every item) (★★★)"></a>90. Given an arbitrary number of vectors, build the cartesian product (every combinations of every item) (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Stefan Van der Walt</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cartesian</span><span class="params">(arrays)</span>:</span></span><br><span class="line">    arrays = [np.asarray(a) <span class="keyword">for</span> a <span class="keyword">in</span> arrays]</span><br><span class="line">    shape = (len(x) <span class="keyword">for</span> x <span class="keyword">in</span> arrays)</span><br><span class="line"></span><br><span class="line">    ix = np.indices(shape, dtype=int)</span><br><span class="line">    ix = ix.reshape(len(arrays), <span class="number">-1</span>).T</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> n, arr <span class="keyword">in</span> enumerate(arrays):</span><br><span class="line">        ix[:, n] = arrays[n][ix[:, n]]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ix</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> (cartesian(([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>], [<span class="number">6</span>, <span class="number">7</span>])))</span><br></pre></td></tr></table></figure><h4 id="91-How-to-create-a-record-array-from-a-regular-array-★★★"><a href="#91-How-to-create-a-record-array-from-a-regular-array-★★★" class="headerlink" title="91. How to create a record array from a regular array? (★★★)"></a>91. How to create a record array from a regular array? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Z = np.array([(<span class="string">"Hello"</span>, <span class="number">2.5</span>, <span class="number">3</span>),</span><br><span class="line">              (<span class="string">"World"</span>, <span class="number">3.6</span>, <span class="number">2</span>)])</span><br><span class="line">R = np.core.records.fromarrays(Z.T,</span><br><span class="line">                               names=<span class="string">'col1, col2, col3'</span>,</span><br><span class="line">                               formats = <span class="string">'S8, f8, i8'</span>)</span><br><span class="line">print(R)</span><br></pre></td></tr></table></figure><h4 id="92-Consider-a-large-vector-Z-compute-Z-to-the-power-of-3-using-3-different-methods-★★★"><a href="#92-Consider-a-large-vector-Z-compute-Z-to-the-power-of-3-using-3-different-methods-★★★" class="headerlink" title="92. Consider a large vector Z, compute Z to the power of 3 using 3 different methods (★★★)"></a>92. Consider a large vector Z, compute Z to the power of 3 using 3 different methods (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Ryan G.</span></span><br><span class="line"></span><br><span class="line">x = np.random.rand(<span class="number">5e7</span>)</span><br><span class="line"></span><br><span class="line">%timeit np.power(x,<span class="number">3</span>)</span><br><span class="line">%timeit x*x*x</span><br><span class="line">%timeit np.einsum(<span class="string">'i,i,i-&gt;i'</span>,x,x,x)</span><br></pre></td></tr></table></figure><h4 id="93-Consider-two-arrays-A-and-B-of-shape-8-3-and-2-2-How-to-find-rows-of-A-that-contain-elements-of-each-row-of-B-regardless-of-the-order-of-the-elements-in-B-★★★"><a href="#93-Consider-two-arrays-A-and-B-of-shape-8-3-and-2-2-How-to-find-rows-of-A-that-contain-elements-of-each-row-of-B-regardless-of-the-order-of-the-elements-in-B-★★★" class="headerlink" title="93. Consider two arrays A and B of shape (8,3) and (2,2). How to find rows of A that contain elements of each row of B regardless of the order of the elements in B? (★★★)"></a>93. Consider two arrays A and B of shape (8,3) and (2,2). How to find rows of A that contain elements of each row of B regardless of the order of the elements in B? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Gabe Schwartz</span></span><br><span class="line"></span><br><span class="line">A = np.random.randint(<span class="number">0</span>,<span class="number">5</span>,(<span class="number">8</span>,<span class="number">3</span>))</span><br><span class="line">B = np.random.randint(<span class="number">0</span>,<span class="number">5</span>,(<span class="number">2</span>,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">C = (A[..., np.newaxis, np.newaxis] == B)</span><br><span class="line">rows = np.where(C.any((<span class="number">3</span>,<span class="number">1</span>)).all(<span class="number">1</span>))[<span class="number">0</span>]</span><br><span class="line">print(rows)</span><br></pre></td></tr></table></figure><h4 id="94-Considering-a-10x3-matrix-extract-rows-with-unequal-values-e-g-2-2-3-★★★"><a href="#94-Considering-a-10x3-matrix-extract-rows-with-unequal-values-e-g-2-2-3-★★★" class="headerlink" title="94. Considering a 10x3 matrix, extract rows with unequal values (e.g. [2,2,3]) (★★★)"></a>94. Considering a 10x3 matrix, extract rows with unequal values (e.g. [2,2,3]) (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Robert Kern</span></span><br><span class="line"></span><br><span class="line">Z = np.random.randint(<span class="number">0</span>,<span class="number">5</span>,(<span class="number">10</span>,<span class="number">3</span>))</span><br><span class="line">print(Z)</span><br><span class="line"><span class="comment"># solution for arrays of all dtypes (including string arrays and record arrays)</span></span><br><span class="line">E = np.all(Z[:,<span class="number">1</span>:] == Z[:,:<span class="number">-1</span>], axis=<span class="number">1</span>)</span><br><span class="line">U = Z[~E]</span><br><span class="line">print(U)</span><br><span class="line"><span class="comment"># soluiton for numerical arrays only, will work for any number of columns in Z</span></span><br><span class="line">U = Z[Z.max(axis=<span class="number">1</span>) != Z.min(axis=<span class="number">1</span>),:]</span><br><span class="line">print(U)</span><br></pre></td></tr></table></figure><h4 id="95-Convert-a-vector-of-ints-into-a-matrix-binary-representation-★★★"><a href="#95-Convert-a-vector-of-ints-into-a-matrix-binary-representation-★★★" class="headerlink" title="95. Convert a vector of ints into a matrix binary representation (★★★)"></a>95. Convert a vector of ints into a matrix binary representation (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Warren Weckesser</span></span><br><span class="line"></span><br><span class="line">I = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">32</span>, <span class="number">64</span>, <span class="number">128</span>])</span><br><span class="line">B = ((I.reshape(<span class="number">-1</span>,<span class="number">1</span>) &amp; (<span class="number">2</span>**np.arange(<span class="number">8</span>))) != <span class="number">0</span>).astype(int)</span><br><span class="line">print(B[:,::<span class="number">-1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Author: Daniel T. McDonald</span></span><br><span class="line"></span><br><span class="line">I = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">32</span>, <span class="number">64</span>, <span class="number">128</span>], dtype=np.uint8)</span><br><span class="line">print(np.unpackbits(I[:, np.newaxis], axis=<span class="number">1</span>))</span><br></pre></td></tr></table></figure><h4 id="96-Given-a-two-dimensional-array-how-to-extract-unique-rows-★★★"><a href="#96-Given-a-two-dimensional-array-how-to-extract-unique-rows-★★★" class="headerlink" title="96. Given a two dimensional array, how to extract unique rows? (★★★)"></a>96. Given a two dimensional array, how to extract unique rows? (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Jaime Fernández del Río</span></span><br><span class="line"></span><br><span class="line">Z = np.random.randint(<span class="number">0</span>,<span class="number">2</span>,(<span class="number">6</span>,<span class="number">3</span>))</span><br><span class="line">T = np.ascontiguousarray(Z).view(np.dtype((np.void, Z.dtype.itemsize * Z.shape[<span class="number">1</span>])))</span><br><span class="line">_, idx = np.unique(T, return_index=<span class="literal">True</span>)</span><br><span class="line">uZ = Z[idx]</span><br><span class="line">print(uZ)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Author: Andreas Kouzelis</span></span><br><span class="line"><span class="comment"># NumPy &gt;= 1.13</span></span><br><span class="line">uZ = np.unique(Z, axis=<span class="number">0</span>)</span><br><span class="line">print(uZ)</span><br></pre></td></tr></table></figure><h4 id="97-Considering-2-vectors-A-amp-B-write-the-einsum-equivalent-of-inner-outer-sum-and-mul-function-★★★"><a href="#97-Considering-2-vectors-A-amp-B-write-the-einsum-equivalent-of-inner-outer-sum-and-mul-function-★★★" class="headerlink" title="97. Considering 2 vectors A &amp; B, write the einsum equivalent of inner, outer, sum, and mul function (★★★)"></a>97. Considering 2 vectors A &amp; B, write the einsum equivalent of inner, outer, sum, and mul function (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Alex Riley</span></span><br><span class="line"><span class="comment"># Make sure to read: http://ajcr.net/Basic-guide-to-einsum/</span></span><br><span class="line"></span><br><span class="line">A = np.random.uniform(<span class="number">0</span>,<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line">B = np.random.uniform(<span class="number">0</span>,<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">np.einsum(<span class="string">'i-&gt;'</span>, A)       <span class="comment"># np.sum(A)</span></span><br><span class="line">np.einsum(<span class="string">'i,i-&gt;i'</span>, A, B) <span class="comment"># A * B</span></span><br><span class="line">np.einsum(<span class="string">'i,i'</span>, A, B)    <span class="comment"># np.inner(A, B)</span></span><br><span class="line">np.einsum(<span class="string">'i,j-&gt;ij'</span>, A, B)    <span class="comment"># np.outer(A, B)</span></span><br></pre></td></tr></table></figure><h4 id="98-Considering-a-path-described-by-two-vectors-X-Y-how-to-sample-it-using-equidistant-samples-★★★"><a href="#98-Considering-a-path-described-by-two-vectors-X-Y-how-to-sample-it-using-equidistant-samples-★★★" class="headerlink" title="98. Considering a path described by two vectors (X,Y), how to sample it using equidistant samples (★★★)?"></a>98. Considering a path described by two vectors (X,Y), how to sample it using equidistant samples (★★★)?</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Bas Swinckels</span></span><br><span class="line"></span><br><span class="line">phi = np.arange(<span class="number">0</span>, <span class="number">10</span>*np.pi, <span class="number">0.1</span>)</span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">x = a*phi*np.cos(phi)</span><br><span class="line">y = a*phi*np.sin(phi)</span><br><span class="line"></span><br><span class="line">dr = (np.diff(x)**<span class="number">2</span> + np.diff(y)**<span class="number">2</span>)**<span class="number">.5</span> <span class="comment"># segment lengths</span></span><br><span class="line">r = np.zeros_like(x)</span><br><span class="line">r[<span class="number">1</span>:] = np.cumsum(dr)                <span class="comment"># integrate path</span></span><br><span class="line">r_int = np.linspace(<span class="number">0</span>, r.max(), <span class="number">200</span>) <span class="comment"># regular spaced path</span></span><br><span class="line">x_int = np.interp(r_int, r, x)       <span class="comment"># integrate path</span></span><br><span class="line">y_int = np.interp(r_int, r, y)</span><br></pre></td></tr></table></figure><h4 id="99-Given-an-integer-n-and-a-2D-array-X-select-from-X-the-rows-which-can-be-interpreted-as-draws-from-a-multinomial-distribution-with-n-degrees-i-e-the-rows-which-only-contain-integers-and-which-sum-to-n-★★★"><a href="#99-Given-an-integer-n-and-a-2D-array-X-select-from-X-the-rows-which-can-be-interpreted-as-draws-from-a-multinomial-distribution-with-n-degrees-i-e-the-rows-which-only-contain-integers-and-which-sum-to-n-★★★" class="headerlink" title="99. Given an integer n and a 2D array X, select from X the rows which can be interpreted as draws from a multinomial distribution with n degrees, i.e., the rows which only contain integers and which sum to n. (★★★)"></a>99. Given an integer n and a 2D array X, select from X the rows which can be interpreted as draws from a multinomial distribution with n degrees, i.e., the rows which only contain integers and which sum to n. (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Evgeni Burovski</span></span><br><span class="line"></span><br><span class="line">X = np.asarray([[<span class="number">1.0</span>, <span class="number">0.0</span>, <span class="number">3.0</span>, <span class="number">8.0</span>],</span><br><span class="line">                [<span class="number">2.0</span>, <span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">1.0</span>],</span><br><span class="line">                [<span class="number">1.5</span>, <span class="number">2.5</span>, <span class="number">1.0</span>, <span class="number">0.0</span>]])</span><br><span class="line">n = <span class="number">4</span></span><br><span class="line">M = np.logical_and.reduce(np.mod(X, <span class="number">1</span>) == <span class="number">0</span>, axis=<span class="number">-1</span>)</span><br><span class="line">M &amp;= (X.sum(axis=<span class="number">-1</span>) == n)</span><br><span class="line">print(X[M])</span><br></pre></td></tr></table></figure><h4 id="100-Compute-bootstrapped-95-confidence-intervals-for-the-mean-of-a-1D-array-X-i-e-resample-the-elements-of-an-array-with-replacement-N-times-compute-the-mean-of-each-sample-and-then-compute-percentiles-over-the-means-★★★"><a href="#100-Compute-bootstrapped-95-confidence-intervals-for-the-mean-of-a-1D-array-X-i-e-resample-the-elements-of-an-array-with-replacement-N-times-compute-the-mean-of-each-sample-and-then-compute-percentiles-over-the-means-★★★" class="headerlink" title="100. Compute bootstrapped 95% confidence intervals for the mean of a 1D array X (i.e., resample the elements of an array with replacement N times, compute the mean of each sample, and then compute percentiles over the means). (★★★)"></a>100. Compute bootstrapped 95% confidence intervals for the mean of a 1D array X (i.e., resample the elements of an array with replacement N times, compute the mean of each sample, and then compute percentiles over the means). (★★★)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Author: Jessica B. Hamrick</span></span><br><span class="line"></span><br><span class="line">X = np.random.randn(<span class="number">100</span>) <span class="comment"># random 1D array</span></span><br><span class="line">N = <span class="number">1000</span> <span class="comment"># number of bootstrap samples</span></span><br><span class="line">idx = np.random.randint(<span class="number">0</span>, X.size, (N, X.size))</span><br><span class="line">means = X[idx].mean(axis=<span class="number">1</span>)</span><br><span class="line">confint = np.percentile(means, [<span class="number">2.5</span>, <span class="number">97.5</span>])</span><br><span class="line">print(confint)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;This-is-a-collection-of-exercises-that-have-been-collected-in-the-numpy-mailing-list-on-stack-overflow-and-in-the-numpy-documentation-The-goal-of-this-collection-is-to-offer-a-quick-reference-for-both-old-and-new-users-but-also-to-provide-a-set-of-exercises-for-those-who-teach-If-you-find-an-error-or-think-you’ve-a-better-way-to-solve-some-of-them-feel-free-to-open-an-issue-at-https-github-com-rougier-numpy-100&quot;&gt;&lt;a href=&quot;#This-is-a-collection-of-exercises-that-have-been-collected-in-the-numpy-mailing-list-on-stack-overflow-and-in-the-numpy-documentation-The-goal-of-this-collection-is-to-offer-a-quick-reference-for-both-old-and-new-users-but-also-to-provide-a-set-of-exercises-for-those-who-teach-If-you-find-an-error-or-think-you’ve-a-better-way-to-solve-some-of-them-feel-free-to-open-an-issue-at-https-github-com-rougier-numpy-100&quot; class=&quot;headerlink&quot; title=&quot;This is a collection of exercises that have been collected in the numpy mailing list, on stack overflow and in the numpy documentation. The goal of this collection is to offer a quick reference for both old and new users but also to provide a set of exercises for those who teach.If you find an error or think you’ve a better way to solve some of them, feel free to open an issue at https://github.com/rougier/numpy-100&quot;&gt;&lt;/a&gt;This is a collection of exercises that have been collected in the numpy mailing list, on stack overflow and in the numpy documentation. The goal of this collection is to offer a quick reference for both old and new users but also to provide a set of exercises for those who teach.If you find an error or think you’ve a better way to solve some of them, feel free to open an issue at &lt;a href=&quot;https://github.com/rougier/numpy-100&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/rougier/numpy-100&lt;/a&gt;&lt;/h6&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://weixian13.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="题目" scheme="https://weixian13.github.io/tags/%E9%A2%98%E7%9B%AE/"/>
    
      <category term="Python" scheme="https://weixian13.github.io/tags/Python/"/>
    
      <category term="Numpy" scheme="https://weixian13.github.io/tags/Numpy/"/>
    
  </entry>
  
  <entry>
    <title>网站图标设计</title>
    <link href="https://weixian13.github.io/2019/06/27/%E7%BD%91%E7%AB%99%E5%9B%BE%E6%A0%87%E8%AE%BE%E8%AE%A1/"/>
    <id>https://weixian13.github.io/2019/06/27/网站图标设计/</id>
    <published>2019-06-27T08:25:18.000Z</published>
    <updated>2020-10-30T06:14:58.088Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>使用Hexo+yilia主题添加网站图标</p></blockquote><h6 id="为了让自己的网站个性化一点，我们可以添加网站图标"><a href="#为了让自己的网站个性化一点，我们可以添加网站图标" class="headerlink" title="为了让自己的网站个性化一点，我们可以添加网站图标"></a>为了让自己的<a href="https://weixian.site" target="_blank" rel="noopener">网站</a>个性化一点，我们可以添加网站图标</h6><h6 id="下面说下具体步骤"><a href="#下面说下具体步骤" class="headerlink" title="下面说下具体步骤:"></a>下面说下具体步骤:</h6><h6 id="1-制作Icon图标"><a href="#1-制作Icon图标" class="headerlink" title="(1)制作Icon图标"></a><strong>(1)制作Icon图标</strong></h6><h6 id="首先进入这个网站寻找喜欢的图片，点进去并下载下来，此时的格式为SVG，我们需要转换一下格式，你也可以直接在这个网站下载Icon格式的图片。下面在这个网站转换成JPG-PNG-JPEG-GIF等格式。接下来我们需要将转换后的格式再转换为icon格式，选择进入这个网站转换，尺寸选32X32，到目前为止，Icon图标就制作好了，接下来进入下一步"><a href="#首先进入这个网站寻找喜欢的图片，点进去并下载下来，此时的格式为SVG，我们需要转换一下格式，你也可以直接在这个网站下载Icon格式的图片。下面在这个网站转换成JPG-PNG-JPEG-GIF等格式。接下来我们需要将转换后的格式再转换为icon格式，选择进入这个网站转换，尺寸选32X32，到目前为止，Icon图标就制作好了，接下来进入下一步" class="headerlink" title="首先进入这个网站寻找喜欢的图片，点进去并下载下来，此时的格式为SVG，我们需要转换一下格式，你也可以直接在这个网站下载Icon格式的图片。下面在这个网站转换成JPG/PNG/JPEG/GIF等格式。接下来我们需要将转换后的格式再转换为icon格式，选择进入这个网站转换，尺寸选32X32，到目前为止，Icon图标就制作好了，接下来进入下一步"></a>首先进入<a href="https://fontawesome.com/" target="_blank" rel="noopener">这个网站</a>寻找喜欢的图片，点进去并下载下来，此时的格式为SVG，我们需要转换一下格式，你也可以直接在<a href="https://www.easyicon.net" target="_blank" rel="noopener">这个网站</a>下载Icon格式的图片。下面在<a href="https://cloudconvert.com/svg-to-jpg" target="_blank" rel="noopener">这个网站</a>转换成JPG/PNG/JPEG/GIF等格式。<a id="more"></a>接下来我们需要将转换后的格式再转换为icon格式，选择进入<a href="http://www.bitbug.net/" target="_blank" rel="noopener">这个网站</a>转换，尺寸选32X32，到目前为止，Icon图标就制作好了，接下来进入下一步</h6><h6 id="（2）生成网站图标"><a href="#（2）生成网站图标" class="headerlink" title="（2）生成网站图标"></a><strong>（2）生成网站图标</strong></h6><h6 id="将下载好的Icon图标放入-themes-yilia-source-assets-img-这个目录下。"><a href="#将下载好的Icon图标放入-themes-yilia-source-assets-img-这个目录下。" class="headerlink" title="将下载好的Icon图标放入/themes/yilia/source/assets/img/ 这个目录下。"></a>将下载好的Icon图标放入<code>/themes/yilia/source/assets/img/</code> 这个目录下。</h6><h6 id="打开-themes-yilia-config-yml，将favicon设置为favicon-assets-img-favicon-ico，其中favicon-ico为图片名称格式。"><a href="#打开-themes-yilia-config-yml，将favicon设置为favicon-assets-img-favicon-ico，其中favicon-ico为图片名称格式。" class="headerlink" title="打开/themes/yilia/_config.yml，将favicon设置为favicon: /assets/img/favicon.ico，其中favicon.ico为图片名称格式。"></a>打开<code>/themes/yilia/_config.yml</code>，将favicon设置为<code>favicon: /assets/img/favicon.ico</code>，其中favicon.ico为图片名称格式。</h6><h6 id="按以上步骤来就弄完了，重新部署一下即可看到效果了。"><a href="#按以上步骤来就弄完了，重新部署一下即可看到效果了。" class="headerlink" title="按以上步骤来就弄完了，重新部署一下即可看到效果了。"></a>按以上步骤来就弄完了，重新部署一下即可看到效果了。</h6><hr>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;使用Hexo+yilia主题添加网站图标&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6 id=&quot;为了让自己的网站个性化一点，我们可以添加网站图标&quot;&gt;&lt;a href=&quot;#为了让自己的网站个性化一点，我们可以添加网站图标&quot; class=&quot;headerlink&quot; title=&quot;为了让自己的网站个性化一点，我们可以添加网站图标&quot;&gt;&lt;/a&gt;为了让自己的&lt;a href=&quot;https://weixian.site&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;网站&lt;/a&gt;个性化一点，我们可以添加网站图标&lt;/h6&gt;&lt;h6 id=&quot;下面说下具体步骤&quot;&gt;&lt;a href=&quot;#下面说下具体步骤&quot; class=&quot;headerlink&quot; title=&quot;下面说下具体步骤:&quot;&gt;&lt;/a&gt;下面说下具体步骤:&lt;/h6&gt;&lt;h6 id=&quot;1-制作Icon图标&quot;&gt;&lt;a href=&quot;#1-制作Icon图标&quot; class=&quot;headerlink&quot; title=&quot;(1)制作Icon图标&quot;&gt;&lt;/a&gt;&lt;strong&gt;(1)制作Icon图标&lt;/strong&gt;&lt;/h6&gt;&lt;h6 id=&quot;首先进入这个网站寻找喜欢的图片，点进去并下载下来，此时的格式为SVG，我们需要转换一下格式，你也可以直接在这个网站下载Icon格式的图片。下面在这个网站转换成JPG-PNG-JPEG-GIF等格式。接下来我们需要将转换后的格式再转换为icon格式，选择进入这个网站转换，尺寸选32X32，到目前为止，Icon图标就制作好了，接下来进入下一步&quot;&gt;&lt;a href=&quot;#首先进入这个网站寻找喜欢的图片，点进去并下载下来，此时的格式为SVG，我们需要转换一下格式，你也可以直接在这个网站下载Icon格式的图片。下面在这个网站转换成JPG-PNG-JPEG-GIF等格式。接下来我们需要将转换后的格式再转换为icon格式，选择进入这个网站转换，尺寸选32X32，到目前为止，Icon图标就制作好了，接下来进入下一步&quot; class=&quot;headerlink&quot; title=&quot;首先进入这个网站寻找喜欢的图片，点进去并下载下来，此时的格式为SVG，我们需要转换一下格式，你也可以直接在这个网站下载Icon格式的图片。下面在这个网站转换成JPG/PNG/JPEG/GIF等格式。接下来我们需要将转换后的格式再转换为icon格式，选择进入这个网站转换，尺寸选32X32，到目前为止，Icon图标就制作好了，接下来进入下一步&quot;&gt;&lt;/a&gt;首先进入&lt;a href=&quot;https://fontawesome.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这个网站&lt;/a&gt;寻找喜欢的图片，点进去并下载下来，此时的格式为SVG，我们需要转换一下格式，你也可以直接在&lt;a href=&quot;https://www.easyicon.net&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这个网站&lt;/a&gt;下载Icon格式的图片。下面在&lt;a href=&quot;https://cloudconvert.com/svg-to-jpg&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这个网站&lt;/a&gt;转换成JPG/PNG/JPEG/GIF等格式。&lt;/h6&gt;
    
    </summary>
    
    
      <category term="网站" scheme="https://weixian13.github.io/tags/%E7%BD%91%E7%AB%99/"/>
    
      <category term="Hexo" scheme="https://weixian13.github.io/tags/Hexo/"/>
    
      <category term="Yilia" scheme="https://weixian13.github.io/tags/Yilia/"/>
    
  </entry>
  
  <entry>
    <title>Hexo撰写文章</title>
    <link href="https://weixian13.github.io/2019/06/27/Hexo%E6%92%B0%E5%86%99%E6%96%87%E7%AB%A0/"/>
    <id>https://weixian13.github.io/2019/06/27/Hexo撰写文章/</id>
    <published>2019-06-27T01:43:28.000Z</published>
    <updated>2020-11-25T03:47:27.458Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-创建文章"><a href="#1-创建文章" class="headerlink" title="1.创建文章"></a>1.创建文章</h1><h2 id="站点目录下输入如下命令创建文章"><a href="#站点目录下输入如下命令创建文章" class="headerlink" title="站点目录下输入如下命令创建文章"></a>站点目录下输入如下命令创建文章</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"title"</span></span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="2-使用Markdown编写文章"><a href="#2-使用Markdown编写文章" class="headerlink" title="2.使用Markdown编写文章"></a>2.使用Markdown编写文章</h1><h2 id="这里推荐一款Markdown编辑器-Typora"><a href="#这里推荐一款Markdown编辑器-Typora" class="headerlink" title="这里推荐一款Markdown编辑器-Typora"></a>这里推荐一款Markdown编辑器-<a href="https://www.typora.io/" target="_blank" rel="noopener">Typora</a></h2><h3 id="1-标题"><a href="#1-标题" class="headerlink" title="(1)标题"></a>(1)标题</h3><h4 id="Markdown语法："><a href="#Markdown语法：" class="headerlink" title="Markdown语法："></a>Markdown语法：</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure><h4 id="Typora-快捷键："><a href="#Typora-快捷键：" class="headerlink" title="Typora 快捷键："></a>Typora 快捷键：</h4><h4 id="Command-1：一级标题"><a href="#Command-1：一级标题" class="headerlink" title="Command+1：一级标题"></a>Command+1：一级标题</h4><h4 id="Command-2：二级标题"><a href="#Command-2：二级标题" class="headerlink" title="Command+2：二级标题"></a>Command+2：二级标题</h4><h4 id="Command-3：三级标题"><a href="#Command-3：三级标题" class="headerlink" title="Command+3：三级标题"></a>Command+3：三级标题</h4><h4 id="Command-4：四级标题"><a href="#Command-4：四级标题" class="headerlink" title="Command+4：四级标题"></a>Command+4：四级标题</h4><h4 id="Command-5：五级标题"><a href="#Command-5：五级标题" class="headerlink" title="Command+5：五级标题"></a>Command+5：五级标题</h4><h4 id="Command-6：六级标题"><a href="#Command-6：六级标题" class="headerlink" title="Command+6：六级标题"></a>Command+6：六级标题</h4><h4 id="Command-0：段落"><a href="#Command-0：段落" class="headerlink" title="Command+0：段落"></a>Command+0：段落</h4><h4 id="Command-：提升标题级别"><a href="#Command-：提升标题级别" class="headerlink" title="Command+=：提升标题级别"></a>Command+=：提升标题级别</h4><h4 id="Command-：降低标题级别"><a href="#Command-：降低标题级别" class="headerlink" title="Command+-：降低标题级别"></a>Command+-：降低标题级别</h4><h3 id="2-格式"><a href="#2-格式" class="headerlink" title="(2)格式"></a>(2)格式</h3><h4 id="Markdown-语法："><a href="#Markdown-语法：" class="headerlink" title="Markdown 语法："></a>Markdown 语法：</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜体*</span></span><br><span class="line"><span class="strong">**粗体**</span></span><br><span class="line"><span class="strong">***加粗斜体**</span>*</span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure><h4 id="Typora-快捷键：-1"><a href="#Typora-快捷键：-1" class="headerlink" title="Typora 快捷键："></a>Typora 快捷键：</h4><h4 id="Command-I：斜体"><a href="#Command-I：斜体" class="headerlink" title="Command+I：斜体"></a>Command+I：斜体</h4><h4 id="Command-B：粗体"><a href="#Command-B：粗体" class="headerlink" title="Command+B：粗体"></a>Command+B：粗体</h4><h4 id="Command-U：下划线"><a href="#Command-U：下划线" class="headerlink" title="Command+U：下划线"></a>Command+U：下划线</h4><h4 id="Control-M：内联公式"><a href="#Control-M：内联公式" class="headerlink" title="Control+M：内联公式"></a>Control+M：内联公式</h4><h4 id="Control-Shift-5：删除线"><a href="#Control-Shift-5：删除线" class="headerlink" title="Control+Shift+5：删除线"></a>Control+Shift+5：删除线</h4><h4 id="Control-：注释"><a href="#Control-：注释" class="headerlink" title="Control+-：注释"></a>Control+-：注释</h4><h4 id="Command-K：超链接"><a href="#Command-K：超链接" class="headerlink" title="Command+K：超链接"></a>Command+K：超链接</h4><h4 id="Control-Comand-I：图像"><a href="#Control-Comand-I：图像" class="headerlink" title="Control+Comand+I：图像"></a>Control+Comand+I：图像</h4><h4 id="Control-：清除样式"><a href="#Control-：清除样式" class="headerlink" title="Control+/：清除样式"></a>Control+/：清除样式</h4><h3 id="3-代码块"><a href="#3-代码块" class="headerlink" title="(3)代码块"></a>(3)代码块</h3><p>Markdown 语法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`行内代码`</span></span><br><span class="line"></span><br><span class="line"><span class="code">```</span></span><br><span class="line"><span class="code">多行代码</span></span><br><span class="line"><span class="code">多行代码</span></span><br><span class="line"><span class="code">```</span></span><br><span class="line"></span><br><span class="line">$$</span><br><span class="line">公式块</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><h4 id="Typora-快捷键：-2"><a href="#Typora-快捷键：-2" class="headerlink" title="Typora 快捷键："></a>Typora 快捷键：</h4><h4 id="行内代码：Control"><a href="#行内代码：Control" class="headerlink" title="行内代码：Control+`"></a>行内代码：Control+`</h4><h4 id="多行代码：Option-Command-C"><a href="#多行代码：Option-Command-C" class="headerlink" title="多行代码：Option+Command+C"></a>多行代码：Option+Command+C</h4><h4 id="公式块：Option-Command-B"><a href="#公式块：Option-Command-B" class="headerlink" title="公式块：Option+Command+B"></a>公式块：Option+Command+B</h4><h3 id="4-引用"><a href="#4-引用" class="headerlink" title="(4)引用"></a>(4)引用</h3><h4 id="Markdown-语法：-1"><a href="#Markdown-语法：-1" class="headerlink" title="Markdown 语法："></a><strong>Markdown 语法：</strong></h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 文字引用</span></span><br><span class="line"></span><br><span class="line">[<span class="symbol">链接引用</span>]:<span class="link">链接.com</span></span><br></pre></td></tr></table></figure><h4 id="Typora-快捷键：-3"><a href="#Typora-快捷键：-3" class="headerlink" title="Typora 快捷键："></a>Typora 快捷键：</h4><h4 id="文字引用：Option-Command-Q"><a href="#文字引用：Option-Command-Q" class="headerlink" title="文字引用：Option+Command+Q"></a>文字引用：Option+Command+Q</h4><h4 id="链接引用：Option-Command-L"><a href="#链接引用：Option-Command-L" class="headerlink" title="链接引用：Option+Command+L"></a>链接引用：Option+Command+L</h4><h3 id="5-列表和分割线"><a href="#5-列表和分割线" class="headerlink" title="(5)列表和分割线"></a>(5)列表和分割线</h3><h4 id="Markdown-语法：-2"><a href="#Markdown-语法：-2" class="headerlink" title="Markdown 语法："></a><strong>Markdown 语法：</strong></h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>有序列表</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>无序列表</span><br><span class="line"></span><br><span class="line">------ 水平分割线</span><br></pre></td></tr></table></figure><h4 id="Typora-快捷键：-4"><a href="#Typora-快捷键：-4" class="headerlink" title="Typora 快捷键："></a><strong>Typora 快捷键：</strong></h4><h4 id="有序列表：Option-Command-O"><a href="#有序列表：Option-Command-O" class="headerlink" title="有序列表：Option+Command+O"></a>有序列表：Option+Command+O</h4><h4 id="无序列表：Option-Command-U"><a href="#无序列表：Option-Command-U" class="headerlink" title="无序列表：Option+Command+U"></a>无序列表：Option+Command+U</h4><h4 id="水平分割线：Shift-Command"><a href="#水平分割线：Shift-Command" class="headerlink" title="水平分割线：Shift+Command+-"></a>水平分割线：Shift+Command+-</h4><h3 id="6-脚注"><a href="#6-脚注" class="headerlink" title="(6)脚注"></a>(6)脚注</h3><h4 id="Markdown-语法：-3"><a href="#Markdown-语法：-3" class="headerlink" title="Markdown 语法："></a><strong>Markdown 语法：</strong></h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">^</span>]: <span class="link">这里放描述</span></span><br></pre></td></tr></table></figure><h4 id="Typora-快捷键：-5"><a href="#Typora-快捷键：-5" class="headerlink" title="Typora 快捷键："></a><strong>Typora 快捷键：</strong></h4><h4 id="脚注：Option-Command-R"><a href="#脚注：Option-Command-R" class="headerlink" title="脚注：Option+Command+R"></a>脚注：Option+Command+R</h4><h3 id="7-设置首页显示"><a href="#7-设置首页显示" class="headerlink" title="(7)设置首页显示"></a>(7)设置首页显示</h3><h4 id="使用-Hexo-框架搭建的博客网站中，首页会显示文章的内容，且默认显示文章的全部内容如果当文章太长的时候就会显得十分冗余，所以我们有必要对其进行精简这时，我们只需在文章中使用-lt-more-gt-标志即可，表示只会显示标志前面的内容"><a href="#使用-Hexo-框架搭建的博客网站中，首页会显示文章的内容，且默认显示文章的全部内容如果当文章太长的时候就会显得十分冗余，所以我们有必要对其进行精简这时，我们只需在文章中使用-lt-more-gt-标志即可，表示只会显示标志前面的内容" class="headerlink" title="使用 Hexo 框架搭建的博客网站中，首页会显示文章的内容，且默认显示文章的全部内容如果当文章太长的时候就会显得十分冗余，所以我们有必要对其进行精简这时，我们只需在文章中使用 &lt;!--more--&gt; 标志即可，表示只会显示标志前面的内容"></a>使用 Hexo 框架搭建的博客网站中，首页会显示文章的内容，且默认显示文章的全部内容如果当文章太长的时候就会显得十分冗余，所以我们有必要对其进行精简这时，我们只需在文章中使用 <code>&lt;!--more--&gt;</code> 标志即可，表示只会显示标志前面的内容</h4>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-创建文章&quot;&gt;&lt;a href=&quot;#1-创建文章&quot; class=&quot;headerlink&quot; title=&quot;1.创建文章&quot;&gt;&lt;/a&gt;1.创建文章&lt;/h1&gt;&lt;h2 id=&quot;站点目录下输入如下命令创建文章&quot;&gt;&lt;a href=&quot;#站点目录下输入如下命令创建文章&quot; class=&quot;headerlink&quot; title=&quot;站点目录下输入如下命令创建文章&quot;&gt;&lt;/a&gt;站点目录下输入如下命令创建文章&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Markdown" scheme="https://weixian13.github.io/tags/Markdown/"/>
    
      <category term="Typora" scheme="https://weixian13.github.io/tags/Typora/"/>
    
  </entry>
  
  <entry>
    <title>随笔</title>
    <link href="https://weixian13.github.io/2019/06/26/%E9%9A%8F%E7%AC%94/"/>
    <id>https://weixian13.github.io/2019/06/26/随笔/</id>
    <published>2019-06-26T13:08:31.000Z</published>
    <updated>2020-11-28T14:43:47.490Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder=" 请输入密码查看当前文章！">    <label for="pass"> 请输入密码查看当前文章！</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      ---个人记录---
    
    </summary>
    
    
      <category term="记录" scheme="https://weixian13.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="随笔" scheme="https://weixian13.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="个人" scheme="https://weixian13.github.io/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
</feed>
